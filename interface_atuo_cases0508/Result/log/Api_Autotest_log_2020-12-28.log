2020-12-28 09:15:25,934-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 09:15:25,936-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 09:15:26,250-[INFO]-logger.py-Unit_test-日志信息:当前使用的用例表单：Sheet4
2020-12-28 09:15:26,622-[INFO]-logger.py-readExcel-日志信息:获取表单成功：<Worksheet "Sheet4">
2020-12-28 09:15:26,626-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:15:26,629-[INFO]-logger.py-Unit_test-日志信息:正在执行第24条用例:【腾讯健康】1-查询机构列表-成功
2020-12-28 09:15:26,630-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/org/list；method：GET；data：{"cityId":"340700"}；sql：{}
2020-12-28 09:15:26,635-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 09:15:26,671-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 09:15:26,672-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:15:26,798-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [{'addr': '安徽省铜陵市市辖区义安区人民北路39号', 'cityName': '铜陵市', 'district': '市辖区', 'id': 'HL00027', 'latitude': '45.0', 'level': '二甲', 'longitude': '140.0', 'name': '铜陵市第五人民医院'}, {'addr': '安徽省铜陵市铜官山区长江中路1021号(老院区）', 'cityName': '铜陵市', 'district': '铜官山区', 'id': 'HL00001', 'latitude': '45.3', 'level': '三甲', 'longitude': '140.0', 'name': '铜陵市中医医院'}], 'message': '成功'}
2020-12-28 09:15:26,802-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.16892s
2020-12-28 09:15:26,804-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:15:26,808-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.16892, 'data': [{'addr': '安徽省铜陵市市辖区义安区人民北路39号', 'cityName': '铜陵市', 'district': '市辖区', 'id': 'HL00027', 'latitude': '45.0', 'level': '二甲', 'longitude': '140.0', 'name': '铜陵市第五人民医院'}, {'addr': '安徽省铜陵市铜官山区长江中路1021号(老院区）', 'cityName': '铜陵市', 'district': '铜官山区', 'id': 'HL00001', 'latitude': '45.3', 'level': '三甲', 'longitude': '140.0', 'name': '铜陵市中医医院'}], 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:15:27,629-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:15:27,630-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:15:27,632-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:15:27,633-[INFO]-logger.py-Unit_test-日志信息:正在执行第25条用例:【腾讯健康】2-查询机构列表-必填行政区划代码字段为空-失败
2020-12-28 09:15:27,635-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/org/list；method：GET；data：{"cityId":""}；sql：{}
2020-12-28 09:15:27,636-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 09:15:27,686-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 09:15:27,687-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:15:27,720-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '10001', 'errorMsg': 'For input string: ""', 'result': None, 'success': False}
2020-12-28 09:15:27,723-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.085975s
2020-12-28 09:15:27,725-[INFO]-logger.py-Unit_test-日志信息:接口返回message:For input string: ""
2020-12-28 09:15:27,728-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:10001
2020-12-28 09:15:27,733-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.085975, 'data': 'For input string: ""', 'code': '10001', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:15:28,664-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:15:28,665-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:15:28,667-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:15:28,668-[INFO]-logger.py-Unit_test-日志信息:正在执行第26条用例:【腾讯健康】3-查询机构列表-行政区划代码字段缺少-失败
2020-12-28 09:15:28,670-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/org/list；method：GET；data：{}；sql：{}
2020-12-28 09:15:28,671-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 09:15:28,708-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 09:15:28,709-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:15:28,744-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为cityId', 'result': None, 'success': False}
2020-12-28 09:15:28,745-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.074549s
2020-12-28 09:15:28,747-[INFO]-logger.py-Unit_test-日志信息:接口返回message:缺少必要参数,参数名称为cityId
2020-12-28 09:15:28,748-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 09:15:28,749-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.074549, 'data': '缺少必要参数,参数名称为cityId', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:15:29,622-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:15:29,623-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:15:29,625-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:15:29,626-[INFO]-logger.py-Unit_test-日志信息:正在执行第27条用例:【腾讯健康】4-查询机构列表-str行政区划代码字段为int-失败
2020-12-28 09:15:29,627-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/org/list；method：GET；data：{"cityId":340700}；sql：{}
2020-12-28 09:15:29,628-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 09:15:29,671-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 09:15:29,672-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:15:29,732-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [{'addr': '安徽省铜陵市市辖区义安区人民北路39号', 'cityName': '铜陵市', 'district': '市辖区', 'id': 'HL00027', 'latitude': '45.0', 'level': '二甲', 'longitude': '140.0', 'name': '铜陵市第五人民医院'}, {'addr': '安徽省铜陵市铜官山区长江中路1021号(老院区）', 'cityName': '铜陵市', 'district': '铜官山区', 'id': 'HL00001', 'latitude': '45.3', 'level': '三甲', 'longitude': '140.0', 'name': '铜陵市中医医院'}], 'message': '成功'}
2020-12-28 09:15:29,733-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.104947s
2020-12-28 09:15:29,734-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 09:15:30,670-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:15:30,671-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:15:30,677-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:15:30,678-[INFO]-logger.py-Unit_test-日志信息:正在执行第28条用例:【腾讯健康】5-查询机构列表-必填无效行政区划代码-失败
2020-12-28 09:15:30,679-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/org/list；method：GET；data：{"cityId":"999999"}；sql：{}
2020-12-28 09:15:30,681-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 09:15:30,717-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 09:15:30,719-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:15:30,751-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [], 'message': '成功'}
2020-12-28 09:15:30,752-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.071933s
2020-12-28 09:15:30,753-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 09:15:31,679-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:15:31,681-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:15:31,685-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:15:31,686-[INFO]-logger.py-Unit_test-日志信息:正在执行第29条用例:【腾讯健康】1-查询医院标签-成功
2020-12-28 09:15:31,687-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/org/tag；method：GET；data：{"cityId":"340700"}；sql：{}
2020-12-28 09:15:31,688-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 09:15:31,726-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 09:15:31,728-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:15:31,776-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [{'id': 'HL00027', 'name': '铜陵市第五人民医院', 'tag': ['settag002']}, {'id': 'HL00001', 'name': '铜陵市中医医院', 'tag': ['settag001', 'settag002', 'settag003', 'settag004', 'settag005']}], 'message': '成功'}
2020-12-28 09:15:31,779-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.08997s
2020-12-28 09:15:31,782-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:15:31,784-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.08997, 'data': [{'id': 'HL00027', 'name': '铜陵市第五人民医院', 'tag': ['settag002']}, {'id': 'HL00001', 'name': '铜陵市中医医院', 'tag': ['settag001', 'settag002', 'settag003', 'settag004', 'settag005']}], 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:15:32,681-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:15:32,683-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:15:32,684-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:15:32,685-[INFO]-logger.py-Unit_test-日志信息:正在执行第30条用例:【腾讯健康】2-查询医院标签-必填行政区划代码字段为空-失败
2020-12-28 09:15:32,686-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/org/tag；method：GET；data：{"cityId":""}；sql：{}
2020-12-28 09:15:32,688-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 09:15:32,728-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 09:15:32,730-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:15:32,764-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '10001', 'errorMsg': 'For input string: ""', 'result': None, 'success': False}
2020-12-28 09:15:32,768-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.07798s
2020-12-28 09:15:32,772-[INFO]-logger.py-Unit_test-日志信息:接口返回message:For input string: ""
2020-12-28 09:15:32,776-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:10001
2020-12-28 09:15:32,780-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.07798, 'data': 'For input string: ""', 'code': '10001', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:15:33,740-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:15:33,741-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:15:33,743-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:15:33,744-[INFO]-logger.py-Unit_test-日志信息:正在执行第31条用例:【腾讯健康】3-查询医院标签-行政区划代码字段缺少-失败
2020-12-28 09:15:33,745-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/org/tag；method：GET；data：{}；sql：{}
2020-12-28 09:15:33,746-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 09:15:33,785-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 09:15:33,786-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:15:33,824-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为cityId', 'result': None, 'success': False}
2020-12-28 09:15:33,829-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.081958s
2020-12-28 09:15:33,832-[INFO]-logger.py-Unit_test-日志信息:接口返回message:缺少必要参数,参数名称为cityId
2020-12-28 09:15:33,835-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 09:15:33,837-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.081958, 'data': '缺少必要参数,参数名称为cityId', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:15:34,770-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:15:34,771-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:15:34,772-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:15:34,773-[INFO]-logger.py-Unit_test-日志信息:正在执行第32条用例:【腾讯健康】4-查询医院标签-str行政区划代码字段为int-失败
2020-12-28 09:15:34,774-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/org/tag；method：GET；data：{"cityId":340700}；sql：{}
2020-12-28 09:15:34,776-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 09:15:34,823-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 09:15:34,824-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:15:34,873-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [{'id': 'HL00027', 'name': '铜陵市第五人民医院', 'tag': ['settag002']}, {'id': 'HL00001', 'name': '铜陵市中医医院', 'tag': ['settag001', 'settag002', 'settag003', 'settag004', 'settag005']}], 'message': '成功'}
2020-12-28 09:15:34,877-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.09895s
2020-12-28 09:15:34,882-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 09:15:35,779-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:15:35,780-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:15:35,784-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:15:35,785-[INFO]-logger.py-Unit_test-日志信息:正在执行第33条用例:【腾讯健康】5-查询医院标签-必填无效行政区划代码-失败
2020-12-28 09:15:35,787-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/org/tag；method：GET；data：{"cityId":"999999"}；sql：{}
2020-12-28 09:15:35,788-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 09:15:35,825-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 09:15:35,827-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:15:35,855-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [], 'message': '成功'}
2020-12-28 09:15:35,856-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.067948s
2020-12-28 09:15:35,857-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 09:15:36,805-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:15:36,806-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:21:42,868-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 09:21:42,870-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 09:21:42,896-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 09:21:42,946-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 09:21:42,947-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:21:43,008-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [], 'message': '成功'}
2020-12-28 09:23:05,457-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 09:23:05,458-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 09:23:05,485-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 09:23:05,529-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 09:23:05,530-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:23:05,587-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为orgId', 'result': None, 'success': False}
2020-12-28 09:25:23,600-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 09:25:23,602-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 09:25:23,629-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 09:25:23,675-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 09:25:23,676-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:25:23,725-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [], 'message': '成功'}
2020-12-28 09:26:40,524-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 09:26:40,526-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 09:26:40,551-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 09:26:40,598-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 09:26:40,599-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:26:40,694-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [], 'message': '成功'}
2020-12-28 09:31:29,976-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 09:31:29,978-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 09:31:30,001-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:31:30,059-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:31:30,060-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:31:30,080-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:31:30,082-[INFO]-logger.py-all_method-日志信息:团检套餐详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/suite/v2/newGoodsPkg/14618
2020-12-28 09:31:30,167-[INFO]-logger.py-all_method-日志信息:团检套餐详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'aliDetailImage': '', 'aliDiscount': 0.0, 'aliFeatureItem': '', 'aliLabels': '', 'aliListImage': None, 'aliPkgDesc': '', 'aliSalePrice': None, 'aliSettlementPrice': None, 'categoryLevelOne': 1, 'categoryLevelTwo': 34, 'examItemList': '[{"examFeeItemID":"HY0039","examFeeItemName":"血HCG","optionType":1,"price":3300,"salePrice":0.02,"salePriceStr":"0.02"},{"examFeeItemID":"HY0045","examFeeItemName":"总胆固醇","optionType":1,"price":600,"salePrice":0.30,"salePriceStr":"0.30"},{"examFeeItemID":"MR0001","examFeeItemName":"1.0腰椎核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"MR0010","examFeeItemName":"1.0右膝关节核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WG0002","examFeeItemName":"耳鼻喉科检查","optionType":1,"price":800,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2.00,"salePriceStr":"2"},{"examFeeItemID":"WK0001","examFeeItemName":"外科检查","optionType":1,"price":500,"salePrice":100.00,"salePriceStr":"100"}]', 'examSuiteId': None, 'frequent': 0, 'genderRequire': 0, 'groupSale': 0, 'hospitalSettlePrice': None, 'images': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'itemDesc': '<h6>心胸肺及腰椎</h6><p><strong>耳鼻喉科检查</strong></p><h6>泌尿生殖</h6><p><strong>1.0腰椎核磁</strong></p><h6>肿瘤生化</h6><p><strong>总胆固醇</strong> <strong>外科检查</strong></p><h6>胃部疾病检查</h6><p><strong>电子胃镜</strong> <strong>1.0右膝关节核磁</strong></p><h6>女性检查</h6><p><strong>血HCG</strong></p>', 'itemDescType': 0, 'marryRequire': 0, 'needCardNo': 1, 'notice': '{"notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。","notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。"}', 'operatorName': None, 'optimisticLockId': '2598', 'optimisticLockVersion': 1609117823000, 'pkgBaseId': None, 'pkgDesc': '<p><img src="https://file.helianhealth.com/manager/pkg/desc_default.jpg"></p>', 'pkgFrom': None, 'pkgId': 2598, 'pkgItemDiscount': 1.0, 'pkgName': '界面自动化团检套餐', 'pkgSyn': True, 'price': 112.33, 'recommendLabel': '', 'salePrice': 50.0, 'salesVolume': 185, 'skuId': 14661, 'spuId': 14618, 'stationId': 'HL99998', 'suitableLabel': '', 'supportAddition': 1, 'thumbnail': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'valid': 365, 'wxSale': 0}, 'success': True}
2020-12-28 09:31:30,168-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609117823000,时间戳id:2598
2020-12-28 09:32:41,981-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 09:32:41,982-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 09:32:42,006-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:32:42,057-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:32:42,058-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:32:42,092-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:41:46,406-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 09:41:46,408-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 09:41:46,432-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:41:46,491-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:41:46,492-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:41:46,519-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:41:46,520-[INFO]-logger.py-all_method-日志信息:获取机构详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/detail?stationId=HL99998
2020-12-28 09:41:46,607-[INFO]-logger.py-all_method-日志信息:获取机构详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'activatePerformanceStatistic': 1, 'addItemConf': '10', 'addressDetail': '浙江省杭州市西湖区杭州绿城育华小学1231231请问请问呃企鹅企鹅企鹅请问驱蚊器驱蚊器', 'agreement': None, 'aliNotice': None, 'aliStatus': 2, 'alias': '', 'areaCode': 330106, 'areaDetail': '杭州绿城育华小学1231231请问请问呃企鹅企鹅企鹅请问驱蚊器驱蚊器', 'artificialDecode': 1, 'attention': '1、体检前3天不要大量饮酒、不要进食动物内脏、清淡饮食，拒绝暴饮暴食、少吃高脂、高糖、高蛋白食物，避免熬夜或短期剧烈运动。\n2、空腹8小时以上，体检前一天晚22:00点后，不再进食任何食物，可少量饮水，直至空腹项目（抽血、肝胆B超、胃肠道检查）检查完成。\n3、糖尿病、高血压等心血管慢性疾病者，应按时吃药，少量饮水送服即可，避免因停药而发生意外。\n4、体检当天衣着宽松，不建议佩戴隐形眼睛、首饰等', 'auditSync': 0, 'behalfPassword': '111111', 'businessLicense': None, 'cityCode': 330100, 'companySmsOpen': 0, 'contactName': '1', 'contactTel': '1', 'createTime': 1580960818000, 'crmId': 'M0000029', 'detail': "去问问群翁群翁群翁群恶趣味群无而且未请问额请问额请问请问额请问而且未去未请问去额请问 请问请问额请问请问额请问请问\n换行了\n空格里    切尔奇翁群翁群二群无请问去请问请问\n1231231\n3\n123\n！@#~￥%……&*（）——+|}{}：“”？》《》~\n`,.<>?\n|+_)(*&^%$@#/';]\\\n恶趣味群无请问青蔷薇\n企鹅企鹅 请问\n去问问群翁群翁群翁群恶趣味群无而且未请问额请问额请问请问额请问而且未去未请问去额请问 请问请问额请问请问额请问请问\n换行了\n空格里    切尔奇翁群翁群二群无请问去请问请问\n1231231\n3\n123\n！@#~￥%……&*（）——+|}{}：“”？》《》~\n`,.<>?\n|+_)(*&^%$@#/';]\\\n恶趣味群无请问青蔷薇\n企鹅企鹅 请问\n去问问群翁群翁群翁群恶趣味群无而且未请问额请问额请问请问额请问而且未去未请问去额请问 请问请问额请问请问额请问请问\n换行了\n空格里    切尔奇翁群翁群二群无请问去请问请问\n1231231\n3\n123\n！@#~￥%……&*（）——+|}{}：“”？》《》~\n`,.<>?\n|+_)(*&^%$@#/';]\\\n恶趣味群无请问青蔷薇\n企鹅企鹅 请问\n去问问群翁群翁群翁群恶趣味群无而且未请问额请问额请问请问额请问而且未去未请问去额请问 请问请问额请问请问额请问请问\n换行了\n空格里    切尔奇翁群翁群二群无请问去请问请问\n1231231\n3\n123\n！@#~￥%……&*（）——+|}{}：“”？》《》~\n`,.<>?\n|+_)(*&^%$@#/';]\\\n恶趣味群无请问青蔷薇\n企鹅企鹅 请问\n去问问群翁群翁群翁群恶趣味群无而且未请问额请问额请问请问额请问而且未去未请问去额请问 请问请问额请问请问额请问请问\n换行了\n空格里    切尔奇翁群翁群二群无请问去请问请问\n1231231\n3\n123\n！@#~￥%…", 'dingTalkId': 'https://oapi.dingtalk.com/robot/send?access_token=cd793c7eea52c4b8721087c301285622aa6a68c46d6863765728f22dbffd2902', 'distance': None, 'drawBloodEndTime': '11:12', 'drawBloodStartTime': '07:50', 'enableGuidance': 0, 'enableInsurance': 1, 'enableSendToDingTalk': 1, 'enableSurveyQuestion': 1, 'familyPkgBuyType': 1, 'gmtOnlineFirst': None, 'groupSyncDay': 2, 'hdtsUrl': None, 'individualPurchase': 1, 'individualPurchasePriceLowest': 0, 'individualPurchaseUrl': 'http://weixin.qq.com/q/025KEWo17de_D100000073', 'inspectionRegex': '', 'instId': 1072, 'instImages': '["http://file.helianhealth.com/managefile/2020/11/23/e27bd2efc0904f79a530c6ee9f8b8321.jpg",""]', 'instLevel': 1, 'instName': '杭州-禾连内网测试医院98', 'instPic': 'http://file.helianhealth.com/managefile/2020/07/06/81ae1ef2aa6846118834b98c9b867e74.jpeg', 'instSpec': None, 'instType': 1, 'isAddItem': True, 'isChain': 0, 'isExcludeOpen': 0, 'isGroupSyn': 1, 'isMiniQueue': 1, 'isPersonSyn': 1, 'isRecommended': 1, 'isReserve': 1, 'isSendPkgId': 0, 'isSyncFeeitem': 1, 'isSyncPatient': 1, 'isSyncSuit': 1, 'isTimeAppointment': 1, 'latitude': 30.290406, 'longitude': 120.086338, 'medicalLicense': None, 'modifyTime': 1609117856000, 'needCardNo': 0, 'ocrDecode': None, 'operationStatus': 1, 'optimisticLockId': 'HL99998', 'optimisticLockVersion': 1609117856000, 'personalBatchName': '', 'personalCompanyName': '', 'personalSectionName': '', 'personalSyncDay': 1, 'qrcodePic': None, 'replaceExpression': '', 'reportOfDays': 7, 'reportWayFrom': 1, 'reportWayOnline': '', 'reportWayTo': 7, 'reserveDayCapacity': 10000, 'reserveDayDeadline': -28800000, 'reserveForbiddenDay': '20201124', 'reserveForbiddenTime': '23:50:59', 'reserveForbiddenWeek': '[]', 'reserveRangeFrom': 0, 'reserveRangeTo': 365, 'reserveWeek': [1, 2, 3, 4, 5, 6, 7], 'salePriceOpen': 0, 'sendCardNotificationSms': 1, 'sendNonactivatedNotificationSms': 1, 'showAd': 1, 'socialCreditCode': '11', 'speedReserveOpen': 1, 'stationId': 'HL99998', 'stationType': 1, 'status': 2, 'summaryRegex': '', 'supplierName': '禾连医院', 'syncDays': 0, 'syncReportModel': 2, 'whiteCompanyIds': '2708,2711,2734', 'workTimeEnd': '23:00', 'workTimeStart': '07:00'}, 'success': True}
2020-12-28 09:41:46,612-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609117856000,时间戳id:HL99998
2020-12-28 09:46:25,597-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 09:46:25,599-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 09:46:25,622-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:25,681-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:46:25,682-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:46:25,701-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:46:25,702-[INFO]-logger.py-all_method-日志信息:获取机构详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/detail?stationId=HL99998
2020-12-28 09:46:25,789-[INFO]-logger.py-all_method-日志信息:获取机构详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'activatePerformanceStatistic': 1, 'addItemConf': '10', 'addressDetail': '浙江省杭州市西湖区杭州绿城育华小学1231231请问请问呃企鹅企鹅企鹅请问驱蚊器驱蚊器', 'agreement': None, 'aliNotice': None, 'aliStatus': 2, 'alias': '', 'areaCode': 330106, 'areaDetail': '杭州绿城育华小学1231231请问请问呃企鹅企鹅企鹅请问驱蚊器驱蚊器', 'artificialDecode': 1, 'attention': '1、体检前3天不要大量饮酒、不要进食动物内脏、清淡饮食，拒绝暴饮暴食、少吃高脂、高糖、高蛋白食物，避免熬夜或短期剧烈运动。\n2、空腹8小时以上，体检前一天晚22:00点后，不再进食任何食物，可少量饮水，直至空腹项目（抽血、肝胆B超、胃肠道检查）检查完成。\n3、糖尿病、高血压等心血管慢性疾病者，应按时吃药，少量饮水送服即可，避免因停药而发生意外。\n4、体检当天衣着宽松，不建议佩戴隐形眼睛、首饰等', 'auditSync': 0, 'behalfPassword': '111111', 'businessLicense': None, 'cityCode': 330100, 'companySmsOpen': 0, 'contactName': '1', 'contactTel': '1', 'createTime': 1580960818000, 'crmId': 'M0000029', 'detail': "去问问群翁群翁群翁群恶趣味群无而且未请问额请问额请问请问额请问而且未去未请问去额请问 请问请问额请问请问额请问请问\n换行了\n空格里    切尔奇翁群翁群二群无请问去请问请问\n1231231\n3\n123\n！@#~￥%……&*（）——+|}{}：“”？》《》~\n`,.<>?\n|+_)(*&^%$@#/';]\\\n恶趣味群无请问青蔷薇\n企鹅企鹅 请问\n去问问群翁群翁群翁群恶趣味群无而且未请问额请问额请问请问额请问而且未去未请问去额请问 请问请问额请问请问额请问请问\n换行了\n空格里    切尔奇翁群翁群二群无请问去请问请问\n1231231\n3\n123\n！@#~￥%……&*（）——+|}{}：“”？》《》~\n`,.<>?\n|+_)(*&^%$@#/';]\\\n恶趣味群无请问青蔷薇\n企鹅企鹅 请问\n去问问群翁群翁群翁群恶趣味群无而且未请问额请问额请问请问额请问而且未去未请问去额请问 请问请问额请问请问额请问请问\n换行了\n空格里    切尔奇翁群翁群二群无请问去请问请问\n1231231\n3\n123\n！@#~￥%……&*（）——+|}{}：“”？》《》~\n`,.<>?\n|+_)(*&^%$@#/';]\\\n恶趣味群无请问青蔷薇\n企鹅企鹅 请问\n去问问群翁群翁群翁群恶趣味群无而且未请问额请问额请问请问额请问而且未去未请问去额请问 请问请问额请问请问额请问请问\n换行了\n空格里    切尔奇翁群翁群二群无请问去请问请问\n1231231\n3\n123\n！@#~￥%……&*（）——+|}{}：“”？》《》~\n`,.<>?\n|+_)(*&^%$@#/';]\\\n恶趣味群无请问青蔷薇\n企鹅企鹅 请问\n去问问群翁群翁群翁群恶趣味群无而且未请问额请问额请问请问额请问而且未去未请问去额请问 请问请问额请问请问额请问请问\n换行了\n空格里    切尔奇翁群翁群二群无请问去请问请问\n1231231\n3\n123\n！@#~￥%…", 'dingTalkId': 'https://oapi.dingtalk.com/robot/send?access_token=cd793c7eea52c4b8721087c301285622aa6a68c46d6863765728f22dbffd2902', 'distance': None, 'drawBloodEndTime': '11:12', 'drawBloodStartTime': '07:50', 'enableGuidance': 0, 'enableInsurance': 1, 'enableSendToDingTalk': 1, 'enableSurveyQuestion': 1, 'familyPkgBuyType': 1, 'gmtOnlineFirst': None, 'groupSyncDay': 2, 'hdtsUrl': None, 'individualPurchase': 1, 'individualPurchasePriceLowest': 0, 'individualPurchaseUrl': 'http://weixin.qq.com/q/025KEWo17de_D100000073', 'inspectionRegex': '', 'instId': 1072, 'instImages': '["http://file.helianhealth.com/managefile/2020/11/23/e27bd2efc0904f79a530c6ee9f8b8321.jpg",""]', 'instLevel': 1, 'instName': '杭州-禾连内网测试医院98', 'instPic': 'http://file.helianhealth.com/managefile/2020/07/06/81ae1ef2aa6846118834b98c9b867e74.jpeg', 'instSpec': None, 'instType': 1, 'isAddItem': True, 'isChain': 0, 'isExcludeOpen': 0, 'isGroupSyn': 1, 'isMiniQueue': 1, 'isPersonSyn': 1, 'isRecommended': 1, 'isReserve': 1, 'isSendPkgId': 0, 'isSyncFeeitem': 1, 'isSyncPatient': 1, 'isSyncSuit': 1, 'isTimeAppointment': 1, 'latitude': 30.290406, 'longitude': 120.086338, 'medicalLicense': None, 'modifyTime': 1609117856000, 'needCardNo': 0, 'ocrDecode': None, 'operationStatus': 1, 'optimisticLockId': 'HL99998', 'optimisticLockVersion': 1609117856000, 'personalBatchName': '', 'personalCompanyName': '', 'personalSectionName': '', 'personalSyncDay': 1, 'qrcodePic': None, 'replaceExpression': '', 'reportOfDays': 7, 'reportWayFrom': 1, 'reportWayOnline': '', 'reportWayTo': 7, 'reserveDayCapacity': 10000, 'reserveDayDeadline': -28800000, 'reserveForbiddenDay': '20201124', 'reserveForbiddenTime': '23:50:59', 'reserveForbiddenWeek': '[]', 'reserveRangeFrom': 0, 'reserveRangeTo': 365, 'reserveWeek': [1, 2, 3, 4, 5, 6, 7], 'salePriceOpen': 0, 'sendCardNotificationSms': 1, 'sendNonactivatedNotificationSms': 1, 'showAd': 1, 'socialCreditCode': '11', 'speedReserveOpen': 1, 'stationId': 'HL99998', 'stationType': 1, 'status': 2, 'summaryRegex': '', 'supplierName': '禾连医院', 'syncDays': 0, 'syncReportModel': 2, 'whiteCompanyIds': '2708,2711,2734', 'workTimeEnd': '23:00', 'workTimeStart': '07:00'}, 'success': True}
2020-12-28 09:46:25,792-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609117856000,时间戳id:HL99998
2020-12-28 09:46:46,293-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 09:46:46,295-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 09:46:46,608-[INFO]-logger.py-Unit_test-日志信息:当前使用的用例表单：Sheet2
2020-12-28 09:46:46,980-[INFO]-logger.py-readExcel-日志信息:获取表单成功：<Worksheet "Sheet2">
2020-12-28 09:46:46,988-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:46:46,989-[INFO]-logger.py-Unit_test-日志信息:正在执行第1条用例:【套餐管理】1-正常-个检套餐-根据id查询套餐商品-成功
2020-12-28 09:46:46,990-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/suite/v2/newGoodsPkg/14571；method：GET；data：{}；sql：{}
2020-12-28 09:46:46,992-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:47,051-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:46:47,052-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:46:47,078-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:46:47,079-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:46:47,156-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '0', 'errorMsg': '', 'result': {'aliDetailImage': None, 'aliDiscount': 0.0, 'aliFeatureItem': None, 'aliLabels': None, 'aliListImage': None, 'aliPkgDesc': None, 'aliSalePrice': None, 'aliSettlementPrice': None, 'categoryLevelOne': 1, 'categoryLevelTwo': 34, 'examItemList': '[{"examFeeItemID":"HY0002","examFeeItemName":"尿常规","optionType":1,"price":600,"salePrice":6.00,"salePriceStr":"6"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2.00,"salePriceStr":"2"}]', 'examSuiteId': None, 'frequent': 0, 'genderRequire': 0, 'groupSale': 1, 'hospitalSettlePrice': None, 'images': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'itemDesc': '<h6>胃部疾病检查</h6><p><strong>电子胃镜</strong></p><h6>必选检查</h6><p><strong>尿常规</strong></p>', 'itemDescType': 0, 'marryRequire': 0, 'needCardNo': 0, 'notice': '{"notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。","notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。"}', 'operatorName': None, 'optimisticLockId': '2560', 'optimisticLockVersion': 1605771737000, 'pkgBaseId': None, 'pkgDesc': '<p><img src="https://file.helianhealth.com/manager/pkg/desc_default.jpg"></p>', 'pkgFrom': None, 'pkgId': 2560, 'pkgItemDiscount': 1.0, 'pkgName': '身份证非必填不限', 'pkgSyn': True, 'price': 8.0, 'recommendLabel': None, 'salePrice': 0.01, 'salesVolume': 144, 'skuId': 14614, 'spuId': 14571, 'stationId': 'HL99998', 'suitableLabel': '', 'supportAddition': 1, 'thumbnail': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'valid': 365, 'wxSale': 0}, 'success': True}
2020-12-28 09:46:47,158-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.165898s
2020-12-28 09:46:47,159-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:46:47,161-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.165898, 'data': {'aliDetailImage': None, 'aliDiscount': 0.0, 'aliFeatureItem': None, 'aliLabels': None, 'aliListImage': None, 'aliPkgDesc': None, 'aliSalePrice': None, 'aliSettlementPrice': None, 'categoryLevelOne': 1, 'categoryLevelTwo': 34, 'examItemList': '[{"examFeeItemID":"HY0002","examFeeItemName":"尿常规","optionType":1,"price":600,"salePrice":6.00,"salePriceStr":"6"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2.00,"salePriceStr":"2"}]', 'examSuiteId': None, 'frequent': 0, 'genderRequire': 0, 'groupSale': 1, 'hospitalSettlePrice': None, 'images': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'itemDesc': '<h6>胃部疾病检查</h6><p><strong>电子胃镜</strong></p><h6>必选检查</h6><p><strong>尿常规</strong></p>', 'itemDescType': 0, 'marryRequire': 0, 'needCardNo': 0, 'notice': '{"notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。","notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。"}', 'operatorName': None, 'optimisticLockId': '2560', 'optimisticLockVersion': 1605771737000, 'pkgBaseId': None, 'pkgDesc': '<p><img src="https://file.helianhealth.com/manager/pkg/desc_default.jpg"></p>', 'pkgFrom': None, 'pkgId': 2560, 'pkgItemDiscount': 1.0, 'pkgName': '身份证非必填不限', 'pkgSyn': True, 'price': 8.0, 'recommendLabel': None, 'salePrice': 0.01, 'salesVolume': 144, 'skuId': 14614, 'spuId': 14571, 'stationId': 'HL99998', 'suitableLabel': '', 'supportAddition': 1, 'thumbnail': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'valid': 365, 'wxSale': 0}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:46:47,967-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:46:47,968-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:46:47,970-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:46:47,971-[INFO]-logger.py-Unit_test-日志信息:正在执行第2条用例:【套餐管理】2-时间戳一致-个检套餐-商品套餐编辑-用户a页面1保存-成功
2020-12-28 09:46:47,972-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/suite/v2/modifyGoodsPkg；method：POST；data：{"aliDetailImage":'',"aliDiscount":'',"aliFeatureItem":'',"aliLabels":'',"aliListImage":'',"aliPkgDesc":'',"aliSalePrice":'',"aliSettlementPrice":'',"categoryLevelOne":1,"categoryLevelTwo":34,"examItemList":[{"examFeeItemID":"MR0001","examFeeItemName":"1.0腰椎核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01","itemName":"1.0腰椎核磁","itemId":"MR0001"},{"examFeeItemID":"MR0010","examFeeItemName":"1.0右膝关节核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01","itemName":"1.0右膝关节核磁","itemId":"MR0010"},{"examFeeItemID":"WG0002","examFeeItemName":"耳鼻喉科检查","optionType":1,"price":800,"salePrice":0.01,"salePriceStr":"0.01","itemName":"耳鼻喉科检查","itemId":"WG0002"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2,"salePriceStr":"2","itemName":"电子胃镜","itemId":"WJ002"},{"examFeeItemID":"WK0001","examFeeItemName":"外科检查","optionType":1,"price":500,"salePrice":100,"salePriceStr":"100","itemName":"外科检查","itemId":"WK0001"},{"examFeeItemID":"XZ0007","examFeeItemName":"ceshi","optionType":1,"price":1,"salePrice":0.01,"salePriceStr":"0.01","itemName":"ceshi","itemId":"XZ0007"}],"examSuiteId":'',"frequent":1,"genderRequire":0,"groupSale":1,"hospitalSettlePrice":'',"images":"https://file.helianhealth.com/manager/pkg/img_default.jpg","itemDesc":"<h6>心胸肺及腰椎</h6><p><strong>耳鼻喉科检查</strong></p><h6>泌尿生殖</h6><p><strong>1.0腰椎核磁</strong></p><h6>肿瘤生化</h6><p><strong>外科检查</strong></p><h6>胃部疾病检查</h6><p><strong>电子胃镜</strong> <strong>1.0右膝关节核磁</strong></p><h6>女性检查</h6><p><strong>ceshi</strong></p>","itemDescType":0,"marryRequire":0,"needCardNo":1,"notice":{"notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。","notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。"},"operatorName":'',"optimisticLockId":"2597","optimisticLockVersion":1605518822000,"pkgBaseId":'',"pkgDesc":"<p><img src=\"https://file.helianhealth.com/manager/pkg/desc_default.jpg\"></p>","pkgFrom":'',"pkgId":2597,"pkgItemDiscount":1,"pkgName":"界面自动化回归套餐","pkgSyn":'true',"price":"102.04","recommendLabel":'',"salePrice":50,"salesVolume":436,"skuId":14660,"spuId":14617,"stationId":"HL99998","suitableLabel":"","supportAddition":1,"thumbnail":"https://file.helianhealth.com/manager/pkg/img_default.jpg","valid":365,"wxSale":0}；sql：{}
2020-12-28 09:46:47,975-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:48,034-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:46:48,036-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:46:48,060-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:46:48,062-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:48,104-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:46:48,105-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:46:48,146-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:46:48,147-[INFO]-logger.py-all_method-日志信息:个检套餐详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/suite/v2/newGoodsPkg/14617
2020-12-28 09:46:48,197-[INFO]-logger.py-all_method-日志信息:个检套餐详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'aliDetailImage': '', 'aliDiscount': 0.0, 'aliFeatureItem': '', 'aliLabels': '', 'aliListImage': None, 'aliPkgDesc': '', 'aliSalePrice': None, 'aliSettlementPrice': None, 'categoryLevelOne': 1, 'categoryLevelTwo': 34, 'examItemList': '[{"examFeeItemID":"MR0001","examFeeItemName":"1.0腰椎核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"MR0010","examFeeItemName":"1.0右膝关节核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WG0002","examFeeItemName":"耳鼻喉科检查","optionType":1,"price":800,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2.00,"salePriceStr":"2"},{"examFeeItemID":"WK0001","examFeeItemName":"外科检查","optionType":1,"price":500,"salePrice":100.00,"salePriceStr":"100"},{"examFeeItemID":"XZ0007","examFeeItemName":"ceshi","optionType":1,"price":1,"salePrice":0.01,"salePriceStr":"0.01"}]', 'examSuiteId': None, 'frequent': 1, 'genderRequire': 0, 'groupSale': 1, 'hospitalSettlePrice': None, 'images': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'itemDesc': '<h6>心胸肺及腰椎</h6><p><strong>耳鼻喉科检查</strong></p><h6>泌尿生殖</h6><p><strong>1.0腰椎核磁</strong></p><h6>肿瘤生化</h6><p><strong>外科检查</strong></p><h6>胃部疾病检查</h6><p><strong>电子胃镜</strong> <strong>1.0右膝关节核磁</strong></p><h6>女性检查</h6><p><strong>ceshi</strong></p>', 'itemDescType': 0, 'marryRequire': 0, 'needCardNo': 1, 'notice': '{"notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。","notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。"}', 'operatorName': None, 'optimisticLockId': '2597', 'optimisticLockVersion': 1609117815000, 'pkgBaseId': None, 'pkgDesc': '<p><img src="https://file.helianhealth.com/manager/pkg/desc_default.jpg"></p>', 'pkgFrom': None, 'pkgId': 2597, 'pkgItemDiscount': 1.0, 'pkgName': '界面自动化回归套餐', 'pkgSyn': True, 'price': 102.04, 'recommendLabel': '', 'salePrice': 50.0, 'salesVolume': 436, 'skuId': 14660, 'spuId': 14617, 'stationId': 'HL99998', 'suitableLabel': '', 'supportAddition': 1, 'thumbnail': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'valid': 365, 'wxSale': 0}, 'success': True}
2020-12-28 09:46:48,202-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609117815000,时间戳id:2597
2020-12-28 09:46:48,203-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:46:48,335-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.358374s
2020-12-28 09:46:48,339-[INFO]-logger.py-Unit_test-日志信息:接口返回message:No provider available from registry nacos:8848 for service com.helian.healthmanage.biz.hospital.api.exam.PhysicalExaminationBizService:1.0.0 on consumer 10.42.1.109 use dubbo version 2.7.4.1, please check status of providers(disabled, not registered or in blacklist).
2020-12-28 09:46:48,343-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：10001
2020-12-28 09:46:49,313-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:46:49,314-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:46:49,320-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:46:49,321-[INFO]-logger.py-Unit_test-日志信息:正在执行第3条用例:【套餐管理】3-时间戳不一致-个检套餐-商品套餐编辑-用户a页面2时间戳1保存-失败
2020-12-28 09:46:49,322-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/suite/v2/modifyGoodsPkg；method：POST；data：{"aliDetailImage":'',"aliDiscount":'',"aliFeatureItem":'',"aliLabels":'',"aliListImage":'',"aliPkgDesc":'',"aliSalePrice":'',"aliSettlementPrice":'',"categoryLevelOne":1,"categoryLevelTwo":34,"examItemList":[{"examFeeItemID":"MR0001","examFeeItemName":"1.0腰椎核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01","itemName":"1.0腰椎核磁","itemId":"MR0001"},{"examFeeItemID":"MR0010","examFeeItemName":"1.0右膝关节核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01","itemName":"1.0右膝关节核磁","itemId":"MR0010"},{"examFeeItemID":"WG0002","examFeeItemName":"耳鼻喉科检查","optionType":1,"price":800,"salePrice":0.01,"salePriceStr":"0.01","itemName":"耳鼻喉科检查","itemId":"WG0002"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2,"salePriceStr":"2","itemName":"电子胃镜","itemId":"WJ002"},{"examFeeItemID":"WK0001","examFeeItemName":"外科检查","optionType":1,"price":500,"salePrice":100,"salePriceStr":"100","itemName":"外科检查","itemId":"WK0001"},{"examFeeItemID":"XZ0007","examFeeItemName":"ceshi","optionType":1,"price":1,"salePrice":0.01,"salePriceStr":"0.01","itemName":"ceshi","itemId":"XZ0007"}],"examSuiteId":'',"frequent":1,"genderRequire":0,"groupSale":1,"hospitalSettlePrice":'',"images":"https://file.helianhealth.com/manager/pkg/img_default.jpg","itemDesc":"<h6>心胸肺及腰椎</h6><p><strong>耳鼻喉科检查</strong></p><h6>泌尿生殖</h6><p><strong>1.0腰椎核磁</strong></p><h6>肿瘤生化</h6><p><strong>外科检查</strong></p><h6>胃部疾病检查</h6><p><strong>电子胃镜</strong> <strong>1.0右膝关节核磁</strong></p><h6>女性检查</h6><p><strong>ceshi</strong></p>","itemDescType":0,"marryRequire":0,"needCardNo":1,"notice":{"notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。","notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。"},"operatorName":'',"optimisticLockId":"2597","optimisticLockVersion":1605518822000,"pkgBaseId":'',"pkgDesc":"<p><img src=\"https://file.helianhealth.com/manager/pkg/desc_default.jpg\"></p>","pkgFrom":'',"pkgId":2597,"pkgItemDiscount":1,"pkgName":"界面自动化回归套餐","pkgSyn":'true',"price":"102.04","recommendLabel":'',"salePrice":50,"salesVolume":436,"skuId":14660,"spuId":14617,"stationId":"HL99998","suitableLabel":"","supportAddition":1,"thumbnail":"https://file.helianhealth.com/manager/pkg/img_default.jpg","valid":365,"wxSale":0}；sql：{}
2020-12-28 09:46:49,327-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:49,377-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:46:49,378-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:46:49,409-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:46:49,411-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:49,480-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:46:49,481-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:46:49,519-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:46:49,521-[INFO]-logger.py-all_method-日志信息:个检套餐详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/suite/v2/newGoodsPkg/14617
2020-12-28 09:46:49,564-[INFO]-logger.py-all_method-日志信息:个检套餐详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'aliDetailImage': '', 'aliDiscount': 0.0, 'aliFeatureItem': '', 'aliLabels': '', 'aliListImage': None, 'aliPkgDesc': '', 'aliSalePrice': None, 'aliSettlementPrice': None, 'categoryLevelOne': 1, 'categoryLevelTwo': 34, 'examItemList': '[{"examFeeItemID":"MR0001","examFeeItemName":"1.0腰椎核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"MR0010","examFeeItemName":"1.0右膝关节核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WG0002","examFeeItemName":"耳鼻喉科检查","optionType":1,"price":800,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2.00,"salePriceStr":"2"},{"examFeeItemID":"WK0001","examFeeItemName":"外科检查","optionType":1,"price":500,"salePrice":100.00,"salePriceStr":"100"},{"examFeeItemID":"XZ0007","examFeeItemName":"ceshi","optionType":1,"price":1,"salePrice":0.01,"salePriceStr":"0.01"}]', 'examSuiteId': None, 'frequent': 1, 'genderRequire': 0, 'groupSale': 1, 'hospitalSettlePrice': None, 'images': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'itemDesc': '<h6>心胸肺及腰椎</h6><p><strong>耳鼻喉科检查</strong></p><h6>泌尿生殖</h6><p><strong>1.0腰椎核磁</strong></p><h6>肿瘤生化</h6><p><strong>外科检查</strong></p><h6>胃部疾病检查</h6><p><strong>电子胃镜</strong> <strong>1.0右膝关节核磁</strong></p><h6>女性检查</h6><p><strong>ceshi</strong></p>', 'itemDescType': 0, 'marryRequire': 0, 'needCardNo': 1, 'notice': '{"notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。","notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。"}', 'operatorName': None, 'optimisticLockId': '2597', 'optimisticLockVersion': 1609117815000, 'pkgBaseId': None, 'pkgDesc': '<p><img src="https://file.helianhealth.com/manager/pkg/desc_default.jpg"></p>', 'pkgFrom': None, 'pkgId': 2597, 'pkgItemDiscount': 1.0, 'pkgName': '界面自动化回归套餐', 'pkgSyn': True, 'price': 102.04, 'recommendLabel': '', 'salePrice': 50.0, 'salesVolume': 436, 'skuId': 14660, 'spuId': 14617, 'stationId': 'HL99998', 'suitableLabel': '', 'supportAddition': 1, 'thumbnail': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'valid': 365, 'wxSale': 0}, 'success': True}
2020-12-28 09:46:49,569-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609117815000,时间戳id:2597
2020-12-28 09:46:49,570-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:46:49,699-[INFO]-logger.py-httpRequest-日志信息:第一次保存headers：{'optimisticLockVersion': '1609117815000', 'optimisticLockId': '2597', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '10001', 'errorMsg': 'No provider available from registry nacos:8848 for service com.helian.healthmanage.biz.hospital.api.exam.PhysicalExaminationBizService:1.0.0 on consumer 10.42.1.109 use dubbo version 2.7.4.1, please check status of providers(disabled, not registered or in blacklist).', 'result': None, 'success': False}
2020-12-28 09:46:49,832-[INFO]-logger.py-httpRequest-日志信息:第二次保存headers：{'optimisticLockVersion': '1609117815000', 'optimisticLockId': '2597', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '10001', 'errorMsg': 'No provider available from registry nacos:8848 for service com.helian.healthmanage.biz.hospital.api.exam.PhysicalExaminationBizService:1.0.0 on consumer 10.42.1.109 use dubbo version 2.7.4.1, please check status of providers(disabled, not registered or in blacklist).', 'result': None, 'success': False}
2020-12-28 09:46:49,834-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.507455s
2020-12-28 09:46:49,835-[INFO]-logger.py-Unit_test-日志信息:接口返回message:No provider available from registry nacos:8848 for service com.helian.healthmanage.biz.hospital.api.exam.PhysicalExaminationBizService:1.0.0 on consumer 10.42.1.109 use dubbo version 2.7.4.1, please check status of providers(disabled, not registered or in blacklist).
2020-12-28 09:46:49,836-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：10001
2020-12-28 09:46:50,769-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:46:50,770-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:46:50,774-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:46:50,775-[INFO]-logger.py-Unit_test-日志信息:正在执行第4条用例:【套餐管理】4-时间戳不一致-个检套餐-商品套餐编辑-用户b页面2时间戳1保存-失败
2020-12-28 09:46:50,777-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/suite/v2/modifyGoodsPkg；method：POST；data：{"aliDetailImage":'',"aliDiscount":'',"aliFeatureItem":'',"aliLabels":'',"aliListImage":'',"aliPkgDesc":'',"aliSalePrice":'',"aliSettlementPrice":'',"categoryLevelOne":1,"categoryLevelTwo":34,"examItemList":[{"examFeeItemID":"MR0001","examFeeItemName":"1.0腰椎核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01","itemName":"1.0腰椎核磁","itemId":"MR0001"},{"examFeeItemID":"MR0010","examFeeItemName":"1.0右膝关节核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01","itemName":"1.0右膝关节核磁","itemId":"MR0010"},{"examFeeItemID":"WG0002","examFeeItemName":"耳鼻喉科检查","optionType":1,"price":800,"salePrice":0.01,"salePriceStr":"0.01","itemName":"耳鼻喉科检查","itemId":"WG0002"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2,"salePriceStr":"2","itemName":"电子胃镜","itemId":"WJ002"},{"examFeeItemID":"WK0001","examFeeItemName":"外科检查","optionType":1,"price":500,"salePrice":100,"salePriceStr":"100","itemName":"外科检查","itemId":"WK0001"},{"examFeeItemID":"XZ0007","examFeeItemName":"ceshi","optionType":1,"price":1,"salePrice":0.01,"salePriceStr":"0.01","itemName":"ceshi","itemId":"XZ0007"}],"examSuiteId":'',"frequent":1,"genderRequire":0,"groupSale":1,"hospitalSettlePrice":'',"images":"https://file.helianhealth.com/manager/pkg/img_default.jpg","itemDesc":"<h6>心胸肺及腰椎</h6><p><strong>耳鼻喉科检查</strong></p><h6>泌尿生殖</h6><p><strong>1.0腰椎核磁</strong></p><h6>肿瘤生化</h6><p><strong>外科检查</strong></p><h6>胃部疾病检查</h6><p><strong>电子胃镜</strong> <strong>1.0右膝关节核磁</strong></p><h6>女性检查</h6><p><strong>ceshi</strong></p>","itemDescType":0,"marryRequire":0,"needCardNo":1,"notice":{"notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。","notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。"},"operatorName":'',"optimisticLockId":"2597","optimisticLockVersion":1605518822000,"pkgBaseId":'',"pkgDesc":"<p><img src=\"https://file.helianhealth.com/manager/pkg/desc_default.jpg\"></p>","pkgFrom":'',"pkgId":2597,"pkgItemDiscount":1,"pkgName":"界面自动化回归套餐","pkgSyn":'true',"price":"102.04","recommendLabel":'',"salePrice":50,"salesVolume":436,"skuId":14660,"spuId":14617,"stationId":"HL99998","suitableLabel":"","supportAddition":1,"thumbnail":"https://file.helianhealth.com/manager/pkg/img_default.jpg","valid":365,"wxSale":0}；sql：{}
2020-12-28 09:46:50,780-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:50,813-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:46:50,814-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:46:50,834-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:46:50,836-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:50,889-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:46:50,890-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:46:50,927-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:46:50,928-[INFO]-logger.py-all_method-日志信息:个检套餐详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/suite/v2/newGoodsPkg/14617
2020-12-28 09:46:50,987-[INFO]-logger.py-all_method-日志信息:个检套餐详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'aliDetailImage': '', 'aliDiscount': 0.0, 'aliFeatureItem': '', 'aliLabels': '', 'aliListImage': None, 'aliPkgDesc': '', 'aliSalePrice': None, 'aliSettlementPrice': None, 'categoryLevelOne': 1, 'categoryLevelTwo': 34, 'examItemList': '[{"examFeeItemID":"MR0001","examFeeItemName":"1.0腰椎核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"MR0010","examFeeItemName":"1.0右膝关节核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WG0002","examFeeItemName":"耳鼻喉科检查","optionType":1,"price":800,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2.00,"salePriceStr":"2"},{"examFeeItemID":"WK0001","examFeeItemName":"外科检查","optionType":1,"price":500,"salePrice":100.00,"salePriceStr":"100"},{"examFeeItemID":"XZ0007","examFeeItemName":"ceshi","optionType":1,"price":1,"salePrice":0.01,"salePriceStr":"0.01"}]', 'examSuiteId': None, 'frequent': 1, 'genderRequire': 0, 'groupSale': 1, 'hospitalSettlePrice': None, 'images': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'itemDesc': '<h6>心胸肺及腰椎</h6><p><strong>耳鼻喉科检查</strong></p><h6>泌尿生殖</h6><p><strong>1.0腰椎核磁</strong></p><h6>肿瘤生化</h6><p><strong>外科检查</strong></p><h6>胃部疾病检查</h6><p><strong>电子胃镜</strong> <strong>1.0右膝关节核磁</strong></p><h6>女性检查</h6><p><strong>ceshi</strong></p>', 'itemDescType': 0, 'marryRequire': 0, 'needCardNo': 1, 'notice': '{"notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。","notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。"}', 'operatorName': None, 'optimisticLockId': '2597', 'optimisticLockVersion': 1609117815000, 'pkgBaseId': None, 'pkgDesc': '<p><img src="https://file.helianhealth.com/manager/pkg/desc_default.jpg"></p>', 'pkgFrom': None, 'pkgId': 2597, 'pkgItemDiscount': 1.0, 'pkgName': '界面自动化回归套餐', 'pkgSyn': True, 'price': 102.04, 'recommendLabel': '', 'salePrice': 50.0, 'salesVolume': 436, 'skuId': 14660, 'spuId': 14617, 'stationId': 'HL99998', 'suitableLabel': '', 'supportAddition': 1, 'thumbnail': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'valid': 365, 'wxSale': 0}, 'success': True}
2020-12-28 09:46:50,992-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609117815000,时间戳id:2597
2020-12-28 09:46:50,994-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:51,029-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(804,)
2020-12-28 09:46:51,030-[INFO]-logger.py-all_method-日志信息:手机15990106283:id获取成功返回:804
2020-12-28 09:46:51,056-[INFO]-logger.py-all_method-日志信息:手机15990106283:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '804', 'stationId': 'HL99998', 'token': 'ee999cd0bc8f5838fd28448a5f67fb14'}
2020-12-28 09:46:51,058-[INFO]-logger.py-all_method-日志信息:个检套餐详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/suite/v2/newGoodsPkg/14617
2020-12-28 09:46:51,110-[INFO]-logger.py-all_method-日志信息:个检套餐详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'aliDetailImage': '', 'aliDiscount': 0.0, 'aliFeatureItem': '', 'aliLabels': '', 'aliListImage': None, 'aliPkgDesc': '', 'aliSalePrice': None, 'aliSettlementPrice': None, 'categoryLevelOne': 1, 'categoryLevelTwo': 34, 'examItemList': '[{"examFeeItemID":"MR0001","examFeeItemName":"1.0腰椎核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"MR0010","examFeeItemName":"1.0右膝关节核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WG0002","examFeeItemName":"耳鼻喉科检查","optionType":1,"price":800,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2.00,"salePriceStr":"2"},{"examFeeItemID":"WK0001","examFeeItemName":"外科检查","optionType":1,"price":500,"salePrice":100.00,"salePriceStr":"100"},{"examFeeItemID":"XZ0007","examFeeItemName":"ceshi","optionType":1,"price":1,"salePrice":0.01,"salePriceStr":"0.01"}]', 'examSuiteId': None, 'frequent': 1, 'genderRequire': 0, 'groupSale': 1, 'hospitalSettlePrice': None, 'images': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'itemDesc': '<h6>心胸肺及腰椎</h6><p><strong>耳鼻喉科检查</strong></p><h6>泌尿生殖</h6><p><strong>1.0腰椎核磁</strong></p><h6>肿瘤生化</h6><p><strong>外科检查</strong></p><h6>胃部疾病检查</h6><p><strong>电子胃镜</strong> <strong>1.0右膝关节核磁</strong></p><h6>女性检查</h6><p><strong>ceshi</strong></p>', 'itemDescType': 0, 'marryRequire': 0, 'needCardNo': 1, 'notice': '{"notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。","notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。"}', 'operatorName': None, 'optimisticLockId': '2597', 'optimisticLockVersion': 1609117815000, 'pkgBaseId': None, 'pkgDesc': '<p><img src="https://file.helianhealth.com/manager/pkg/desc_default.jpg"></p>', 'pkgFrom': None, 'pkgId': 2597, 'pkgItemDiscount': 1.0, 'pkgName': '界面自动化回归套餐', 'pkgSyn': True, 'price': 102.04, 'recommendLabel': '', 'salePrice': 50.0, 'salesVolume': 436, 'skuId': 14660, 'spuId': 14617, 'stationId': 'HL99998', 'suitableLabel': '', 'supportAddition': 1, 'thumbnail': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'valid': 365, 'wxSale': 0}, 'success': True}
2020-12-28 09:46:51,115-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609117815000,时间戳id:2597
2020-12-28 09:46:51,116-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:46:51,249-[INFO]-logger.py-httpRequest-日志信息:第一次保存headers：{'optimisticLockVersion': '1609117815000', 'optimisticLockId': '2597', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '10001', 'errorMsg': 'No provider available from registry nacos:8848 for service com.helian.healthmanage.biz.hospital.api.exam.PhysicalExaminationBizService:1.0.0 on consumer 10.42.1.109 use dubbo version 2.7.4.1, please check status of providers(disabled, not registered or in blacklist).', 'result': None, 'success': False}
2020-12-28 09:46:51,386-[INFO]-logger.py-httpRequest-日志信息:第二次保存headers：{'optimisticLockVersion': '1609117815000', 'optimisticLockId': '2597', 'adminId': '804', 'stationId': 'HL99998', 'token': 'ee999cd0bc8f5838fd28448a5f67fb14'},返回：{'code': '10001', 'errorMsg': 'No provider available from registry nacos:8848 for service com.helian.healthmanage.biz.hospital.api.exam.PhysicalExaminationBizService:1.0.0 on consumer 10.42.1.109 use dubbo version 2.7.4.1, please check status of providers(disabled, not registered or in blacklist).', 'result': None, 'success': False}
2020-12-28 09:46:51,389-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.609647s
2020-12-28 09:46:51,392-[INFO]-logger.py-Unit_test-日志信息:接口返回message:No provider available from registry nacos:8848 for service com.helian.healthmanage.biz.hospital.api.exam.PhysicalExaminationBizService:1.0.0 on consumer 10.42.1.109 use dubbo version 2.7.4.1, please check status of providers(disabled, not registered or in blacklist).
2020-12-28 09:46:51,396-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：10001
2020-12-28 09:46:52,483-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:46:52,484-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:46:52,489-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:46:52,490-[INFO]-logger.py-Unit_test-日志信息:正在执行第5条用例:【套餐管理】1-正常-团检套餐-根据id查询套餐商品-成功
2020-12-28 09:46:52,492-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/suite/v2/newGoodsPkg/14618；method：GET；data：{}；sql：{}
2020-12-28 09:46:52,494-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:52,528-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:46:52,530-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:46:52,567-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:46:52,568-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:46:52,617-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '0', 'errorMsg': '', 'result': {'aliDetailImage': '', 'aliDiscount': 0.0, 'aliFeatureItem': '', 'aliLabels': '', 'aliListImage': None, 'aliPkgDesc': '', 'aliSalePrice': None, 'aliSettlementPrice': None, 'categoryLevelOne': 1, 'categoryLevelTwo': 34, 'examItemList': '[{"examFeeItemID":"HY0039","examFeeItemName":"血HCG","optionType":1,"price":3300,"salePrice":0.02,"salePriceStr":"0.02"},{"examFeeItemID":"HY0045","examFeeItemName":"总胆固醇","optionType":1,"price":600,"salePrice":0.30,"salePriceStr":"0.30"},{"examFeeItemID":"MR0001","examFeeItemName":"1.0腰椎核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"MR0010","examFeeItemName":"1.0右膝关节核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WG0002","examFeeItemName":"耳鼻喉科检查","optionType":1,"price":800,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2.00,"salePriceStr":"2"},{"examFeeItemID":"WK0001","examFeeItemName":"外科检查","optionType":1,"price":500,"salePrice":100.00,"salePriceStr":"100"}]', 'examSuiteId': None, 'frequent': 0, 'genderRequire': 0, 'groupSale': 0, 'hospitalSettlePrice': None, 'images': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'itemDesc': '<h6>心胸肺及腰椎</h6><p><strong>耳鼻喉科检查</strong></p><h6>泌尿生殖</h6><p><strong>1.0腰椎核磁</strong></p><h6>肿瘤生化</h6><p><strong>总胆固醇</strong> <strong>外科检查</strong></p><h6>胃部疾病检查</h6><p><strong>电子胃镜</strong> <strong>1.0右膝关节核磁</strong></p><h6>女性检查</h6><p><strong>血HCG</strong></p>', 'itemDescType': 0, 'marryRequire': 0, 'needCardNo': 1, 'notice': '{"notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。","notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。"}', 'operatorName': None, 'optimisticLockId': '2598', 'optimisticLockVersion': 1609117823000, 'pkgBaseId': None, 'pkgDesc': '<p><img src="https://file.helianhealth.com/manager/pkg/desc_default.jpg"></p>', 'pkgFrom': None, 'pkgId': 2598, 'pkgItemDiscount': 1.0, 'pkgName': '界面自动化团检套餐', 'pkgSyn': True, 'price': 112.33, 'recommendLabel': '', 'salePrice': 50.0, 'salesVolume': 185, 'skuId': 14661, 'spuId': 14618, 'stationId': 'HL99998', 'suitableLabel': '', 'supportAddition': 1, 'thumbnail': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'valid': 365, 'wxSale': 0}, 'success': True}
2020-12-28 09:46:52,625-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.131938s
2020-12-28 09:46:52,626-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:46:52,627-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.131938, 'data': {'aliDetailImage': '', 'aliDiscount': 0.0, 'aliFeatureItem': '', 'aliLabels': '', 'aliListImage': None, 'aliPkgDesc': '', 'aliSalePrice': None, 'aliSettlementPrice': None, 'categoryLevelOne': 1, 'categoryLevelTwo': 34, 'examItemList': '[{"examFeeItemID":"HY0039","examFeeItemName":"血HCG","optionType":1,"price":3300,"salePrice":0.02,"salePriceStr":"0.02"},{"examFeeItemID":"HY0045","examFeeItemName":"总胆固醇","optionType":1,"price":600,"salePrice":0.30,"salePriceStr":"0.30"},{"examFeeItemID":"MR0001","examFeeItemName":"1.0腰椎核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"MR0010","examFeeItemName":"1.0右膝关节核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WG0002","examFeeItemName":"耳鼻喉科检查","optionType":1,"price":800,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2.00,"salePriceStr":"2"},{"examFeeItemID":"WK0001","examFeeItemName":"外科检查","optionType":1,"price":500,"salePrice":100.00,"salePriceStr":"100"}]', 'examSuiteId': None, 'frequent': 0, 'genderRequire': 0, 'groupSale': 0, 'hospitalSettlePrice': None, 'images': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'itemDesc': '<h6>心胸肺及腰椎</h6><p><strong>耳鼻喉科检查</strong></p><h6>泌尿生殖</h6><p><strong>1.0腰椎核磁</strong></p><h6>肿瘤生化</h6><p><strong>总胆固醇</strong> <strong>外科检查</strong></p><h6>胃部疾病检查</h6><p><strong>电子胃镜</strong> <strong>1.0右膝关节核磁</strong></p><h6>女性检查</h6><p><strong>血HCG</strong></p>', 'itemDescType': 0, 'marryRequire': 0, 'needCardNo': 1, 'notice': '{"notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。","notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。"}', 'operatorName': None, 'optimisticLockId': '2598', 'optimisticLockVersion': 1609117823000, 'pkgBaseId': None, 'pkgDesc': '<p><img src="https://file.helianhealth.com/manager/pkg/desc_default.jpg"></p>', 'pkgFrom': None, 'pkgId': 2598, 'pkgItemDiscount': 1.0, 'pkgName': '界面自动化团检套餐', 'pkgSyn': True, 'price': 112.33, 'recommendLabel': '', 'salePrice': 50.0, 'salesVolume': 185, 'skuId': 14661, 'spuId': 14618, 'stationId': 'HL99998', 'suitableLabel': '', 'supportAddition': 1, 'thumbnail': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'valid': 365, 'wxSale': 0}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:46:53,665-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:46:53,667-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:46:53,668-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:46:53,669-[INFO]-logger.py-Unit_test-日志信息:正在执行第6条用例:【套餐管理】2-时间戳一致-团检套餐-商品套餐编辑-用户a页面1保存-成功
2020-12-28 09:46:53,670-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/suite/v2/modifyGoodsPkg；method：POST；data：{"aliDetailImage":'',"aliDiscount":'',"aliFeatureItem":'',"aliLabels":'',"aliListImage":'',"aliPkgDesc":'',"aliSalePrice":'',"aliSettlementPrice":'',"categoryLevelOne":1,"categoryLevelTwo":34,"examItemList":[{"examFeeItemID":"HY0039","examFeeItemName":"血HCG","optionType":1,"price":3300,"salePrice":10,"salePriceStr":"10","itemName":"血HCG","itemId":"HY0039"},{"examFeeItemID":"HY0045","examFeeItemName":"总胆固醇","optionType":1,"price":600,"salePrice":0.3,"salePriceStr":"0.30","itemName":"总胆固醇","itemId":"HY0045"},{"examFeeItemID":"MR0001","examFeeItemName":"1.0腰椎核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01","itemName":"1.0腰椎核磁","itemId":"MR0001"},{"examFeeItemID":"MR0010","examFeeItemName":"1.0右膝关节核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01","itemName":"1.0右膝关节核磁","itemId":"MR0010"},{"examFeeItemID":"WG0002","examFeeItemName":"耳鼻喉科检查","optionType":1,"price":800,"salePrice":0.01,"salePriceStr":"0.01","itemName":"耳鼻喉科检查","itemId":"WG0002"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2,"salePriceStr":"2","itemName":"电子胃镜","itemId":"WJ002"},{"examFeeItemID":"WK0001","examFeeItemName":"外科检查","optionType":1,"price":500,"salePrice":100,"salePriceStr":"100","itemName":"外科检查","itemId":"WK0001"}],"examSuiteId":'',"frequent":0,"genderRequire":0,"groupSale":0,"hospitalSettlePrice":'',"images":"https://file.helianhealth.com/manager/pkg/img_default.jpg","itemDesc":"<h6>心胸肺及腰椎</h6><p><strong>耳鼻喉科检查</strong></p><h6>泌尿生殖</h6><p><strong>1.0腰椎核磁</strong></p><h6>肿瘤生化</h6><p><strong>总胆固醇</strong> <strong>外科检查</strong></p><h6>胃部疾病检查</h6><p><strong>电子胃镜</strong> <strong>1.0右膝关节核磁</strong></p><h6>女性检查</h6><p><strong>血HCG</strong></p>","itemDescType":0,"marryRequire":0,"needCardNo":1,"notice":{"notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。","notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。"},"operatorName":'',"optimisticLockId":"2598","optimisticLockVersion":1605518935000,"pkgBaseId":'',"pkgDesc":"<p><img src=\"https://file.helianhealth.com/manager/pkg/desc_default.jpg\"></p>","pkgFrom":'',"pkgId":2598,"pkgItemDiscount":1,"pkgName":"界面自动化团检套餐","pkgSyn":'true',"price":"112.33","recommendLabel":'',"salePrice":50,"salesVolume":185,"skuId":14661,"spuId":14618,"stationId":"HL99998","suitableLabel":"","supportAddition":1,"thumbnail":"https://file.helianhealth.com/manager/pkg/img_default.jpg","valid":365,"wxSale":0}；sql：{}
2020-12-28 09:46:53,679-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:53,727-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:46:53,728-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:46:53,766-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:46:53,768-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:53,828-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:46:53,829-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:46:53,856-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:46:53,857-[INFO]-logger.py-all_method-日志信息:团检套餐详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/suite/v2/newGoodsPkg/14618
2020-12-28 09:46:53,911-[INFO]-logger.py-all_method-日志信息:团检套餐详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'aliDetailImage': '', 'aliDiscount': 0.0, 'aliFeatureItem': '', 'aliLabels': '', 'aliListImage': None, 'aliPkgDesc': '', 'aliSalePrice': None, 'aliSettlementPrice': None, 'categoryLevelOne': 1, 'categoryLevelTwo': 34, 'examItemList': '[{"examFeeItemID":"HY0039","examFeeItemName":"血HCG","optionType":1,"price":3300,"salePrice":0.02,"salePriceStr":"0.02"},{"examFeeItemID":"HY0045","examFeeItemName":"总胆固醇","optionType":1,"price":600,"salePrice":0.30,"salePriceStr":"0.30"},{"examFeeItemID":"MR0001","examFeeItemName":"1.0腰椎核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"MR0010","examFeeItemName":"1.0右膝关节核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WG0002","examFeeItemName":"耳鼻喉科检查","optionType":1,"price":800,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2.00,"salePriceStr":"2"},{"examFeeItemID":"WK0001","examFeeItemName":"外科检查","optionType":1,"price":500,"salePrice":100.00,"salePriceStr":"100"}]', 'examSuiteId': None, 'frequent': 0, 'genderRequire': 0, 'groupSale': 0, 'hospitalSettlePrice': None, 'images': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'itemDesc': '<h6>心胸肺及腰椎</h6><p><strong>耳鼻喉科检查</strong></p><h6>泌尿生殖</h6><p><strong>1.0腰椎核磁</strong></p><h6>肿瘤生化</h6><p><strong>总胆固醇</strong> <strong>外科检查</strong></p><h6>胃部疾病检查</h6><p><strong>电子胃镜</strong> <strong>1.0右膝关节核磁</strong></p><h6>女性检查</h6><p><strong>血HCG</strong></p>', 'itemDescType': 0, 'marryRequire': 0, 'needCardNo': 1, 'notice': '{"notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。","notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。"}', 'operatorName': None, 'optimisticLockId': '2598', 'optimisticLockVersion': 1609117823000, 'pkgBaseId': None, 'pkgDesc': '<p><img src="https://file.helianhealth.com/manager/pkg/desc_default.jpg"></p>', 'pkgFrom': None, 'pkgId': 2598, 'pkgItemDiscount': 1.0, 'pkgName': '界面自动化团检套餐', 'pkgSyn': True, 'price': 112.33, 'recommendLabel': '', 'salePrice': 50.0, 'salesVolume': 185, 'skuId': 14661, 'spuId': 14618, 'stationId': 'HL99998', 'suitableLabel': '', 'supportAddition': 1, 'thumbnail': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'valid': 365, 'wxSale': 0}, 'success': True}
2020-12-28 09:46:53,914-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609117823000,时间戳id:2598
2020-12-28 09:46:53,915-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:46:54,074-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.395824s
2020-12-28 09:46:54,075-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:46:54,077-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.395824, 'data': None, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:46:55,085-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:46:55,087-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:46:55,090-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:46:55,091-[INFO]-logger.py-Unit_test-日志信息:正在执行第7条用例:【套餐管理】3-时间戳不一致-团检套餐-商品套餐编辑-用户a页面2时间戳1保存-失败
2020-12-28 09:46:55,093-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/suite/v2/modifyGoodsPkg；method：POST；data：{"aliDetailImage":'',"aliDiscount":'',"aliFeatureItem":'',"aliLabels":'',"aliListImage":'',"aliPkgDesc":'',"aliSalePrice":'',"aliSettlementPrice":'',"categoryLevelOne":1,"categoryLevelTwo":34,"examItemList":[{"examFeeItemID":"HY0039","examFeeItemName":"血HCG","optionType":1,"price":3300,"salePrice":10,"salePriceStr":"10","itemName":"血HCG","itemId":"HY0039"},{"examFeeItemID":"HY0045","examFeeItemName":"总胆固醇","optionType":1,"price":600,"salePrice":0.3,"salePriceStr":"0.30","itemName":"总胆固醇","itemId":"HY0045"},{"examFeeItemID":"MR0001","examFeeItemName":"1.0腰椎核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01","itemName":"1.0腰椎核磁","itemId":"MR0001"},{"examFeeItemID":"MR0010","examFeeItemName":"1.0右膝关节核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01","itemName":"1.0右膝关节核磁","itemId":"MR0010"},{"examFeeItemID":"WG0002","examFeeItemName":"耳鼻喉科检查","optionType":1,"price":800,"salePrice":0.01,"salePriceStr":"0.01","itemName":"耳鼻喉科检查","itemId":"WG0002"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2,"salePriceStr":"2","itemName":"电子胃镜","itemId":"WJ002"},{"examFeeItemID":"WK0001","examFeeItemName":"外科检查","optionType":1,"price":500,"salePrice":100,"salePriceStr":"100","itemName":"外科检查","itemId":"WK0001"}],"examSuiteId":'',"frequent":0,"genderRequire":0,"groupSale":0,"hospitalSettlePrice":'',"images":"https://file.helianhealth.com/manager/pkg/img_default.jpg","itemDesc":"<h6>心胸肺及腰椎</h6><p><strong>耳鼻喉科检查</strong></p><h6>泌尿生殖</h6><p><strong>1.0腰椎核磁</strong></p><h6>肿瘤生化</h6><p><strong>总胆固醇</strong> <strong>外科检查</strong></p><h6>胃部疾病检查</h6><p><strong>电子胃镜</strong> <strong>1.0右膝关节核磁</strong></p><h6>女性检查</h6><p><strong>血HCG</strong></p>","itemDescType":0,"marryRequire":0,"needCardNo":1,"notice":{"notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。","notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。"},"operatorName":'',"optimisticLockId":"2598","optimisticLockVersion":1605518935000,"pkgBaseId":'',"pkgDesc":"<p><img src=\"https://file.helianhealth.com/manager/pkg/desc_default.jpg\"></p>","pkgFrom":'',"pkgId":2598,"pkgItemDiscount":1,"pkgName":"界面自动化团检套餐","pkgSyn":'true',"price":"112.33","recommendLabel":'',"salePrice":50,"salesVolume":185,"skuId":14661,"spuId":14618,"stationId":"HL99998","suitableLabel":"","supportAddition":1,"thumbnail":"https://file.helianhealth.com/manager/pkg/img_default.jpg","valid":365,"wxSale":0}；sql：{}
2020-12-28 09:46:55,096-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:55,147-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:46:55,149-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:46:55,193-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:46:55,198-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:55,252-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:46:55,271-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:46:55,305-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:46:55,307-[INFO]-logger.py-all_method-日志信息:团检套餐详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/suite/v2/newGoodsPkg/14618
2020-12-28 09:46:55,359-[INFO]-logger.py-all_method-日志信息:团检套餐详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'aliDetailImage': '', 'aliDiscount': 0.0, 'aliFeatureItem': '', 'aliLabels': '', 'aliListImage': None, 'aliPkgDesc': '', 'aliSalePrice': None, 'aliSettlementPrice': None, 'categoryLevelOne': 1, 'categoryLevelTwo': 34, 'examItemList': '[{"examFeeItemID":"HY0039","examFeeItemName":"血HCG","optionType":1,"price":3300,"salePrice":0.02,"salePriceStr":"0.02"},{"examFeeItemID":"HY0045","examFeeItemName":"总胆固醇","optionType":1,"price":600,"salePrice":0.30,"salePriceStr":"0.30"},{"examFeeItemID":"MR0001","examFeeItemName":"1.0腰椎核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"MR0010","examFeeItemName":"1.0右膝关节核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WG0002","examFeeItemName":"耳鼻喉科检查","optionType":1,"price":800,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2.00,"salePriceStr":"2"},{"examFeeItemID":"WK0001","examFeeItemName":"外科检查","optionType":1,"price":500,"salePrice":100.00,"salePriceStr":"100"}]', 'examSuiteId': None, 'frequent': 0, 'genderRequire': 0, 'groupSale': 0, 'hospitalSettlePrice': None, 'images': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'itemDesc': '<h6>心胸肺及腰椎</h6><p><strong>耳鼻喉科检查</strong></p><h6>泌尿生殖</h6><p><strong>1.0腰椎核磁</strong></p><h6>肿瘤生化</h6><p><strong>总胆固醇</strong> <strong>外科检查</strong></p><h6>胃部疾病检查</h6><p><strong>电子胃镜</strong> <strong>1.0右膝关节核磁</strong></p><h6>女性检查</h6><p><strong>血HCG</strong></p>', 'itemDescType': 0, 'marryRequire': 0, 'needCardNo': 1, 'notice': '{"notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。","notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。"}', 'operatorName': None, 'optimisticLockId': '2598', 'optimisticLockVersion': 1609120014000, 'pkgBaseId': None, 'pkgDesc': '<p><img src="https://file.helianhealth.com/manager/pkg/desc_default.jpg"></p>', 'pkgFrom': None, 'pkgId': 2598, 'pkgItemDiscount': 1.0, 'pkgName': '界面自动化团检套餐', 'pkgSyn': True, 'price': 112.33, 'recommendLabel': '', 'salePrice': 50.0, 'salesVolume': 185, 'skuId': 14661, 'spuId': 14618, 'stationId': 'HL99998', 'suitableLabel': '', 'supportAddition': 1, 'thumbnail': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'valid': 365, 'wxSale': 0}, 'success': True}
2020-12-28 09:46:55,364-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120014000,时间戳id:2598
2020-12-28 09:46:55,367-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:46:55,542-[INFO]-logger.py-httpRequest-日志信息:第一次保存headers：{'optimisticLockVersion': '1609120014000', 'optimisticLockId': '2598', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '0', 'errorMsg': '', 'result': None, 'success': True}
2020-12-28 09:46:55,645-[INFO]-logger.py-httpRequest-日志信息:第二次保存headers：{'optimisticLockVersion': '1609120014000', 'optimisticLockId': '2598', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '20289', 'errorMsg': '该项数据已被修改，请刷新后重试！', 'result': None, 'success': False}
2020-12-28 09:46:55,647-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.5504s
2020-12-28 09:46:55,648-[INFO]-logger.py-Unit_test-日志信息:接口返回message:该项数据已被修改，请刷新后重试！
2020-12-28 09:46:55,654-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20289
2020-12-28 09:46:55,656-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.5504, 'data': '该项数据已被修改，请刷新后重试！', 'code': '20289', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:46:56,725-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:46:56,726-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:46:56,728-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:46:56,729-[INFO]-logger.py-Unit_test-日志信息:正在执行第8条用例:【套餐管理】4-时间戳不一致-团检套餐-商品套餐编辑-用户b页面2时间戳1保存-失败
2020-12-28 09:46:56,730-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/suite/v2/modifyGoodsPkg；method：POST；data：{"aliDetailImage":'',"aliDiscount":'',"aliFeatureItem":'',"aliLabels":'',"aliListImage":'',"aliPkgDesc":'',"aliSalePrice":'',"aliSettlementPrice":'',"categoryLevelOne":1,"categoryLevelTwo":34,"examItemList":[{"examFeeItemID":"HY0039","examFeeItemName":"血HCG","optionType":1,"price":3300,"salePrice":10,"salePriceStr":"10","itemName":"血HCG","itemId":"HY0039"},{"examFeeItemID":"HY0045","examFeeItemName":"总胆固醇","optionType":1,"price":600,"salePrice":0.3,"salePriceStr":"0.30","itemName":"总胆固醇","itemId":"HY0045"},{"examFeeItemID":"MR0001","examFeeItemName":"1.0腰椎核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01","itemName":"1.0腰椎核磁","itemId":"MR0001"},{"examFeeItemID":"MR0010","examFeeItemName":"1.0右膝关节核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01","itemName":"1.0右膝关节核磁","itemId":"MR0010"},{"examFeeItemID":"WG0002","examFeeItemName":"耳鼻喉科检查","optionType":1,"price":800,"salePrice":0.01,"salePriceStr":"0.01","itemName":"耳鼻喉科检查","itemId":"WG0002"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2,"salePriceStr":"2","itemName":"电子胃镜","itemId":"WJ002"},{"examFeeItemID":"WK0001","examFeeItemName":"外科检查","optionType":1,"price":500,"salePrice":100,"salePriceStr":"100","itemName":"外科检查","itemId":"WK0001"}],"examSuiteId":'',"frequent":0,"genderRequire":0,"groupSale":0,"hospitalSettlePrice":'',"images":"https://file.helianhealth.com/manager/pkg/img_default.jpg","itemDesc":"<h6>心胸肺及腰椎</h6><p><strong>耳鼻喉科检查</strong></p><h6>泌尿生殖</h6><p><strong>1.0腰椎核磁</strong></p><h6>肿瘤生化</h6><p><strong>总胆固醇</strong> <strong>外科检查</strong></p><h6>胃部疾病检查</h6><p><strong>电子胃镜</strong> <strong>1.0右膝关节核磁</strong></p><h6>女性检查</h6><p><strong>血HCG</strong></p>","itemDescType":0,"marryRequire":0,"needCardNo":1,"notice":{"notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。","notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。"},"operatorName":'',"optimisticLockId":"2598","optimisticLockVersion":1605518935000,"pkgBaseId":'',"pkgDesc":"<p><img src=\"https://file.helianhealth.com/manager/pkg/desc_default.jpg\"></p>","pkgFrom":'',"pkgId":2598,"pkgItemDiscount":1,"pkgName":"界面自动化团检套餐","pkgSyn":'true',"price":"112.33","recommendLabel":'',"salePrice":50,"salesVolume":185,"skuId":14661,"spuId":14618,"stationId":"HL99998","suitableLabel":"","supportAddition":1,"thumbnail":"https://file.helianhealth.com/manager/pkg/img_default.jpg","valid":365,"wxSale":0}；sql：{}
2020-12-28 09:46:56,734-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:56,812-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:46:56,814-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:46:56,839-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:46:56,841-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:56,893-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:46:56,894-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:46:56,945-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:46:56,947-[INFO]-logger.py-all_method-日志信息:团检套餐详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/suite/v2/newGoodsPkg/14618
2020-12-28 09:46:57,010-[INFO]-logger.py-all_method-日志信息:团检套餐详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'aliDetailImage': '', 'aliDiscount': 0.0, 'aliFeatureItem': '', 'aliLabels': '', 'aliListImage': None, 'aliPkgDesc': '', 'aliSalePrice': None, 'aliSettlementPrice': None, 'categoryLevelOne': 1, 'categoryLevelTwo': 34, 'examItemList': '[{"examFeeItemID":"HY0039","examFeeItemName":"血HCG","optionType":1,"price":3300,"salePrice":0.02,"salePriceStr":"0.02"},{"examFeeItemID":"HY0045","examFeeItemName":"总胆固醇","optionType":1,"price":600,"salePrice":0.30,"salePriceStr":"0.30"},{"examFeeItemID":"MR0001","examFeeItemName":"1.0腰椎核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"MR0010","examFeeItemName":"1.0右膝关节核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WG0002","examFeeItemName":"耳鼻喉科检查","optionType":1,"price":800,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2.00,"salePriceStr":"2"},{"examFeeItemID":"WK0001","examFeeItemName":"外科检查","optionType":1,"price":500,"salePrice":100.00,"salePriceStr":"100"}]', 'examSuiteId': None, 'frequent': 0, 'genderRequire': 0, 'groupSale': 0, 'hospitalSettlePrice': None, 'images': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'itemDesc': '<h6>心胸肺及腰椎</h6><p><strong>耳鼻喉科检查</strong></p><h6>泌尿生殖</h6><p><strong>1.0腰椎核磁</strong></p><h6>肿瘤生化</h6><p><strong>总胆固醇</strong> <strong>外科检查</strong></p><h6>胃部疾病检查</h6><p><strong>电子胃镜</strong> <strong>1.0右膝关节核磁</strong></p><h6>女性检查</h6><p><strong>血HCG</strong></p>', 'itemDescType': 0, 'marryRequire': 0, 'needCardNo': 1, 'notice': '{"notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。","notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。"}', 'operatorName': None, 'optimisticLockId': '2598', 'optimisticLockVersion': 1609120015000, 'pkgBaseId': None, 'pkgDesc': '<p><img src="https://file.helianhealth.com/manager/pkg/desc_default.jpg"></p>', 'pkgFrom': None, 'pkgId': 2598, 'pkgItemDiscount': 1.0, 'pkgName': '界面自动化团检套餐', 'pkgSyn': True, 'price': 112.33, 'recommendLabel': '', 'salePrice': 50.0, 'salesVolume': 185, 'skuId': 14661, 'spuId': 14618, 'stationId': 'HL99998', 'suitableLabel': '', 'supportAddition': 1, 'thumbnail': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'valid': 365, 'wxSale': 0}, 'success': True}
2020-12-28 09:46:57,016-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120015000,时间戳id:2598
2020-12-28 09:46:57,019-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:57,079-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(804,)
2020-12-28 09:46:57,081-[INFO]-logger.py-all_method-日志信息:手机15990106283:id获取成功返回:804
2020-12-28 09:46:57,113-[INFO]-logger.py-all_method-日志信息:手机15990106283:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '804', 'stationId': 'HL99998', 'token': 'ee999cd0bc8f5838fd28448a5f67fb14'}
2020-12-28 09:46:57,115-[INFO]-logger.py-all_method-日志信息:团检套餐详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/suite/v2/newGoodsPkg/14618
2020-12-28 09:46:57,174-[INFO]-logger.py-all_method-日志信息:团检套餐详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'aliDetailImage': '', 'aliDiscount': 0.0, 'aliFeatureItem': '', 'aliLabels': '', 'aliListImage': None, 'aliPkgDesc': '', 'aliSalePrice': None, 'aliSettlementPrice': None, 'categoryLevelOne': 1, 'categoryLevelTwo': 34, 'examItemList': '[{"examFeeItemID":"HY0039","examFeeItemName":"血HCG","optionType":1,"price":3300,"salePrice":0.02,"salePriceStr":"0.02"},{"examFeeItemID":"HY0045","examFeeItemName":"总胆固醇","optionType":1,"price":600,"salePrice":0.30,"salePriceStr":"0.30"},{"examFeeItemID":"MR0001","examFeeItemName":"1.0腰椎核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"MR0010","examFeeItemName":"1.0右膝关节核磁","optionType":1,"price":32300,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WG0002","examFeeItemName":"耳鼻喉科检查","optionType":1,"price":800,"salePrice":0.01,"salePriceStr":"0.01"},{"examFeeItemID":"WJ002","examFeeItemName":"电子胃镜","optionType":1,"price":33600,"salePrice":2.00,"salePriceStr":"2"},{"examFeeItemID":"WK0001","examFeeItemName":"外科检查","optionType":1,"price":500,"salePrice":100.00,"salePriceStr":"100"}]', 'examSuiteId': None, 'frequent': 0, 'genderRequire': 0, 'groupSale': 0, 'hospitalSettlePrice': None, 'images': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'itemDesc': '<h6>心胸肺及腰椎</h6><p><strong>耳鼻喉科检查</strong></p><h6>泌尿生殖</h6><p><strong>1.0腰椎核磁</strong></p><h6>肿瘤生化</h6><p><strong>总胆固醇</strong> <strong>外科检查</strong></p><h6>胃部疾病检查</h6><p><strong>电子胃镜</strong> <strong>1.0右膝关节核磁</strong></p><h6>女性检查</h6><p><strong>血HCG</strong></p>', 'itemDescType': 0, 'marryRequire': 0, 'needCardNo': 1, 'notice': '{"notice3":"1、全部体检完毕后请把体检单交给前台。/b2、如需纸质报告请到院咨询工作人员。/b3、获取报告后，可在【禾健康】APP联系专家解读报告。","notice2":"1、请空腹携带身份证到达体检中心后，先到前台登记。/b2、勿服药（降压药，降糖药除外），空腹项目结束后，可吃早餐并按常规服药。/b3、勿饮水；勿携带贵重物品；勿穿连体类衣裤及长筒靴。/b4、体检当日清晨可提前留置尿、粪便标本，取尿液标本时需取中段尿。/b5、做上腹部B超检查前，应空腹并排空大便，做子宫、附件/前列腺、膀胱B超检查时则憋尿，使膀胱充盈后才能进行。/b6、已孕和备孕人群不宜做放射科检测。","notice1":"1、体检前三日请清淡饮食，请勿饮酒，勿劳累。/b2、体检前一晚8点后不再进食，适量喝水保障充足睡眠。/b3、女性月经周期结束3天后可做妇科、尿液检测，检前1天避免性生活，请合理预约时间。","notice4":"1、订单有效期：订单有效期1年内可预约，过期无效。/b2、预约改时：预约后，待订单状态为【已确认】后不可更改预约时间。/b3、退款：预约后，待订单状态为【已确认】后不可申请退款。"}', 'operatorName': None, 'optimisticLockId': '2598', 'optimisticLockVersion': 1609120015000, 'pkgBaseId': None, 'pkgDesc': '<p><img src="https://file.helianhealth.com/manager/pkg/desc_default.jpg"></p>', 'pkgFrom': None, 'pkgId': 2598, 'pkgItemDiscount': 1.0, 'pkgName': '界面自动化团检套餐', 'pkgSyn': True, 'price': 112.33, 'recommendLabel': '', 'salePrice': 50.0, 'salesVolume': 185, 'skuId': 14661, 'spuId': 14618, 'stationId': 'HL99998', 'suitableLabel': '', 'supportAddition': 1, 'thumbnail': 'https://file.helianhealth.com/manager/pkg/img_default.jpg', 'valid': 365, 'wxSale': 0}, 'success': True}
2020-12-28 09:46:57,180-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120015000,时间戳id:2598
2020-12-28 09:46:57,181-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:46:57,338-[INFO]-logger.py-httpRequest-日志信息:第一次保存headers：{'optimisticLockVersion': '1609120015000', 'optimisticLockId': '2598', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '0', 'errorMsg': '', 'result': None, 'success': True}
2020-12-28 09:46:57,443-[INFO]-logger.py-httpRequest-日志信息:第二次保存headers：{'optimisticLockVersion': '1609120015000', 'optimisticLockId': '2598', 'adminId': '804', 'stationId': 'HL99998', 'token': 'ee999cd0bc8f5838fd28448a5f67fb14'},返回：{'code': '20289', 'errorMsg': '该项数据已被修改，请刷新后重试！', 'result': None, 'success': False}
2020-12-28 09:46:57,444-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.711094s
2020-12-28 09:46:57,445-[INFO]-logger.py-Unit_test-日志信息:接口返回message:该项数据已被修改，请刷新后重试！
2020-12-28 09:46:57,446-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20289
2020-12-28 09:46:57,447-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.711094, 'data': '该项数据已被修改，请刷新后重试！', 'code': '20289', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:46:58,415-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:46:58,416-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:46:58,419-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:46:58,420-[INFO]-logger.py-Unit_test-日志信息:正在执行第9条用例:【套餐管理】1-正常-项目包-自选项目包详情-成功
2020-12-28 09:46:58,421-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/optional/pkg/get/186；method：GET；data：{}；sql：{}
2020-12-28 09:46:58,424-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:58,489-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:46:58,491-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:46:58,509-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:46:58,510-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:46:58,548-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '0', 'errorMsg': '', 'result': {'examItemList': [{'examFeeItemID': 'HY0009', 'examFeeItemName': '同型半胱胺酸', 'price': 3300, 'salePrice': 1.0, 'salePriceStr': '1'}, {'examFeeItemID': 'HY0045', 'examFeeItemName': '总胆固醇', 'price': 600, 'salePrice': 0.3, 'salePriceStr': '0.30'}, {'examFeeItemID': 'HY0056', 'examFeeItemName': '碱性磷酸（ALP）', 'price': 500, 'salePrice': 1.0, 'salePriceStr': '1'}, {'examFeeItemID': 'NK0001', 'examFeeItemName': '内科检查(必检）', 'price': 800, 'salePrice': 2.0, 'salePriceStr': '2'}, {'examFeeItemID': 'WG0002', 'examFeeItemName': '耳鼻喉科检查', 'price': 800, 'salePrice': 0.01, 'salePriceStr': '0.01'}, {'examFeeItemID': 'WYM0001', 'examFeeItemName': 'C13呼气试验(空腹)', 'price': 19000, 'salePrice': 3.0, 'salePriceStr': '3'}, {'examFeeItemID': 'XZ0006', 'examFeeItemName': 'shyceshishy1', 'price': 2, 'salePrice': 0.01, 'salePriceStr': '0.01'}], 'gmtModified': 1609117830000, 'id': 186, 'optimisticLockId': '186', 'optimisticLockVersion': 1609117830000, 'optionalPkgDesc': '', 'optionalPkgName': '界面自动化项目包', 'price': 250.02, 'salePrice': 7.32, 'stationId': 'HL99998'}, 'success': True}
2020-12-28 09:46:58,550-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.12692s
2020-12-28 09:46:58,551-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:46:58,552-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.12692, 'data': {'examItemList': [{'examFeeItemID': 'HY0009', 'examFeeItemName': '同型半胱胺酸', 'price': 3300, 'salePrice': 1.0, 'salePriceStr': '1'}, {'examFeeItemID': 'HY0045', 'examFeeItemName': '总胆固醇', 'price': 600, 'salePrice': 0.3, 'salePriceStr': '0.30'}, {'examFeeItemID': 'HY0056', 'examFeeItemName': '碱性磷酸（ALP）', 'price': 500, 'salePrice': 1.0, 'salePriceStr': '1'}, {'examFeeItemID': 'NK0001', 'examFeeItemName': '内科检查(必检）', 'price': 800, 'salePrice': 2.0, 'salePriceStr': '2'}, {'examFeeItemID': 'WG0002', 'examFeeItemName': '耳鼻喉科检查', 'price': 800, 'salePrice': 0.01, 'salePriceStr': '0.01'}, {'examFeeItemID': 'WYM0001', 'examFeeItemName': 'C13呼气试验(空腹)', 'price': 19000, 'salePrice': 3.0, 'salePriceStr': '3'}, {'examFeeItemID': 'XZ0006', 'examFeeItemName': 'shyceshishy1', 'price': 2, 'salePrice': 0.01, 'salePriceStr': '0.01'}], 'gmtModified': 1609117830000, 'id': 186, 'optimisticLockId': '186', 'optimisticLockVersion': 1609117830000, 'optionalPkgDesc': '', 'optionalPkgName': '界面自动化项目包', 'price': 250.02, 'salePrice': 7.32, 'stationId': 'HL99998'}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:46:59,542-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:46:59,543-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:46:59,545-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:46:59,547-[INFO]-logger.py-Unit_test-日志信息:正在执行第10条用例:【套餐管理】2-时间戳一致-项目包-自选项目包保存-用户a页面1保存-成功
2020-12-28 09:46:59,548-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/optional/pkg/save；method：POST；data：{"id":186,"stationId":"HL99998","itemIds":"HY0009,HY0045,HY0056,NK0001,WG0002,WYM0001,XZ0006","optionalPkgName":"界面自动化项目包","optionalPkgDesc":""}；sql：{}
2020-12-28 09:46:59,550-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:59,581-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:46:59,582-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:46:59,623-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:46:59,625-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:46:59,684-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:46:59,685-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:46:59,704-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:46:59,706-[INFO]-logger.py-all_method-日志信息:项目包详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/optional/pkg/get/186
2020-12-28 09:46:59,761-[INFO]-logger.py-all_method-日志信息:项目包详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'examItemList': [{'examFeeItemID': 'HY0009', 'examFeeItemName': '同型半胱胺酸', 'price': 3300, 'salePrice': 1.0, 'salePriceStr': '1'}, {'examFeeItemID': 'HY0045', 'examFeeItemName': '总胆固醇', 'price': 600, 'salePrice': 0.3, 'salePriceStr': '0.30'}, {'examFeeItemID': 'HY0056', 'examFeeItemName': '碱性磷酸（ALP）', 'price': 500, 'salePrice': 1.0, 'salePriceStr': '1'}, {'examFeeItemID': 'NK0001', 'examFeeItemName': '内科检查(必检）', 'price': 800, 'salePrice': 2.0, 'salePriceStr': '2'}, {'examFeeItemID': 'WG0002', 'examFeeItemName': '耳鼻喉科检查', 'price': 800, 'salePrice': 0.01, 'salePriceStr': '0.01'}, {'examFeeItemID': 'WYM0001', 'examFeeItemName': 'C13呼气试验(空腹)', 'price': 19000, 'salePrice': 3.0, 'salePriceStr': '3'}, {'examFeeItemID': 'XZ0006', 'examFeeItemName': 'shyceshishy1', 'price': 2, 'salePrice': 0.01, 'salePriceStr': '0.01'}], 'gmtModified': 1609117830000, 'id': 186, 'optimisticLockId': '186', 'optimisticLockVersion': 1609117830000, 'optionalPkgDesc': '', 'optionalPkgName': '界面自动化项目包', 'price': 250.02, 'salePrice': 7.32, 'stationId': 'HL99998'}, 'success': True}
2020-12-28 09:46:59,763-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609117830000,时间戳id:186
2020-12-28 09:46:59,764-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:46:59,890-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.339454s
2020-12-28 09:46:59,891-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:46:59,892-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.339454, 'data': 186, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:47:00,804-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:00,805-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:00,807-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:00,808-[INFO]-logger.py-Unit_test-日志信息:正在执行第11条用例:【套餐管理】3-时间戳不一致-项目包-自选项目包保存-用户a页面2时间戳1保存-失败
2020-12-28 09:47:00,809-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/optional/pkg/save；method：POST；data：{"id":186,"stationId":"HL99998","itemIds":"HY0009,HY0045,HY0056,NK0001,WG0002,WYM0001,XZ0006","optionalPkgName":"界面自动化项目包","optionalPkgDesc":""}；sql：{}
2020-12-28 09:47:00,811-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:00,861-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:00,862-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:00,889-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:00,891-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:00,943-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:00,944-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:00,971-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:00,972-[INFO]-logger.py-all_method-日志信息:项目包详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/optional/pkg/get/186
2020-12-28 09:47:01,020-[INFO]-logger.py-all_method-日志信息:项目包详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'examItemList': [{'examFeeItemID': 'HY0009', 'examFeeItemName': '同型半胱胺酸', 'price': 3300, 'salePrice': 1.0, 'salePriceStr': '1'}, {'examFeeItemID': 'HY0045', 'examFeeItemName': '总胆固醇', 'price': 600, 'salePrice': 0.3, 'salePriceStr': '0.30'}, {'examFeeItemID': 'HY0056', 'examFeeItemName': '碱性磷酸（ALP）', 'price': 500, 'salePrice': 1.0, 'salePriceStr': '1'}, {'examFeeItemID': 'NK0001', 'examFeeItemName': '内科检查(必检）', 'price': 800, 'salePrice': 2.0, 'salePriceStr': '2'}, {'examFeeItemID': 'WG0002', 'examFeeItemName': '耳鼻喉科检查', 'price': 800, 'salePrice': 0.01, 'salePriceStr': '0.01'}, {'examFeeItemID': 'WYM0001', 'examFeeItemName': 'C13呼气试验(空腹)', 'price': 19000, 'salePrice': 3.0, 'salePriceStr': '3'}, {'examFeeItemID': 'XZ0006', 'examFeeItemName': 'shyceshishy1', 'price': 2, 'salePrice': 0.01, 'salePriceStr': '0.01'}], 'gmtModified': 1609120020000, 'id': 186, 'optimisticLockId': '186', 'optimisticLockVersion': 1609120020000, 'optionalPkgDesc': '', 'optionalPkgName': '界面自动化项目包', 'price': 250.02, 'salePrice': 7.32, 'stationId': 'HL99998'}, 'success': True}
2020-12-28 09:47:01,025-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120020000,时间戳id:186
2020-12-28 09:47:01,029-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:47:01,162-[INFO]-logger.py-httpRequest-日志信息:第一次保存headers：{'optimisticLockVersion': '1609120020000', 'optimisticLockId': '186', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '0', 'errorMsg': '', 'result': 186, 'success': True}
2020-12-28 09:47:01,258-[INFO]-logger.py-httpRequest-日志信息:第二次保存headers：{'optimisticLockVersion': '1609120020000', 'optimisticLockId': '186', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '20289', 'errorMsg': '该项数据已被修改，请刷新后重试！', 'result': None, 'success': False}
2020-12-28 09:47:01,260-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.448374s
2020-12-28 09:47:01,263-[INFO]-logger.py-Unit_test-日志信息:接口返回message:该项数据已被修改，请刷新后重试！
2020-12-28 09:47:01,265-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20289
2020-12-28 09:47:01,267-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.448374, 'data': '该项数据已被修改，请刷新后重试！', 'code': '20289', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:47:02,230-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:02,232-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:02,233-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:02,234-[INFO]-logger.py-Unit_test-日志信息:正在执行第12条用例:【套餐管理】4-时间戳不一致-项目包-自选项目包保存-用户b页面2时间戳1保存-失败
2020-12-28 09:47:02,235-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/optional/pkg/save；method：POST；data：{"id":186,"stationId":"HL99998","itemIds":"HY0009,HY0045,HY0056,NK0001,WG0002,WYM0001,XZ0006","optionalPkgName":"界面自动化项目包","optionalPkgDesc":""}；sql：{}
2020-12-28 09:47:02,237-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:02,284-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:02,285-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:02,320-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:02,322-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:02,369-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:02,370-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:02,398-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:02,400-[INFO]-logger.py-all_method-日志信息:项目包详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/optional/pkg/get/186
2020-12-28 09:47:02,451-[INFO]-logger.py-all_method-日志信息:项目包详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'examItemList': [{'examFeeItemID': 'HY0009', 'examFeeItemName': '同型半胱胺酸', 'price': 3300, 'salePrice': 1.0, 'salePriceStr': '1'}, {'examFeeItemID': 'HY0045', 'examFeeItemName': '总胆固醇', 'price': 600, 'salePrice': 0.3, 'salePriceStr': '0.30'}, {'examFeeItemID': 'HY0056', 'examFeeItemName': '碱性磷酸（ALP）', 'price': 500, 'salePrice': 1.0, 'salePriceStr': '1'}, {'examFeeItemID': 'NK0001', 'examFeeItemName': '内科检查(必检）', 'price': 800, 'salePrice': 2.0, 'salePriceStr': '2'}, {'examFeeItemID': 'WG0002', 'examFeeItemName': '耳鼻喉科检查', 'price': 800, 'salePrice': 0.01, 'salePriceStr': '0.01'}, {'examFeeItemID': 'WYM0001', 'examFeeItemName': 'C13呼气试验(空腹)', 'price': 19000, 'salePrice': 3.0, 'salePriceStr': '3'}, {'examFeeItemID': 'XZ0006', 'examFeeItemName': 'shyceshishy1', 'price': 2, 'salePrice': 0.01, 'salePriceStr': '0.01'}], 'gmtModified': 1609120021000, 'id': 186, 'optimisticLockId': '186', 'optimisticLockVersion': 1609120021000, 'optionalPkgDesc': '', 'optionalPkgName': '界面自动化项目包', 'price': 250.02, 'salePrice': 7.32, 'stationId': 'HL99998'}, 'success': True}
2020-12-28 09:47:02,452-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120021000,时间戳id:186
2020-12-28 09:47:02,454-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:02,499-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(804,)
2020-12-28 09:47:02,501-[INFO]-logger.py-all_method-日志信息:手机15990106283:id获取成功返回:804
2020-12-28 09:47:02,527-[INFO]-logger.py-all_method-日志信息:手机15990106283:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '804', 'stationId': 'HL99998', 'token': 'ee999cd0bc8f5838fd28448a5f67fb14'}
2020-12-28 09:47:02,529-[INFO]-logger.py-all_method-日志信息:项目包详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/optional/pkg/get/186
2020-12-28 09:47:02,577-[INFO]-logger.py-all_method-日志信息:项目包详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'examItemList': [{'examFeeItemID': 'HY0009', 'examFeeItemName': '同型半胱胺酸', 'price': 3300, 'salePrice': 1.0, 'salePriceStr': '1'}, {'examFeeItemID': 'HY0045', 'examFeeItemName': '总胆固醇', 'price': 600, 'salePrice': 0.3, 'salePriceStr': '0.30'}, {'examFeeItemID': 'HY0056', 'examFeeItemName': '碱性磷酸（ALP）', 'price': 500, 'salePrice': 1.0, 'salePriceStr': '1'}, {'examFeeItemID': 'NK0001', 'examFeeItemName': '内科检查(必检）', 'price': 800, 'salePrice': 2.0, 'salePriceStr': '2'}, {'examFeeItemID': 'WG0002', 'examFeeItemName': '耳鼻喉科检查', 'price': 800, 'salePrice': 0.01, 'salePriceStr': '0.01'}, {'examFeeItemID': 'WYM0001', 'examFeeItemName': 'C13呼气试验(空腹)', 'price': 19000, 'salePrice': 3.0, 'salePriceStr': '3'}, {'examFeeItemID': 'XZ0006', 'examFeeItemName': 'shyceshishy1', 'price': 2, 'salePrice': 0.01, 'salePriceStr': '0.01'}], 'gmtModified': 1609120021000, 'id': 186, 'optimisticLockId': '186', 'optimisticLockVersion': 1609120021000, 'optionalPkgDesc': '', 'optionalPkgName': '界面自动化项目包', 'price': 250.02, 'salePrice': 7.32, 'stationId': 'HL99998'}, 'success': True}
2020-12-28 09:47:02,578-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120021000,时间戳id:186
2020-12-28 09:47:02,579-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:47:02,701-[INFO]-logger.py-httpRequest-日志信息:第一次保存headers：{'optimisticLockVersion': '1609120021000', 'optimisticLockId': '186', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '0', 'errorMsg': '', 'result': 186, 'success': True}
2020-12-28 09:47:02,803-[INFO]-logger.py-httpRequest-日志信息:第二次保存headers：{'optimisticLockVersion': '1609120021000', 'optimisticLockId': '186', 'adminId': '804', 'stationId': 'HL99998', 'token': 'ee999cd0bc8f5838fd28448a5f67fb14'},返回：{'code': '20289', 'errorMsg': '该项数据已被修改，请刷新后重试！', 'result': None, 'success': False}
2020-12-28 09:47:02,806-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.568317s
2020-12-28 09:47:02,810-[INFO]-logger.py-Unit_test-日志信息:接口返回message:该项数据已被修改，请刷新后重试！
2020-12-28 09:47:02,811-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20289
2020-12-28 09:47:02,813-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.568317, 'data': '该项数据已被修改，请刷新后重试！', 'code': '20289', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:47:03,801-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:03,802-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:03,804-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:03,805-[INFO]-logger.py-Unit_test-日志信息:正在执行第13条用例:【系统设置】1-正常-体检服务-获取机构信息-成功
2020-12-28 09:47:03,806-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/detail；method：GET；data：{'stationId':'HL99998'}；sql：{}
2020-12-28 09:47:03,808-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:03,853-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:03,854-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:03,881-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:03,882-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:47:03,919-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '10001', 'errorMsg': 'No provider available from registry nacos:8848 for service com.helian.healthmanage.biz.mix.api.third.wx.WxPublicToolsBizService:1.0.0 on consumer 10.42.3.78 use dubbo version 2.7.4.1, please check status of providers(disabled, not registered or in blacklist).', 'result': None, 'success': False}
2020-12-28 09:47:03,921-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.113947s
2020-12-28 09:47:03,922-[INFO]-logger.py-Unit_test-日志信息:接口返回message:No provider available from registry nacos:8848 for service com.helian.healthmanage.biz.mix.api.third.wx.WxPublicToolsBizService:1.0.0 on consumer 10.42.3.78 use dubbo version 2.7.4.1, please check status of providers(disabled, not registered or in blacklist).
2020-12-28 09:47:03,923-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：10001
2020-12-28 09:47:04,860-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:04,861-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:04,866-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:04,867-[INFO]-logger.py-Unit_test-日志信息:正在执行第14条用例:【系统设置】2-时间戳一致-体检服务-更改机构信息-用户a页面1保存-成功
2020-12-28 09:47:04,869-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/modify；method：POST；data：{"instId":1072,"reserveWeek":[1,2,3,4,5,6,7],"reserveRangeFrom":0,"reserveForbiddenTime":"23:50:59","drawBloodEndTime":"11:12","drawBloodStartTime":"07:50","reserveForbiddenDay":"20201124","whiteCompanyIds":"2708,2711,2734"}；sql：{}
2020-12-28 09:47:04,871-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:04,940-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:04,941-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:04,992-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:04,996-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:05,046-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:05,048-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:05,078-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:05,080-[INFO]-logger.py-all_method-日志信息:获取机构详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/detail?stationId=HL99998
2020-12-28 09:47:05,135-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:05,142-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:05,144-[INFO]-logger.py-Unit_test-日志信息:正在执行第15条用例:【系统设置】3-时间戳不一致-体检服务-更改机构信息-用户a页面2时间戳1保存-失败
2020-12-28 09:47:05,146-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/modify；method：POST；data：{"instId":1072,"reserveWeek":[1,2,3,4,5,6,7],"reserveRangeFrom":0,"reserveForbiddenTime":"23:50:59","drawBloodEndTime":"11:12","drawBloodStartTime":"07:50","reserveForbiddenDay":"20201124","whiteCompanyIds":"2708,2711,2734"}；sql：{}
2020-12-28 09:47:05,148-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:05,213-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:05,215-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:05,246-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:05,249-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:05,309-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:05,312-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:05,349-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:05,351-[INFO]-logger.py-all_method-日志信息:获取机构详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/detail?stationId=HL99998
2020-12-28 09:47:05,395-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:05,401-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:05,403-[INFO]-logger.py-Unit_test-日志信息:正在执行第16条用例:【系统设置】4-时间戳不一致-体检服务-更改机构信息-用户b页面2时间戳1保存-失败
2020-12-28 09:47:05,405-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/modify；method：POST；data：{"instId":1072,"reserveWeek":[1,2,3,4,5,6,7],"reserveRangeFrom":0,"reserveForbiddenTime":"23:50:59","drawBloodEndTime":"11:12","drawBloodStartTime":"07:50","reserveForbiddenDay":"20201124","whiteCompanyIds":"2708,2711,2734"}；sql：{}
2020-12-28 09:47:05,407-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:05,452-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:05,453-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:05,478-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:05,480-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:05,531-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:05,532-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:05,554-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:05,555-[INFO]-logger.py-all_method-日志信息:获取机构详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/detail?stationId=HL99998
2020-12-28 09:47:05,602-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:05,612-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:05,616-[INFO]-logger.py-Unit_test-日志信息:正在执行第17条用例:【系统设置】2-时间戳一致-数据同步-更改机构信息-用户a页面1保存-成功
2020-12-28 09:47:05,619-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/modify；method：POST；data：{"instId":1072,"groupSyncDay":"2","personalSyncDay":1,"reserveWeek":[1,2,3,4,5,6,7],"reserveRangeFrom":0,"reserveForbiddenTime":"23:50:59","drawBloodEndTime":"11:12","drawBloodStartTime":"07:50","whiteCompanyIds":"2708,2711,2734"}；sql：{}
2020-12-28 09:47:05,624-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:05,669-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:05,671-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:05,703-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:05,706-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:05,743-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:05,744-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:05,781-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:05,783-[INFO]-logger.py-all_method-日志信息:获取机构详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/detail?stationId=HL99998
2020-12-28 09:47:05,824-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:05,827-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:05,829-[INFO]-logger.py-Unit_test-日志信息:正在执行第18条用例:【系统设置】3-时间戳不一致-数据同步-更改机构信息-用户a页面2时间戳1保存-失败
2020-12-28 09:47:05,830-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/modify；method：POST；data：{"instId":1072,"groupSyncDay":"2","personalSyncDay":1,"reserveWeek":[1,2,3,4,5,6,7],"reserveRangeFrom":0,"reserveForbiddenTime":"23:50:59","drawBloodEndTime":"11:12","drawBloodStartTime":"07:50","whiteCompanyIds":"2708,2711,2734"}；sql：{}
2020-12-28 09:47:05,832-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:05,881-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:05,882-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:05,927-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:05,929-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:05,993-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:05,994-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:06,023-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:06,024-[INFO]-logger.py-all_method-日志信息:获取机构详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/detail?stationId=HL99998
2020-12-28 09:47:06,067-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:06,070-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:06,071-[INFO]-logger.py-Unit_test-日志信息:正在执行第19条用例:【系统设置】4-时间戳不一致-数据同步-更改机构信息-用户b页面2时间戳1保存-失败
2020-12-28 09:47:06,074-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/modify；method：POST；data：{"instId":1072,"groupSyncDay":"2","personalSyncDay":1,"reserveWeek":[1,2,3,4,5,6,7],"reserveRangeFrom":0,"reserveForbiddenTime":"23:50:59","drawBloodEndTime":"11:12","drawBloodStartTime":"07:50","whiteCompanyIds":"2708,2711,2734"}；sql：{}
2020-12-28 09:47:06,077-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:06,108-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:06,110-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:06,135-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:06,137-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:06,195-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:06,196-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:06,222-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:06,223-[INFO]-logger.py-all_method-日志信息:获取机构详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/detail?stationId=HL99998
2020-12-28 09:47:06,264-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:06,269-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:06,271-[INFO]-logger.py-Unit_test-日志信息:正在执行第20条用例:【系统设置】2-时间戳一致-业务设置-更改机构信息-用户a页面1保存-成功
2020-12-28 09:47:06,272-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/individualPurchase/modify；method：POST；data：{'instId':1072,'familyPkgBuyType':1,'individualPurchase':1,'individualPurchasePriceLowest':0,'enableSurveyQuestion':1}；sql：{}
2020-12-28 09:47:06,275-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:06,307-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:06,309-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:06,338-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:06,341-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:06,405-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:06,407-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:06,440-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:06,442-[INFO]-logger.py-all_method-日志信息:获取机构详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/detail?stationId=HL99998
2020-12-28 09:47:06,497-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:06,502-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:06,503-[INFO]-logger.py-Unit_test-日志信息:正在执行第21条用例:【系统设置】3-时间戳不一致-业务设置-更改机构信息-用户a页面2时间戳1保存-失败
2020-12-28 09:47:06,504-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/individualPurchase/modify；method：POST；data：{'instId':1072,'familyPkgBuyType':1,'individualPurchase':1,'individualPurchasePriceLowest':0,'enableSurveyQuestion':1}；sql：{}
2020-12-28 09:47:06,506-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:06,567-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:06,569-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:06,607-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:06,609-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:06,693-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:06,695-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:06,763-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:06,766-[INFO]-logger.py-all_method-日志信息:获取机构详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/detail?stationId=HL99998
2020-12-28 09:47:06,818-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:06,822-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:06,823-[INFO]-logger.py-Unit_test-日志信息:正在执行第22条用例:【系统设置】4-时间戳不一致-业务设置-更改机构信息-用户b页面2时间戳1保存-失败
2020-12-28 09:47:06,824-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/individualPurchase/modify；method：POST；data：{'instId':1072,'familyPkgBuyType':1,'individualPurchase':1,'individualPurchasePriceLowest':0,'enableSurveyQuestion':1}；sql：{}
2020-12-28 09:47:06,826-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:06,888-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:06,889-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:06,957-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:06,959-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:07,070-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:07,072-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:07,102-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:07,103-[INFO]-logger.py-all_method-日志信息:获取机构详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/admin/inst/detail?stationId=HL99998
2020-12-28 09:47:07,144-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:07,147-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:07,149-[INFO]-logger.py-Unit_test-日志信息:正在执行第23条用例:【单位体检】1-正常-单位批次-获取批次信息-成功
2020-12-28 09:47:07,150-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/card/v3/batch/2695；method：GET；data：{}；sql：{}
2020-12-28 09:47:07,151-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:07,212-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:07,213-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:07,239-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:07,241-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:47:07,316-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '0', 'errorMsg': '', 'result': {'auditOpenSync': 1, 'batchId': 2695, 'batchName': '基础体检女', 'batchProcess': 4, 'batchTimeAppointStatus': 0, 'bindTypes': '1', 'createTimeStamp': 1605098979000, 'dateJson': '[{"date":1605024000000,"examCount":1000},{"date":1605110400000,"examCount":1000},{"date":1605196800000,"examCount":1000},{"date":1605283200000,"examCount":1000},{"date":1605369600000,"examCount":1000},{"date":1605456000000,"examCount":1000},{"date":1605542400000,"examCount":1000},{"date":1605628800000,"examCount":1000},{"date":1605715200000,"examCount":1000},{"date":1605801600000,"examCount":1000},{"date":1605888000000,"examCount":1000},{"date":1605974400000,"examCount":1000},{"date":1606060800000,"examCount":1000},{"date":1606147200000,"examCount":1000},{"date":1606233600000,"examCount":1000},{"date":1606320000000,"examCount":1000},{"date":1606406400000,"examCount":1000},{"date":1606492800000,"examCount":1000},{"date":1606579200000,"examCount":1000},{"date":1606665600000,"examCount":1000},{"date":1606752000000,"examCount":1000},{"date":1606838400000,"examCount":1000},{"date":1606924800000,"examCount":1000},{"date":1607011200000,"examCount":1000},{"date":1607097600000,"examCount":1000},{"date":1607184000000,"examCount":1000},{"date":1607270400000,"examCount":1000},{"date":1607356800000,"examCount":1000},{"date":1607443200000,"examCount":1000},{"date":1607529600000,"examCount":1000},{"date":1607616000000,"examCount":1000},{"date":1607702400000,"examCount":1000},{"date":1607788800000,"examCount":1000},{"date":1607875200000,"examCount":1000},{"date":1607961600000,"examCount":1000},{"date":1608048000000,"examCount":1000},{"date":1608134400000,"examCount":1000},{"date":1608220800000,"examCount":1000},{"date":1608307200000,"examCount":1000},{"date":1608393600000,"examCount":1000},{"date":1608480000000,"examCount":1000},{"date":1608566400000,"examCount":1000},{"date":1608652800000,"examCount":1000},{"date":1608739200000,"examCount":1000},{"date":1608825600000,"examCount":1000},{"date":1608912000000,"examCount":1000},{"date":1608998400000,"examCount":1000},{"date":1609084800000,"examCount":1000},{"date":1609171200000,"examCount":1000},{"date":1609257600000,"examCount":1000},{"date":1609344000000,"examCount":1000},{"date":1609430400000,"examCount":1000},{"date":1609516800000,"examCount":1000},{"date":1609603200000,"examCount":1000},{"date":1609689600000,"examCount":1000},{"date":1609776000000,"examCount":1000},{"date":1609862400000,"examCount":1000},{"date":1609948800000,"examCount":1000},{"date":1610035200000,"examCount":1000},{"date":1610121600000,"examCount":1000},{"date":1610208000000,"examCount":1000},{"date":1610294400000,"examCount":1000},{"date":1610380800000,"examCount":1000},{"date":1610467200000,"examCount":1000},{"date":1610553600000,"examCount":1000},{"date":1610640000000,"examCount":1000},{"date":1610726400000,"examCount":1000},{"date":1610812800000,"examCount":1000},{"date":1610899200000,"examCount":1000},{"date":1610985600000,"examCount":1000},{"date":1611072000000,"examCount":1000},{"date":1611158400000,"examCount":1000},{"date":1611244800000,"examCount":1000},{"date":1611331200000,"examCount":1000},{"date":1611417600000,"examCount":1000},{"date":1611504000000,"examCount":1000},{"date":1611590400000,"examCount":1000},{"date":1611676800000,"examCount":1000},{"date":1611763200000,"examCount":1000},{"date":1611849600000,"examCount":1000},{"date":1611936000000,"examCount":1000},{"date":1612022400000,"examCount":1000},{"date":1612108800000,"examCount":1000},{"date":1612195200000,"examCount":1000},{"date":1612281600000,"examCount":1000},{"date":1612368000000,"examCount":1000},{"date":1612454400000,"examCount":1000},{"date":1612540800000,"examCount":1000},{"date":1612627200000,"examCount":1000},{"date":1612713600000,"examCount":1000},{"date":1612800000000,"examCount":1000},{"date":1612886400000,"examCount":1000},{"date":1612972800000,"examCount":1000},{"date":1613059200000,"examCount":1000},{"date":1613145600000,"examCount":1000},{"date":1613232000000,"examCount":1000},{"date":1613318400000,"examCount":1000},{"date":1613404800000,"examCount":1000},{"date":1613491200000,"examCount":1000},{"date":1613577600000,"examCount":1000},{"date":1613664000000,"examCount":1000},{"date":1613750400000,"examCount":1000},{"date":1613836800000,"examCount":1000},{"date":1613923200000,"examCount":1000},{"date":1614009600000,"examCount":1000},{"date":1614096000000,"examCount":1000},{"date":1614182400000,"examCount":1000},{"date":1614268800000,"examCount":1000},{"date":1614355200000,"examCount":1000},{"date":1614441600000,"examCount":1000},{"date":1614528000000,"examCount":1000},{"date":1614614400000,"examCount":1000},{"date":1614700800000,"examCount":1000},{"date":1614787200000,"examCount":1000},{"date":1614873600000,"examCount":1000},{"date":1614960000000,"examCount":1000},{"date":1615046400000,"examCount":1000},{"date":1615132800000,"examCount":1000},{"date":1615219200000,"examCount":1000},{"date":1615305600000,"examCount":1000},{"date":1615392000000,"examCount":1000},{"date":1615478400000,"examCount":1000},{"date":1615564800000,"examCount":1000},{"date":1615651200000,"examCount":1000},{"date":1615737600000,"examCount":1000},{"date":1615824000000,"examCount":1000},{"date":1615910400000,"examCount":1000},{"date":1615996800000,"examCount":1000},{"date":1616083200000,"examCount":1000},{"date":1616169600000,"examCount":1000},{"date":1616256000000,"examCount":1000},{"date":1616342400000,"examCount":1000},{"date":1616428800000,"examCount":1000},{"date":1616515200000,"examCount":1000},{"date":1616601600000,"examCount":1000},{"date":1616688000000,"examCount":1000},{"date":1616774400000,"examCount":1000},{"date":1616860800000,"examCount":1000},{"date":1616947200000,"examCount":1000},{"date":1617033600000,"examCount":1000},{"date":1617120000000,"examCount":1000},{"date":1617206400000,"examCount":1000},{"date":1617292800000,"examCount":1000},{"date":1617379200000,"examCount":1000},{"date":1617465600000,"examCount":1000},{"date":1617552000000,"examCount":1000},{"date":1617638400000,"examCount":1000},{"date":1617724800000,"examCount":1000},{"date":1617811200000,"examCount":1000},{"date":1617897600000,"examCount":1000},{"date":1617984000000,"examCount":1000},{"date":1618070400000,"examCount":1000},{"date":1618156800000,"examCount":1000},{"date":1618243200000,"examCount":1000},{"date":1618329600000,"examCount":1000},{"date":1618416000000,"examCount":1000},{"date":1618502400000,"examCount":1000},{"date":1618588800000,"examCount":1000},{"date":1618675200000,"examCount":1000},{"date":1618761600000,"examCount":1000},{"date":1618848000000,"examCount":1000},{"date":1618934400000,"examCount":1000},{"date":1619020800000,"examCount":1000},{"date":1619107200000,"examCount":1000},{"date":1619193600000,"examCount":1000},{"date":1619280000000,"examCount":1000},{"date":1619366400000,"examCount":1000},{"date":1619452800000,"examCount":1000},{"date":1619539200000,"examCount":1000},{"date":1619625600000,"examCount":1000},{"date":1619712000000,"examCount":1000},{"date":1619798400000,"examCount":1000},{"date":1619884800000,"examCount":1000},{"date":1619971200000,"examCount":1000},{"date":1620057600000,"examCount":1000},{"date":1620144000000,"examCount":1000},{"date":1620230400000,"examCount":1000},{"date":1620316800000,"examCount":1000},{"date":1620403200000,"examCount":1000},{"date":1620489600000,"examCount":1000},{"date":1620576000000,"examCount":1000},{"date":1620662400000,"examCount":1000},{"date":1620748800000,"examCount":1000},{"date":1620835200000,"examCount":1000},{"date":1620921600000,"examCount":1000},{"date":1621008000000,"examCount":1000},{"date":1621094400000,"examCount":1000},{"date":1621180800000,"examCount":1000},{"date":1621267200000,"examCount":1000},{"date":1621353600000,"examCount":1000},{"date":1621440000000,"examCount":1000},{"date":1621526400000,"examCount":1000},{"date":1621612800000,"examCount":1000},{"date":1621699200000,"examCount":1000},{"date":1621785600000,"examCount":1000},{"date":1621872000000,"examCount":1000},{"date":1621958400000,"examCount":1000},{"date":1622044800000,"examCount":1000},{"date":1622131200000,"examCount":1000},{"date":1622217600000,"examCount":1000},{"date":1622304000000,"examCount":1000},{"date":1622390400000,"examCount":1000},{"date":1622476800000,"examCount":1000},{"date":1622563200000,"examCount":1000},{"date":1622649600000,"examCount":1000},{"date":1622736000000,"examCount":1000},{"date":1622822400000,"examCount":1000},{"date":1622908800000,"examCount":1000},{"date":1622995200000,"examCount":1000},{"date":1623081600000,"examCount":1000},{"date":1623168000000,"examCount":1000},{"date":1623254400000,"examCount":1000},{"date":1623340800000,"examCount":1000},{"date":1623427200000,"examCount":1000},{"date":1623513600000,"examCount":1000},{"date":1623600000000,"examCount":1000},{"date":1623686400000,"examCount":1000},{"date":1623772800000,"examCount":1000},{"date":1623859200000,"examCount":1000},{"date":1623945600000,"examCount":1000},{"date":1624032000000,"examCount":1000},{"date":1624118400000,"examCount":1000},{"date":1624204800000,"examCount":1000},{"date":1624291200000,"examCount":1000},{"date":1624377600000,"examCount":1000},{"date":1624464000000,"examCount":1000},{"date":1624550400000,"examCount":1000},{"date":1624636800000,"examCount":1000},{"date":1624723200000,"examCount":1000},{"date":1624809600000,"examCount":1000},{"date":1624896000000,"examCount":1000},{"date":1624982400000,"examCount":1000},{"date":1625068800000,"examCount":1000},{"date":1625155200000,"examCount":1000},{"date":1625241600000,"examCount":1000},{"date":1625328000000,"examCount":1000},{"date":1625414400000,"examCount":1000},{"date":1625500800000,"examCount":1000},{"date":1625587200000,"examCount":1000},{"date":1625673600000,"examCount":1000},{"date":1625760000000,"examCount":1000},{"date":1625846400000,"examCount":1000},{"date":1625932800000,"examCount":1000},{"date":1626019200000,"examCount":1000},{"date":1626105600000,"examCount":1000},{"date":1626192000000,"examCount":1000},{"date":1626278400000,"examCount":1000},{"date":1626364800000,"examCount":1000},{"date":1626451200000,"examCount":1000},{"date":1626537600000,"examCount":1000},{"date":1626624000000,"examCount":1000},{"date":1626710400000,"examCount":1000},{"date":1626796800000,"examCount":1000},{"date":1626883200000,"examCount":1000},{"date":1626969600000,"examCount":1000},{"date":1627056000000,"examCount":1000},{"date":1627142400000,"examCount":1000},{"date":1627228800000,"examCount":1000},{"date":1627315200000,"examCount":1000},{"date":1627401600000,"examCount":1000},{"date":1627488000000,"examCount":1000},{"date":1627574400000,"examCount":1000},{"date":1627660800000,"examCount":1000},{"date":1627747200000,"examCount":1000},{"date":1627833600000,"examCount":1000},{"date":1627920000000,"examCount":1000},{"date":1628006400000,"examCount":1000},{"date":1628092800000,"examCount":1000},{"date":1628179200000,"examCount":1000},{"date":1628265600000,"examCount":1000},{"date":1628352000000,"examCount":1000},{"date":1628438400000,"examCount":1000},{"date":1628524800000,"examCount":1000},{"date":1628611200000,"examCount":1000},{"date":1628697600000,"examCount":1000},{"date":1628784000000,"examCount":1000},{"date":1628870400000,"examCount":1000},{"date":1628956800000,"examCount":1000},{"date":1629043200000,"examCount":1000},{"date":1629129600000,"examCount":1000},{"date":1629216000000,"examCount":1000},{"date":1629302400000,"examCount":1000},{"date":1629388800000,"examCount":1000},{"date":1629475200000,"examCount":1000},{"date":1629561600000,"examCount":1000},{"date":1629648000000,"examCount":1000},{"date":1629734400000,"examCount":1000},{"date":1629820800000,"examCount":1000},{"date":1629907200000,"examCount":1000},{"date":1629993600000,"examCount":1000},{"date":1630080000000,"examCount":1000},{"date":1630166400000,"examCount":1000},{"date":1630252800000,"examCount":1000},{"date":1630339200000,"examCount":1000},{"date":1630425600000,"examCount":1000},{"date":1630512000000,"examCount":1000},{"date":1630598400000,"examCount":1000},{"date":1630684800000,"examCount":1000},{"date":1630771200000,"examCount":1000},{"date":1630857600000,"examCount":1000},{"date":1630944000000,"examCount":1000},{"date":1631030400000,"examCount":1000},{"date":1631116800000,"examCount":1000},{"date":1631203200000,"examCount":1000},{"date":1631289600000,"examCount":1000},{"date":1631376000000,"examCount":1000},{"date":1631462400000,"examCount":1000},{"date":1631548800000,"examCount":1000},{"date":1631635200000,"examCount":1000},{"date":1631721600000,"examCount":1000},{"date":1631808000000,"examCount":1000},{"date":1631894400000,"examCount":1000},{"date":1631980800000,"examCount":1000},{"date":1632067200000,"examCount":1000},{"date":1632153600000,"examCount":1000},{"date":1632240000000,"examCount":1000},{"date":1632326400000,"examCount":1000},{"date":1632412800000,"examCount":1000},{"date":1632499200000,"examCount":1000},{"date":1632585600000,"examCount":1000},{"date":1632672000000,"examCount":1000},{"date":1632758400000,"examCount":1000},{"date":1632844800000,"examCount":1000},{"date":1632931200000,"examCount":1000},{"date":1633017600000,"examCount":1000},{"date":1633104000000,"examCount":1000},{"date":1633190400000,"examCount":1000},{"date":1633276800000,"examCount":1000},{"date":1633363200000,"examCount":1000},{"date":1633449600000,"examCount":1000},{"date":1633536000000,"examCount":1000},{"date":1633622400000,"examCount":1000},{"date":1633708800000,"examCount":1000},{"date":1633795200000,"examCount":1000},{"date":1633881600000,"examCount":1000},{"date":1633968000000,"examCount":1000},{"date":1634054400000,"examCount":1000},{"date":1634140800000,"examCount":1000},{"date":1634227200000,"examCount":1000},{"date":1634313600000,"examCount":1000},{"date":1634400000000,"examCount":1000},{"date":1634486400000,"examCount":1000},{"date":1634572800000,"examCount":1000},{"date":1634659200000,"examCount":1000},{"date":1634745600000,"examCount":1000},{"date":1634832000000,"examCount":1000},{"date":1634918400000,"examCount":1000},{"date":1635004800000,"examCount":1000},{"date":1635091200000,"examCount":1000},{"date":1635177600000,"examCount":1000},{"date":1635264000000,"examCount":1000},{"date":1635350400000,"examCount":1000},{"date":1635436800000,"examCount":1000},{"date":1635523200000,"examCount":1000},{"date":1635609600000,"examCount":1000},{"date":1635696000000,"examCount":1000},{"date":1635782400000,"examCount":1000},{"date":1635868800000,"examCount":1000},{"date":1635955200000,"examCount":1000},{"date":1636041600000,"examCount":1000},{"date":1636128000000,"examCount":1000},{"date":1636214400000,"examCount":1000},{"date":1636300800000,"examCount":1000},{"date":1636387200000,"examCount":1000},{"date":1636473600000,"examCount":1000}]', 'deadlineTimeStamp': None, 'deadlineTimeStr': None, 'employeesProvided': 1, 'enableSyncHos': 1, 'examEndTimeStamp': 1636473600000, 'examEndTimeStr': '2021-11-10', 'examStartTimeStamp': 1605024000000, 'examStartTimeStr': '2020-11-11', 'isExpired': 0, 'issuedCount': 1, 'notIssuedCount': 0, 'optimisticLockId': '2695', 'optimisticLockVersion': 1609117869000, 'showEnableSyncHos': 1, 'unGroupedCount': 0}, 'success': True}
2020-12-28 09:47:07,325-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.174899s
2020-12-28 09:47:07,326-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:47:07,327-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.174899, 'data': {'auditOpenSync': 1, 'batchId': 2695, 'batchName': '基础体检女', 'batchProcess': 4, 'batchTimeAppointStatus': 0, 'bindTypes': '1', 'createTimeStamp': 1605098979000, 'dateJson': '[{"date":1605024000000,"examCount":1000},{"date":1605110400000,"examCount":1000},{"date":1605196800000,"examCount":1000},{"date":1605283200000,"examCount":1000},{"date":1605369600000,"examCount":1000},{"date":1605456000000,"examCount":1000},{"date":1605542400000,"examCount":1000},{"date":1605628800000,"examCount":1000},{"date":1605715200000,"examCount":1000},{"date":1605801600000,"examCount":1000},{"date":1605888000000,"examCount":1000},{"date":1605974400000,"examCount":1000},{"date":1606060800000,"examCount":1000},{"date":1606147200000,"examCount":1000},{"date":1606233600000,"examCount":1000},{"date":1606320000000,"examCount":1000},{"date":1606406400000,"examCount":1000},{"date":1606492800000,"examCount":1000},{"date":1606579200000,"examCount":1000},{"date":1606665600000,"examCount":1000},{"date":1606752000000,"examCount":1000},{"date":1606838400000,"examCount":1000},{"date":1606924800000,"examCount":1000},{"date":1607011200000,"examCount":1000},{"date":1607097600000,"examCount":1000},{"date":1607184000000,"examCount":1000},{"date":1607270400000,"examCount":1000},{"date":1607356800000,"examCount":1000},{"date":1607443200000,"examCount":1000},{"date":1607529600000,"examCount":1000},{"date":1607616000000,"examCount":1000},{"date":1607702400000,"examCount":1000},{"date":1607788800000,"examCount":1000},{"date":1607875200000,"examCount":1000},{"date":1607961600000,"examCount":1000},{"date":1608048000000,"examCount":1000},{"date":1608134400000,"examCount":1000},{"date":1608220800000,"examCount":1000},{"date":1608307200000,"examCount":1000},{"date":1608393600000,"examCount":1000},{"date":1608480000000,"examCount":1000},{"date":1608566400000,"examCount":1000},{"date":1608652800000,"examCount":1000},{"date":1608739200000,"examCount":1000},{"date":1608825600000,"examCount":1000},{"date":1608912000000,"examCount":1000},{"date":1608998400000,"examCount":1000},{"date":1609084800000,"examCount":1000},{"date":1609171200000,"examCount":1000},{"date":1609257600000,"examCount":1000},{"date":1609344000000,"examCount":1000},{"date":1609430400000,"examCount":1000},{"date":1609516800000,"examCount":1000},{"date":1609603200000,"examCount":1000},{"date":1609689600000,"examCount":1000},{"date":1609776000000,"examCount":1000},{"date":1609862400000,"examCount":1000},{"date":1609948800000,"examCount":1000},{"date":1610035200000,"examCount":1000},{"date":1610121600000,"examCount":1000},{"date":1610208000000,"examCount":1000},{"date":1610294400000,"examCount":1000},{"date":1610380800000,"examCount":1000},{"date":1610467200000,"examCount":1000},{"date":1610553600000,"examCount":1000},{"date":1610640000000,"examCount":1000},{"date":1610726400000,"examCount":1000},{"date":1610812800000,"examCount":1000},{"date":1610899200000,"examCount":1000},{"date":1610985600000,"examCount":1000},{"date":1611072000000,"examCount":1000},{"date":1611158400000,"examCount":1000},{"date":1611244800000,"examCount":1000},{"date":1611331200000,"examCount":1000},{"date":1611417600000,"examCount":1000},{"date":1611504000000,"examCount":1000},{"date":1611590400000,"examCount":1000},{"date":1611676800000,"examCount":1000},{"date":1611763200000,"examCount":1000},{"date":1611849600000,"examCount":1000},{"date":1611936000000,"examCount":1000},{"date":1612022400000,"examCount":1000},{"date":1612108800000,"examCount":1000},{"date":1612195200000,"examCount":1000},{"date":1612281600000,"examCount":1000},{"date":1612368000000,"examCount":1000},{"date":1612454400000,"examCount":1000},{"date":1612540800000,"examCount":1000},{"date":1612627200000,"examCount":1000},{"date":1612713600000,"examCount":1000},{"date":1612800000000,"examCount":1000},{"date":1612886400000,"examCount":1000},{"date":1612972800000,"examCount":1000},{"date":1613059200000,"examCount":1000},{"date":1613145600000,"examCount":1000},{"date":1613232000000,"examCount":1000},{"date":1613318400000,"examCount":1000},{"date":1613404800000,"examCount":1000},{"date":1613491200000,"examCount":1000},{"date":1613577600000,"examCount":1000},{"date":1613664000000,"examCount":1000},{"date":1613750400000,"examCount":1000},{"date":1613836800000,"examCount":1000},{"date":1613923200000,"examCount":1000},{"date":1614009600000,"examCount":1000},{"date":1614096000000,"examCount":1000},{"date":1614182400000,"examCount":1000},{"date":1614268800000,"examCount":1000},{"date":1614355200000,"examCount":1000},{"date":1614441600000,"examCount":1000},{"date":1614528000000,"examCount":1000},{"date":1614614400000,"examCount":1000},{"date":1614700800000,"examCount":1000},{"date":1614787200000,"examCount":1000},{"date":1614873600000,"examCount":1000},{"date":1614960000000,"examCount":1000},{"date":1615046400000,"examCount":1000},{"date":1615132800000,"examCount":1000},{"date":1615219200000,"examCount":1000},{"date":1615305600000,"examCount":1000},{"date":1615392000000,"examCount":1000},{"date":1615478400000,"examCount":1000},{"date":1615564800000,"examCount":1000},{"date":1615651200000,"examCount":1000},{"date":1615737600000,"examCount":1000},{"date":1615824000000,"examCount":1000},{"date":1615910400000,"examCount":1000},{"date":1615996800000,"examCount":1000},{"date":1616083200000,"examCount":1000},{"date":1616169600000,"examCount":1000},{"date":1616256000000,"examCount":1000},{"date":1616342400000,"examCount":1000},{"date":1616428800000,"examCount":1000},{"date":1616515200000,"examCount":1000},{"date":1616601600000,"examCount":1000},{"date":1616688000000,"examCount":1000},{"date":1616774400000,"examCount":1000},{"date":1616860800000,"examCount":1000},{"date":1616947200000,"examCount":1000},{"date":1617033600000,"examCount":1000},{"date":1617120000000,"examCount":1000},{"date":1617206400000,"examCount":1000},{"date":1617292800000,"examCount":1000},{"date":1617379200000,"examCount":1000},{"date":1617465600000,"examCount":1000},{"date":1617552000000,"examCount":1000},{"date":1617638400000,"examCount":1000},{"date":1617724800000,"examCount":1000},{"date":1617811200000,"examCount":1000},{"date":1617897600000,"examCount":1000},{"date":1617984000000,"examCount":1000},{"date":1618070400000,"examCount":1000},{"date":1618156800000,"examCount":1000},{"date":1618243200000,"examCount":1000},{"date":1618329600000,"examCount":1000},{"date":1618416000000,"examCount":1000},{"date":1618502400000,"examCount":1000},{"date":1618588800000,"examCount":1000},{"date":1618675200000,"examCount":1000},{"date":1618761600000,"examCount":1000},{"date":1618848000000,"examCount":1000},{"date":1618934400000,"examCount":1000},{"date":1619020800000,"examCount":1000},{"date":1619107200000,"examCount":1000},{"date":1619193600000,"examCount":1000},{"date":1619280000000,"examCount":1000},{"date":1619366400000,"examCount":1000},{"date":1619452800000,"examCount":1000},{"date":1619539200000,"examCount":1000},{"date":1619625600000,"examCount":1000},{"date":1619712000000,"examCount":1000},{"date":1619798400000,"examCount":1000},{"date":1619884800000,"examCount":1000},{"date":1619971200000,"examCount":1000},{"date":1620057600000,"examCount":1000},{"date":1620144000000,"examCount":1000},{"date":1620230400000,"examCount":1000},{"date":1620316800000,"examCount":1000},{"date":1620403200000,"examCount":1000},{"date":1620489600000,"examCount":1000},{"date":1620576000000,"examCount":1000},{"date":1620662400000,"examCount":1000},{"date":1620748800000,"examCount":1000},{"date":1620835200000,"examCount":1000},{"date":1620921600000,"examCount":1000},{"date":1621008000000,"examCount":1000},{"date":1621094400000,"examCount":1000},{"date":1621180800000,"examCount":1000},{"date":1621267200000,"examCount":1000},{"date":1621353600000,"examCount":1000},{"date":1621440000000,"examCount":1000},{"date":1621526400000,"examCount":1000},{"date":1621612800000,"examCount":1000},{"date":1621699200000,"examCount":1000},{"date":1621785600000,"examCount":1000},{"date":1621872000000,"examCount":1000},{"date":1621958400000,"examCount":1000},{"date":1622044800000,"examCount":1000},{"date":1622131200000,"examCount":1000},{"date":1622217600000,"examCount":1000},{"date":1622304000000,"examCount":1000},{"date":1622390400000,"examCount":1000},{"date":1622476800000,"examCount":1000},{"date":1622563200000,"examCount":1000},{"date":1622649600000,"examCount":1000},{"date":1622736000000,"examCount":1000},{"date":1622822400000,"examCount":1000},{"date":1622908800000,"examCount":1000},{"date":1622995200000,"examCount":1000},{"date":1623081600000,"examCount":1000},{"date":1623168000000,"examCount":1000},{"date":1623254400000,"examCount":1000},{"date":1623340800000,"examCount":1000},{"date":1623427200000,"examCount":1000},{"date":1623513600000,"examCount":1000},{"date":1623600000000,"examCount":1000},{"date":1623686400000,"examCount":1000},{"date":1623772800000,"examCount":1000},{"date":1623859200000,"examCount":1000},{"date":1623945600000,"examCount":1000},{"date":1624032000000,"examCount":1000},{"date":1624118400000,"examCount":1000},{"date":1624204800000,"examCount":1000},{"date":1624291200000,"examCount":1000},{"date":1624377600000,"examCount":1000},{"date":1624464000000,"examCount":1000},{"date":1624550400000,"examCount":1000},{"date":1624636800000,"examCount":1000},{"date":1624723200000,"examCount":1000},{"date":1624809600000,"examCount":1000},{"date":1624896000000,"examCount":1000},{"date":1624982400000,"examCount":1000},{"date":1625068800000,"examCount":1000},{"date":1625155200000,"examCount":1000},{"date":1625241600000,"examCount":1000},{"date":1625328000000,"examCount":1000},{"date":1625414400000,"examCount":1000},{"date":1625500800000,"examCount":1000},{"date":1625587200000,"examCount":1000},{"date":1625673600000,"examCount":1000},{"date":1625760000000,"examCount":1000},{"date":1625846400000,"examCount":1000},{"date":1625932800000,"examCount":1000},{"date":1626019200000,"examCount":1000},{"date":1626105600000,"examCount":1000},{"date":1626192000000,"examCount":1000},{"date":1626278400000,"examCount":1000},{"date":1626364800000,"examCount":1000},{"date":1626451200000,"examCount":1000},{"date":1626537600000,"examCount":1000},{"date":1626624000000,"examCount":1000},{"date":1626710400000,"examCount":1000},{"date":1626796800000,"examCount":1000},{"date":1626883200000,"examCount":1000},{"date":1626969600000,"examCount":1000},{"date":1627056000000,"examCount":1000},{"date":1627142400000,"examCount":1000},{"date":1627228800000,"examCount":1000},{"date":1627315200000,"examCount":1000},{"date":1627401600000,"examCount":1000},{"date":1627488000000,"examCount":1000},{"date":1627574400000,"examCount":1000},{"date":1627660800000,"examCount":1000},{"date":1627747200000,"examCount":1000},{"date":1627833600000,"examCount":1000},{"date":1627920000000,"examCount":1000},{"date":1628006400000,"examCount":1000},{"date":1628092800000,"examCount":1000},{"date":1628179200000,"examCount":1000},{"date":1628265600000,"examCount":1000},{"date":1628352000000,"examCount":1000},{"date":1628438400000,"examCount":1000},{"date":1628524800000,"examCount":1000},{"date":1628611200000,"examCount":1000},{"date":1628697600000,"examCount":1000},{"date":1628784000000,"examCount":1000},{"date":1628870400000,"examCount":1000},{"date":1628956800000,"examCount":1000},{"date":1629043200000,"examCount":1000},{"date":1629129600000,"examCount":1000},{"date":1629216000000,"examCount":1000},{"date":1629302400000,"examCount":1000},{"date":1629388800000,"examCount":1000},{"date":1629475200000,"examCount":1000},{"date":1629561600000,"examCount":1000},{"date":1629648000000,"examCount":1000},{"date":1629734400000,"examCount":1000},{"date":1629820800000,"examCount":1000},{"date":1629907200000,"examCount":1000},{"date":1629993600000,"examCount":1000},{"date":1630080000000,"examCount":1000},{"date":1630166400000,"examCount":1000},{"date":1630252800000,"examCount":1000},{"date":1630339200000,"examCount":1000},{"date":1630425600000,"examCount":1000},{"date":1630512000000,"examCount":1000},{"date":1630598400000,"examCount":1000},{"date":1630684800000,"examCount":1000},{"date":1630771200000,"examCount":1000},{"date":1630857600000,"examCount":1000},{"date":1630944000000,"examCount":1000},{"date":1631030400000,"examCount":1000},{"date":1631116800000,"examCount":1000},{"date":1631203200000,"examCount":1000},{"date":1631289600000,"examCount":1000},{"date":1631376000000,"examCount":1000},{"date":1631462400000,"examCount":1000},{"date":1631548800000,"examCount":1000},{"date":1631635200000,"examCount":1000},{"date":1631721600000,"examCount":1000},{"date":1631808000000,"examCount":1000},{"date":1631894400000,"examCount":1000},{"date":1631980800000,"examCount":1000},{"date":1632067200000,"examCount":1000},{"date":1632153600000,"examCount":1000},{"date":1632240000000,"examCount":1000},{"date":1632326400000,"examCount":1000},{"date":1632412800000,"examCount":1000},{"date":1632499200000,"examCount":1000},{"date":1632585600000,"examCount":1000},{"date":1632672000000,"examCount":1000},{"date":1632758400000,"examCount":1000},{"date":1632844800000,"examCount":1000},{"date":1632931200000,"examCount":1000},{"date":1633017600000,"examCount":1000},{"date":1633104000000,"examCount":1000},{"date":1633190400000,"examCount":1000},{"date":1633276800000,"examCount":1000},{"date":1633363200000,"examCount":1000},{"date":1633449600000,"examCount":1000},{"date":1633536000000,"examCount":1000},{"date":1633622400000,"examCount":1000},{"date":1633708800000,"examCount":1000},{"date":1633795200000,"examCount":1000},{"date":1633881600000,"examCount":1000},{"date":1633968000000,"examCount":1000},{"date":1634054400000,"examCount":1000},{"date":1634140800000,"examCount":1000},{"date":1634227200000,"examCount":1000},{"date":1634313600000,"examCount":1000},{"date":1634400000000,"examCount":1000},{"date":1634486400000,"examCount":1000},{"date":1634572800000,"examCount":1000},{"date":1634659200000,"examCount":1000},{"date":1634745600000,"examCount":1000},{"date":1634832000000,"examCount":1000},{"date":1634918400000,"examCount":1000},{"date":1635004800000,"examCount":1000},{"date":1635091200000,"examCount":1000},{"date":1635177600000,"examCount":1000},{"date":1635264000000,"examCount":1000},{"date":1635350400000,"examCount":1000},{"date":1635436800000,"examCount":1000},{"date":1635523200000,"examCount":1000},{"date":1635609600000,"examCount":1000},{"date":1635696000000,"examCount":1000},{"date":1635782400000,"examCount":1000},{"date":1635868800000,"examCount":1000},{"date":1635955200000,"examCount":1000},{"date":1636041600000,"examCount":1000},{"date":1636128000000,"examCount":1000},{"date":1636214400000,"examCount":1000},{"date":1636300800000,"examCount":1000},{"date":1636387200000,"examCount":1000},{"date":1636473600000,"examCount":1000}]', 'deadlineTimeStamp': None, 'deadlineTimeStr': None, 'employeesProvided': 1, 'enableSyncHos': 1, 'examEndTimeStamp': 1636473600000, 'examEndTimeStr': '2021-11-10', 'examStartTimeStamp': 1605024000000, 'examStartTimeStr': '2020-11-11', 'isExpired': 0, 'issuedCount': 1, 'notIssuedCount': 0, 'optimisticLockId': '2695', 'optimisticLockVersion': 1609117869000, 'showEnableSyncHos': 1, 'unGroupedCount': 0}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:47:08,303-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:08,305-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:08,306-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:08,307-[INFO]-logger.py-Unit_test-日志信息:正在执行第24条用例:【单位体检】2-时间戳一致-单位批次-批次新增或者更新-用户a页面1保存-成功
2020-12-28 09:47:08,308-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/card/v3/batch/save；method：POST；data：{"batchId":"2695","batchName":"基础体检女","employeesProvided":"1","bindTypes":"1","dateJson":[{"date":1605024000000,"examCount":1000},{"date":1605110400000,"examCount":1000},{"date":1605196800000,"examCount":1000},{"date":1605283200000,"examCount":1000},{"date":1605369600000,"examCount":1000},{"date":1605456000000,"examCount":1000},{"date":1605542400000,"examCount":1000},{"date":1605628800000,"examCount":1000},{"date":1605715200000,"examCount":1000},{"date":1605801600000,"examCount":1000},{"date":1605888000000,"examCount":1000},{"date":1605974400000,"examCount":1000},{"date":1606060800000,"examCount":1000},{"date":1606147200000,"examCount":1000},{"date":1606233600000,"examCount":1000},{"date":1606320000000,"examCount":1000},{"date":1606406400000,"examCount":1000},{"date":1606492800000,"examCount":1000},{"date":1606579200000,"examCount":1000},{"date":1606665600000,"examCount":1000},{"date":1606752000000,"examCount":1000},{"date":1606838400000,"examCount":1000},{"date":1606924800000,"examCount":1000},{"date":1607011200000,"examCount":1000},{"date":1607097600000,"examCount":1000},{"date":1607184000000,"examCount":1000},{"date":1607270400000,"examCount":1000},{"date":1607356800000,"examCount":1000},{"date":1607443200000,"examCount":1000},{"date":1607529600000,"examCount":1000},{"date":1607616000000,"examCount":1000},{"date":1607702400000,"examCount":1000},{"date":1607788800000,"examCount":1000},{"date":1607875200000,"examCount":1000},{"date":1607961600000,"examCount":1000},{"date":1608048000000,"examCount":1000},{"date":1608134400000,"examCount":1000},{"date":1608220800000,"examCount":1000},{"date":1608307200000,"examCount":1000},{"date":1608393600000,"examCount":1000},{"date":1608480000000,"examCount":1000},{"date":1608566400000,"examCount":1000},{"date":1608652800000,"examCount":1000},{"date":1608739200000,"examCount":1000},{"date":1608825600000,"examCount":1000},{"date":1608912000000,"examCount":1000},{"date":1608998400000,"examCount":1000},{"date":1609084800000,"examCount":1000},{"date":1609171200000,"examCount":1000},{"date":1609257600000,"examCount":1000},{"date":1609344000000,"examCount":1000},{"date":1609430400000,"examCount":1000},{"date":1609516800000,"examCount":1000},{"date":1609603200000,"examCount":1000},{"date":1609689600000,"examCount":1000},{"date":1609776000000,"examCount":1000},{"date":1609862400000,"examCount":1000},{"date":1609948800000,"examCount":1000},{"date":1610035200000,"examCount":1000},{"date":1610121600000,"examCount":1000},{"date":1610208000000,"examCount":1000},{"date":1610294400000,"examCount":1000},{"date":1610380800000,"examCount":1000},{"date":1610467200000,"examCount":1000},{"date":1610553600000,"examCount":1000},{"date":1610640000000,"examCount":1000},{"date":1610726400000,"examCount":1000},{"date":1610812800000,"examCount":1000},{"date":1610899200000,"examCount":1000},{"date":1610985600000,"examCount":1000},{"date":1611072000000,"examCount":1000},{"date":1611158400000,"examCount":1000},{"date":1611244800000,"examCount":1000},{"date":1611331200000,"examCount":1000},{"date":1611417600000,"examCount":1000},{"date":1611504000000,"examCount":1000},{"date":1611590400000,"examCount":1000},{"date":1611676800000,"examCount":1000},{"date":1611763200000,"examCount":1000},{"date":1611849600000,"examCount":1000},{"date":1611936000000,"examCount":1000},{"date":1612022400000,"examCount":1000},{"date":1612108800000,"examCount":1000},{"date":1612195200000,"examCount":1000},{"date":1612281600000,"examCount":1000},{"date":1612368000000,"examCount":1000},{"date":1612454400000,"examCount":1000},{"date":1612540800000,"examCount":1000},{"date":1612627200000,"examCount":1000},{"date":1612713600000,"examCount":1000},{"date":1612800000000,"examCount":1000},{"date":1612886400000,"examCount":1000},{"date":1612972800000,"examCount":1000},{"date":1613059200000,"examCount":1000},{"date":1613145600000,"examCount":1000},{"date":1613232000000,"examCount":1000},{"date":1613318400000,"examCount":1000},{"date":1613404800000,"examCount":1000},{"date":1613491200000,"examCount":1000},{"date":1613577600000,"examCount":1000},{"date":1613664000000,"examCount":1000},{"date":1613750400000,"examCount":1000},{"date":1613836800000,"examCount":1000},{"date":1613923200000,"examCount":1000},{"date":1614009600000,"examCount":1000},{"date":1614096000000,"examCount":1000},{"date":1614182400000,"examCount":1000},{"date":1614268800000,"examCount":1000},{"date":1614355200000,"examCount":1000},{"date":1614441600000,"examCount":1000},{"date":1614528000000,"examCount":1000},{"date":1614614400000,"examCount":1000},{"date":1614700800000,"examCount":1000},{"date":1614787200000,"examCount":1000},{"date":1614873600000,"examCount":1000},{"date":1614960000000,"examCount":1000},{"date":1615046400000,"examCount":1000},{"date":1615132800000,"examCount":1000},{"date":1615219200000,"examCount":1000},{"date":1615305600000,"examCount":1000},{"date":1615392000000,"examCount":1000},{"date":1615478400000,"examCount":1000},{"date":1615564800000,"examCount":1000},{"date":1615651200000,"examCount":1000},{"date":1615737600000,"examCount":1000},{"date":1615824000000,"examCount":1000},{"date":1615910400000,"examCount":1000},{"date":1615996800000,"examCount":1000},{"date":1616083200000,"examCount":1000},{"date":1616169600000,"examCount":1000},{"date":1616256000000,"examCount":1000},{"date":1616342400000,"examCount":1000},{"date":1616428800000,"examCount":1000},{"date":1616515200000,"examCount":1000},{"date":1616601600000,"examCount":1000},{"date":1616688000000,"examCount":1000},{"date":1616774400000,"examCount":1000},{"date":1616860800000,"examCount":1000},{"date":1616947200000,"examCount":1000},{"date":1617033600000,"examCount":1000},{"date":1617120000000,"examCount":1000},{"date":1617206400000,"examCount":1000},{"date":1617292800000,"examCount":1000},{"date":1617379200000,"examCount":1000},{"date":1617465600000,"examCount":1000},{"date":1617552000000,"examCount":1000},{"date":1617638400000,"examCount":1000},{"date":1617724800000,"examCount":1000},{"date":1617811200000,"examCount":1000},{"date":1617897600000,"examCount":1000},{"date":1617984000000,"examCount":1000},{"date":1618070400000,"examCount":1000},{"date":1618156800000,"examCount":1000},{"date":1618243200000,"examCount":1000},{"date":1618329600000,"examCount":1000},{"date":1618416000000,"examCount":1000},{"date":1618502400000,"examCount":1000},{"date":1618588800000,"examCount":1000},{"date":1618675200000,"examCount":1000},{"date":1618761600000,"examCount":1000},{"date":1618848000000,"examCount":1000},{"date":1618934400000,"examCount":1000},{"date":1619020800000,"examCount":1000},{"date":1619107200000,"examCount":1000},{"date":1619193600000,"examCount":1000},{"date":1619280000000,"examCount":1000},{"date":1619366400000,"examCount":1000},{"date":1619452800000,"examCount":1000},{"date":1619539200000,"examCount":1000},{"date":1619625600000,"examCount":1000},{"date":1619712000000,"examCount":1000},{"date":1619798400000,"examCount":1000},{"date":1619884800000,"examCount":1000},{"date":1619971200000,"examCount":1000},{"date":1620057600000,"examCount":1000},{"date":1620144000000,"examCount":1000},{"date":1620230400000,"examCount":1000},{"date":1620316800000,"examCount":1000},{"date":1620403200000,"examCount":1000},{"date":1620489600000,"examCount":1000},{"date":1620576000000,"examCount":1000},{"date":1620662400000,"examCount":1000},{"date":1620748800000,"examCount":1000},{"date":1620835200000,"examCount":1000},{"date":1620921600000,"examCount":1000},{"date":1621008000000,"examCount":1000},{"date":1621094400000,"examCount":1000},{"date":1621180800000,"examCount":1000},{"date":1621267200000,"examCount":1000},{"date":1621353600000,"examCount":1000},{"date":1621440000000,"examCount":1000},{"date":1621526400000,"examCount":1000},{"date":1621612800000,"examCount":1000},{"date":1621699200000,"examCount":1000},{"date":1621785600000,"examCount":1000},{"date":1621872000000,"examCount":1000},{"date":1621958400000,"examCount":1000},{"date":1622044800000,"examCount":1000},{"date":1622131200000,"examCount":1000},{"date":1622217600000,"examCount":1000},{"date":1622304000000,"examCount":1000},{"date":1622390400000,"examCount":1000},{"date":1622476800000,"examCount":1000},{"date":1622563200000,"examCount":1000},{"date":1622649600000,"examCount":1000},{"date":1622736000000,"examCount":1000},{"date":1622822400000,"examCount":1000},{"date":1622908800000,"examCount":1000},{"date":1622995200000,"examCount":1000},{"date":1623081600000,"examCount":1000},{"date":1623168000000,"examCount":1000},{"date":1623254400000,"examCount":1000},{"date":1623340800000,"examCount":1000},{"date":1623427200000,"examCount":1000},{"date":1623513600000,"examCount":1000},{"date":1623600000000,"examCount":1000},{"date":1623686400000,"examCount":1000},{"date":1623772800000,"examCount":1000},{"date":1623859200000,"examCount":1000},{"date":1623945600000,"examCount":1000},{"date":1624032000000,"examCount":1000},{"date":1624118400000,"examCount":1000},{"date":1624204800000,"examCount":1000},{"date":1624291200000,"examCount":1000},{"date":1624377600000,"examCount":1000},{"date":1624464000000,"examCount":1000},{"date":1624550400000,"examCount":1000},{"date":1624636800000,"examCount":1000},{"date":1624723200000,"examCount":1000},{"date":1624809600000,"examCount":1000},{"date":1624896000000,"examCount":1000},{"date":1624982400000,"examCount":1000},{"date":1625068800000,"examCount":1000},{"date":1625155200000,"examCount":1000},{"date":1625241600000,"examCount":1000},{"date":1625328000000,"examCount":1000},{"date":1625414400000,"examCount":1000},{"date":1625500800000,"examCount":1000},{"date":1625587200000,"examCount":1000},{"date":1625673600000,"examCount":1000},{"date":1625760000000,"examCount":1000},{"date":1625846400000,"examCount":1000},{"date":1625932800000,"examCount":1000},{"date":1626019200000,"examCount":1000},{"date":1626105600000,"examCount":1000},{"date":1626192000000,"examCount":1000},{"date":1626278400000,"examCount":1000},{"date":1626364800000,"examCount":1000},{"date":1626451200000,"examCount":1000},{"date":1626537600000,"examCount":1000},{"date":1626624000000,"examCount":1000},{"date":1626710400000,"examCount":1000},{"date":1626796800000,"examCount":1000},{"date":1626883200000,"examCount":1000},{"date":1626969600000,"examCount":1000},{"date":1627056000000,"examCount":1000},{"date":1627142400000,"examCount":1000},{"date":1627228800000,"examCount":1000},{"date":1627315200000,"examCount":1000},{"date":1627401600000,"examCount":1000},{"date":1627488000000,"examCount":1000},{"date":1627574400000,"examCount":1000},{"date":1627660800000,"examCount":1000},{"date":1627747200000,"examCount":1000},{"date":1627833600000,"examCount":1000},{"date":1627920000000,"examCount":1000},{"date":1628006400000,"examCount":1000},{"date":1628092800000,"examCount":1000},{"date":1628179200000,"examCount":1000},{"date":1628265600000,"examCount":1000},{"date":1628352000000,"examCount":1000},{"date":1628438400000,"examCount":1000},{"date":1628524800000,"examCount":1000},{"date":1628611200000,"examCount":1000},{"date":1628697600000,"examCount":1000},{"date":1628784000000,"examCount":1000},{"date":1628870400000,"examCount":1000},{"date":1628956800000,"examCount":1000},{"date":1629043200000,"examCount":1000},{"date":1629129600000,"examCount":1000},{"date":1629216000000,"examCount":1000},{"date":1629302400000,"examCount":1000},{"date":1629388800000,"examCount":1000},{"date":1629475200000,"examCount":1000},{"date":1629561600000,"examCount":1000},{"date":1629648000000,"examCount":1000},{"date":1629734400000,"examCount":1000},{"date":1629820800000,"examCount":1000},{"date":1629907200000,"examCount":1000},{"date":1629993600000,"examCount":1000},{"date":1630080000000,"examCount":1000},{"date":1630166400000,"examCount":1000},{"date":1630252800000,"examCount":1000},{"date":1630339200000,"examCount":1000},{"date":1630425600000,"examCount":1000},{"date":1630512000000,"examCount":1000},{"date":1630598400000,"examCount":1000},{"date":1630684800000,"examCount":1000},{"date":1630771200000,"examCount":1000},{"date":1630857600000,"examCount":1000},{"date":1630944000000,"examCount":1000},{"date":1631030400000,"examCount":1000},{"date":1631116800000,"examCount":1000},{"date":1631203200000,"examCount":1000},{"date":1631289600000,"examCount":1000},{"date":1631376000000,"examCount":1000},{"date":1631462400000,"examCount":1000},{"date":1631548800000,"examCount":1000},{"date":1631635200000,"examCount":1000},{"date":1631721600000,"examCount":1000},{"date":1631808000000,"examCount":1000},{"date":1631894400000,"examCount":1000},{"date":1631980800000,"examCount":1000},{"date":1632067200000,"examCount":1000},{"date":1632153600000,"examCount":1000},{"date":1632240000000,"examCount":1000},{"date":1632326400000,"examCount":1000},{"date":1632412800000,"examCount":1000},{"date":1632499200000,"examCount":1000},{"date":1632585600000,"examCount":1000},{"date":1632672000000,"examCount":1000},{"date":1632758400000,"examCount":1000},{"date":1632844800000,"examCount":1000},{"date":1632931200000,"examCount":1000},{"date":1633017600000,"examCount":1000},{"date":1633104000000,"examCount":1000},{"date":1633190400000,"examCount":1000},{"date":1633276800000,"examCount":1000},{"date":1633363200000,"examCount":1000},{"date":1633449600000,"examCount":1000},{"date":1633536000000,"examCount":1000},{"date":1633622400000,"examCount":1000},{"date":1633708800000,"examCount":1000},{"date":1633795200000,"examCount":1000},{"date":1633881600000,"examCount":1000},{"date":1633968000000,"examCount":1000},{"date":1634054400000,"examCount":1000},{"date":1634140800000,"examCount":1000},{"date":1634227200000,"examCount":1000},{"date":1634313600000,"examCount":1000},{"date":1634400000000,"examCount":1000},{"date":1634486400000,"examCount":1000},{"date":1634572800000,"examCount":1000},{"date":1634659200000,"examCount":1000},{"date":1634745600000,"examCount":1000},{"date":1634832000000,"examCount":1000},{"date":1634918400000,"examCount":1000},{"date":1635004800000,"examCount":1000},{"date":1635091200000,"examCount":1000},{"date":1635177600000,"examCount":1000},{"date":1635264000000,"examCount":1000},{"date":1635350400000,"examCount":1000},{"date":1635436800000,"examCount":1000},{"date":1635523200000,"examCount":1000},{"date":1635609600000,"examCount":1000},{"date":1635696000000,"examCount":1000},{"date":1635782400000,"examCount":1000},{"date":1635868800000,"examCount":1000},{"date":1635955200000,"examCount":1000},{"date":1636041600000,"examCount":1000},{"date":1636128000000,"examCount":1000},{"date":1636214400000,"examCount":1000},{"date":1636300800000,"examCount":1000},{"date":1636387200000,"examCount":1000},{"date":1636473600000,"examCount":1000}],"examEndTime":1636473600000,"examStartTime":1605024000000,"companyId":"2734","deadlineTime":"","batchTimeAppointStatus":0,"branchRatioList":[],"intervalList":[],"enableSyncHos":1,"stationId":"HL99998"}；sql：{}
2020-12-28 09:47:08,321-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:08,372-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:08,373-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:08,407-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:08,409-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:08,474-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:08,478-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:08,515-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:08,518-[INFO]-logger.py-all_method-日志信息:批次信息详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/card/v3/batch/2695
2020-12-28 09:47:08,613-[INFO]-logger.py-all_method-日志信息:批次信息详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'auditOpenSync': 1, 'batchId': 2695, 'batchName': '基础体检女', 'batchProcess': 4, 'batchTimeAppointStatus': 0, 'bindTypes': '1', 'createTimeStamp': 1605098979000, 'dateJson': '[{"date":1605024000000,"examCount":1000},{"date":1605110400000,"examCount":1000},{"date":1605196800000,"examCount":1000},{"date":1605283200000,"examCount":1000},{"date":1605369600000,"examCount":1000},{"date":1605456000000,"examCount":1000},{"date":1605542400000,"examCount":1000},{"date":1605628800000,"examCount":1000},{"date":1605715200000,"examCount":1000},{"date":1605801600000,"examCount":1000},{"date":1605888000000,"examCount":1000},{"date":1605974400000,"examCount":1000},{"date":1606060800000,"examCount":1000},{"date":1606147200000,"examCount":1000},{"date":1606233600000,"examCount":1000},{"date":1606320000000,"examCount":1000},{"date":1606406400000,"examCount":1000},{"date":1606492800000,"examCount":1000},{"date":1606579200000,"examCount":1000},{"date":1606665600000,"examCount":1000},{"date":1606752000000,"examCount":1000},{"date":1606838400000,"examCount":1000},{"date":1606924800000,"examCount":1000},{"date":1607011200000,"examCount":1000},{"date":1607097600000,"examCount":1000},{"date":1607184000000,"examCount":1000},{"date":1607270400000,"examCount":1000},{"date":1607356800000,"examCount":1000},{"date":1607443200000,"examCount":1000},{"date":1607529600000,"examCount":1000},{"date":1607616000000,"examCount":1000},{"date":1607702400000,"examCount":1000},{"date":1607788800000,"examCount":1000},{"date":1607875200000,"examCount":1000},{"date":1607961600000,"examCount":1000},{"date":1608048000000,"examCount":1000},{"date":1608134400000,"examCount":1000},{"date":1608220800000,"examCount":1000},{"date":1608307200000,"examCount":1000},{"date":1608393600000,"examCount":1000},{"date":1608480000000,"examCount":1000},{"date":1608566400000,"examCount":1000},{"date":1608652800000,"examCount":1000},{"date":1608739200000,"examCount":1000},{"date":1608825600000,"examCount":1000},{"date":1608912000000,"examCount":1000},{"date":1608998400000,"examCount":1000},{"date":1609084800000,"examCount":1000},{"date":1609171200000,"examCount":1000},{"date":1609257600000,"examCount":1000},{"date":1609344000000,"examCount":1000},{"date":1609430400000,"examCount":1000},{"date":1609516800000,"examCount":1000},{"date":1609603200000,"examCount":1000},{"date":1609689600000,"examCount":1000},{"date":1609776000000,"examCount":1000},{"date":1609862400000,"examCount":1000},{"date":1609948800000,"examCount":1000},{"date":1610035200000,"examCount":1000},{"date":1610121600000,"examCount":1000},{"date":1610208000000,"examCount":1000},{"date":1610294400000,"examCount":1000},{"date":1610380800000,"examCount":1000},{"date":1610467200000,"examCount":1000},{"date":1610553600000,"examCount":1000},{"date":1610640000000,"examCount":1000},{"date":1610726400000,"examCount":1000},{"date":1610812800000,"examCount":1000},{"date":1610899200000,"examCount":1000},{"date":1610985600000,"examCount":1000},{"date":1611072000000,"examCount":1000},{"date":1611158400000,"examCount":1000},{"date":1611244800000,"examCount":1000},{"date":1611331200000,"examCount":1000},{"date":1611417600000,"examCount":1000},{"date":1611504000000,"examCount":1000},{"date":1611590400000,"examCount":1000},{"date":1611676800000,"examCount":1000},{"date":1611763200000,"examCount":1000},{"date":1611849600000,"examCount":1000},{"date":1611936000000,"examCount":1000},{"date":1612022400000,"examCount":1000},{"date":1612108800000,"examCount":1000},{"date":1612195200000,"examCount":1000},{"date":1612281600000,"examCount":1000},{"date":1612368000000,"examCount":1000},{"date":1612454400000,"examCount":1000},{"date":1612540800000,"examCount":1000},{"date":1612627200000,"examCount":1000},{"date":1612713600000,"examCount":1000},{"date":1612800000000,"examCount":1000},{"date":1612886400000,"examCount":1000},{"date":1612972800000,"examCount":1000},{"date":1613059200000,"examCount":1000},{"date":1613145600000,"examCount":1000},{"date":1613232000000,"examCount":1000},{"date":1613318400000,"examCount":1000},{"date":1613404800000,"examCount":1000},{"date":1613491200000,"examCount":1000},{"date":1613577600000,"examCount":1000},{"date":1613664000000,"examCount":1000},{"date":1613750400000,"examCount":1000},{"date":1613836800000,"examCount":1000},{"date":1613923200000,"examCount":1000},{"date":1614009600000,"examCount":1000},{"date":1614096000000,"examCount":1000},{"date":1614182400000,"examCount":1000},{"date":1614268800000,"examCount":1000},{"date":1614355200000,"examCount":1000},{"date":1614441600000,"examCount":1000},{"date":1614528000000,"examCount":1000},{"date":1614614400000,"examCount":1000},{"date":1614700800000,"examCount":1000},{"date":1614787200000,"examCount":1000},{"date":1614873600000,"examCount":1000},{"date":1614960000000,"examCount":1000},{"date":1615046400000,"examCount":1000},{"date":1615132800000,"examCount":1000},{"date":1615219200000,"examCount":1000},{"date":1615305600000,"examCount":1000},{"date":1615392000000,"examCount":1000},{"date":1615478400000,"examCount":1000},{"date":1615564800000,"examCount":1000},{"date":1615651200000,"examCount":1000},{"date":1615737600000,"examCount":1000},{"date":1615824000000,"examCount":1000},{"date":1615910400000,"examCount":1000},{"date":1615996800000,"examCount":1000},{"date":1616083200000,"examCount":1000},{"date":1616169600000,"examCount":1000},{"date":1616256000000,"examCount":1000},{"date":1616342400000,"examCount":1000},{"date":1616428800000,"examCount":1000},{"date":1616515200000,"examCount":1000},{"date":1616601600000,"examCount":1000},{"date":1616688000000,"examCount":1000},{"date":1616774400000,"examCount":1000},{"date":1616860800000,"examCount":1000},{"date":1616947200000,"examCount":1000},{"date":1617033600000,"examCount":1000},{"date":1617120000000,"examCount":1000},{"date":1617206400000,"examCount":1000},{"date":1617292800000,"examCount":1000},{"date":1617379200000,"examCount":1000},{"date":1617465600000,"examCount":1000},{"date":1617552000000,"examCount":1000},{"date":1617638400000,"examCount":1000},{"date":1617724800000,"examCount":1000},{"date":1617811200000,"examCount":1000},{"date":1617897600000,"examCount":1000},{"date":1617984000000,"examCount":1000},{"date":1618070400000,"examCount":1000},{"date":1618156800000,"examCount":1000},{"date":1618243200000,"examCount":1000},{"date":1618329600000,"examCount":1000},{"date":1618416000000,"examCount":1000},{"date":1618502400000,"examCount":1000},{"date":1618588800000,"examCount":1000},{"date":1618675200000,"examCount":1000},{"date":1618761600000,"examCount":1000},{"date":1618848000000,"examCount":1000},{"date":1618934400000,"examCount":1000},{"date":1619020800000,"examCount":1000},{"date":1619107200000,"examCount":1000},{"date":1619193600000,"examCount":1000},{"date":1619280000000,"examCount":1000},{"date":1619366400000,"examCount":1000},{"date":1619452800000,"examCount":1000},{"date":1619539200000,"examCount":1000},{"date":1619625600000,"examCount":1000},{"date":1619712000000,"examCount":1000},{"date":1619798400000,"examCount":1000},{"date":1619884800000,"examCount":1000},{"date":1619971200000,"examCount":1000},{"date":1620057600000,"examCount":1000},{"date":1620144000000,"examCount":1000},{"date":1620230400000,"examCount":1000},{"date":1620316800000,"examCount":1000},{"date":1620403200000,"examCount":1000},{"date":1620489600000,"examCount":1000},{"date":1620576000000,"examCount":1000},{"date":1620662400000,"examCount":1000},{"date":1620748800000,"examCount":1000},{"date":1620835200000,"examCount":1000},{"date":1620921600000,"examCount":1000},{"date":1621008000000,"examCount":1000},{"date":1621094400000,"examCount":1000},{"date":1621180800000,"examCount":1000},{"date":1621267200000,"examCount":1000},{"date":1621353600000,"examCount":1000},{"date":1621440000000,"examCount":1000},{"date":1621526400000,"examCount":1000},{"date":1621612800000,"examCount":1000},{"date":1621699200000,"examCount":1000},{"date":1621785600000,"examCount":1000},{"date":1621872000000,"examCount":1000},{"date":1621958400000,"examCount":1000},{"date":1622044800000,"examCount":1000},{"date":1622131200000,"examCount":1000},{"date":1622217600000,"examCount":1000},{"date":1622304000000,"examCount":1000},{"date":1622390400000,"examCount":1000},{"date":1622476800000,"examCount":1000},{"date":1622563200000,"examCount":1000},{"date":1622649600000,"examCount":1000},{"date":1622736000000,"examCount":1000},{"date":1622822400000,"examCount":1000},{"date":1622908800000,"examCount":1000},{"date":1622995200000,"examCount":1000},{"date":1623081600000,"examCount":1000},{"date":1623168000000,"examCount":1000},{"date":1623254400000,"examCount":1000},{"date":1623340800000,"examCount":1000},{"date":1623427200000,"examCount":1000},{"date":1623513600000,"examCount":1000},{"date":1623600000000,"examCount":1000},{"date":1623686400000,"examCount":1000},{"date":1623772800000,"examCount":1000},{"date":1623859200000,"examCount":1000},{"date":1623945600000,"examCount":1000},{"date":1624032000000,"examCount":1000},{"date":1624118400000,"examCount":1000},{"date":1624204800000,"examCount":1000},{"date":1624291200000,"examCount":1000},{"date":1624377600000,"examCount":1000},{"date":1624464000000,"examCount":1000},{"date":1624550400000,"examCount":1000},{"date":1624636800000,"examCount":1000},{"date":1624723200000,"examCount":1000},{"date":1624809600000,"examCount":1000},{"date":1624896000000,"examCount":1000},{"date":1624982400000,"examCount":1000},{"date":1625068800000,"examCount":1000},{"date":1625155200000,"examCount":1000},{"date":1625241600000,"examCount":1000},{"date":1625328000000,"examCount":1000},{"date":1625414400000,"examCount":1000},{"date":1625500800000,"examCount":1000},{"date":1625587200000,"examCount":1000},{"date":1625673600000,"examCount":1000},{"date":1625760000000,"examCount":1000},{"date":1625846400000,"examCount":1000},{"date":1625932800000,"examCount":1000},{"date":1626019200000,"examCount":1000},{"date":1626105600000,"examCount":1000},{"date":1626192000000,"examCount":1000},{"date":1626278400000,"examCount":1000},{"date":1626364800000,"examCount":1000},{"date":1626451200000,"examCount":1000},{"date":1626537600000,"examCount":1000},{"date":1626624000000,"examCount":1000},{"date":1626710400000,"examCount":1000},{"date":1626796800000,"examCount":1000},{"date":1626883200000,"examCount":1000},{"date":1626969600000,"examCount":1000},{"date":1627056000000,"examCount":1000},{"date":1627142400000,"examCount":1000},{"date":1627228800000,"examCount":1000},{"date":1627315200000,"examCount":1000},{"date":1627401600000,"examCount":1000},{"date":1627488000000,"examCount":1000},{"date":1627574400000,"examCount":1000},{"date":1627660800000,"examCount":1000},{"date":1627747200000,"examCount":1000},{"date":1627833600000,"examCount":1000},{"date":1627920000000,"examCount":1000},{"date":1628006400000,"examCount":1000},{"date":1628092800000,"examCount":1000},{"date":1628179200000,"examCount":1000},{"date":1628265600000,"examCount":1000},{"date":1628352000000,"examCount":1000},{"date":1628438400000,"examCount":1000},{"date":1628524800000,"examCount":1000},{"date":1628611200000,"examCount":1000},{"date":1628697600000,"examCount":1000},{"date":1628784000000,"examCount":1000},{"date":1628870400000,"examCount":1000},{"date":1628956800000,"examCount":1000},{"date":1629043200000,"examCount":1000},{"date":1629129600000,"examCount":1000},{"date":1629216000000,"examCount":1000},{"date":1629302400000,"examCount":1000},{"date":1629388800000,"examCount":1000},{"date":1629475200000,"examCount":1000},{"date":1629561600000,"examCount":1000},{"date":1629648000000,"examCount":1000},{"date":1629734400000,"examCount":1000},{"date":1629820800000,"examCount":1000},{"date":1629907200000,"examCount":1000},{"date":1629993600000,"examCount":1000},{"date":1630080000000,"examCount":1000},{"date":1630166400000,"examCount":1000},{"date":1630252800000,"examCount":1000},{"date":1630339200000,"examCount":1000},{"date":1630425600000,"examCount":1000},{"date":1630512000000,"examCount":1000},{"date":1630598400000,"examCount":1000},{"date":1630684800000,"examCount":1000},{"date":1630771200000,"examCount":1000},{"date":1630857600000,"examCount":1000},{"date":1630944000000,"examCount":1000},{"date":1631030400000,"examCount":1000},{"date":1631116800000,"examCount":1000},{"date":1631203200000,"examCount":1000},{"date":1631289600000,"examCount":1000},{"date":1631376000000,"examCount":1000},{"date":1631462400000,"examCount":1000},{"date":1631548800000,"examCount":1000},{"date":1631635200000,"examCount":1000},{"date":1631721600000,"examCount":1000},{"date":1631808000000,"examCount":1000},{"date":1631894400000,"examCount":1000},{"date":1631980800000,"examCount":1000},{"date":1632067200000,"examCount":1000},{"date":1632153600000,"examCount":1000},{"date":1632240000000,"examCount":1000},{"date":1632326400000,"examCount":1000},{"date":1632412800000,"examCount":1000},{"date":1632499200000,"examCount":1000},{"date":1632585600000,"examCount":1000},{"date":1632672000000,"examCount":1000},{"date":1632758400000,"examCount":1000},{"date":1632844800000,"examCount":1000},{"date":1632931200000,"examCount":1000},{"date":1633017600000,"examCount":1000},{"date":1633104000000,"examCount":1000},{"date":1633190400000,"examCount":1000},{"date":1633276800000,"examCount":1000},{"date":1633363200000,"examCount":1000},{"date":1633449600000,"examCount":1000},{"date":1633536000000,"examCount":1000},{"date":1633622400000,"examCount":1000},{"date":1633708800000,"examCount":1000},{"date":1633795200000,"examCount":1000},{"date":1633881600000,"examCount":1000},{"date":1633968000000,"examCount":1000},{"date":1634054400000,"examCount":1000},{"date":1634140800000,"examCount":1000},{"date":1634227200000,"examCount":1000},{"date":1634313600000,"examCount":1000},{"date":1634400000000,"examCount":1000},{"date":1634486400000,"examCount":1000},{"date":1634572800000,"examCount":1000},{"date":1634659200000,"examCount":1000},{"date":1634745600000,"examCount":1000},{"date":1634832000000,"examCount":1000},{"date":1634918400000,"examCount":1000},{"date":1635004800000,"examCount":1000},{"date":1635091200000,"examCount":1000},{"date":1635177600000,"examCount":1000},{"date":1635264000000,"examCount":1000},{"date":1635350400000,"examCount":1000},{"date":1635436800000,"examCount":1000},{"date":1635523200000,"examCount":1000},{"date":1635609600000,"examCount":1000},{"date":1635696000000,"examCount":1000},{"date":1635782400000,"examCount":1000},{"date":1635868800000,"examCount":1000},{"date":1635955200000,"examCount":1000},{"date":1636041600000,"examCount":1000},{"date":1636128000000,"examCount":1000},{"date":1636214400000,"examCount":1000},{"date":1636300800000,"examCount":1000},{"date":1636387200000,"examCount":1000},{"date":1636473600000,"examCount":1000}]', 'deadlineTimeStamp': None, 'deadlineTimeStr': None, 'employeesProvided': 1, 'enableSyncHos': 1, 'examEndTimeStamp': 1636473600000, 'examEndTimeStr': '2021-11-10', 'examStartTimeStamp': 1605024000000, 'examStartTimeStr': '2020-11-11', 'isExpired': 0, 'issuedCount': 1, 'notIssuedCount': 0, 'optimisticLockId': '2695', 'optimisticLockVersion': 1609117869000, 'showEnableSyncHos': 1, 'unGroupedCount': 0}, 'success': True}
2020-12-28 09:47:08,619-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609117869000,时间戳id:2695
2020-12-28 09:47:08,620-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:47:08,772-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.454827s
2020-12-28 09:47:08,776-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:47:08,779-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.454827, 'data': {'batchId': 2695}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:47:09,774-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:09,776-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:09,777-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:09,779-[INFO]-logger.py-Unit_test-日志信息:正在执行第25条用例:【单位体检】3-时间戳不一致-单位批次-批次新增或者更新-用户a页面2时间戳1保存-失败
2020-12-28 09:47:09,780-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/card/v3/batch/save；method：POST；data：{"batchId":"2695","batchName":"基础体检女","employeesProvided":"1","bindTypes":"1","dateJson":[{"date":1605024000000,"examCount":1000},{"date":1605110400000,"examCount":1000},{"date":1605196800000,"examCount":1000},{"date":1605283200000,"examCount":1000},{"date":1605369600000,"examCount":1000},{"date":1605456000000,"examCount":1000},{"date":1605542400000,"examCount":1000},{"date":1605628800000,"examCount":1000},{"date":1605715200000,"examCount":1000},{"date":1605801600000,"examCount":1000},{"date":1605888000000,"examCount":1000},{"date":1605974400000,"examCount":1000},{"date":1606060800000,"examCount":1000},{"date":1606147200000,"examCount":1000},{"date":1606233600000,"examCount":1000},{"date":1606320000000,"examCount":1000},{"date":1606406400000,"examCount":1000},{"date":1606492800000,"examCount":1000},{"date":1606579200000,"examCount":1000},{"date":1606665600000,"examCount":1000},{"date":1606752000000,"examCount":1000},{"date":1606838400000,"examCount":1000},{"date":1606924800000,"examCount":1000},{"date":1607011200000,"examCount":1000},{"date":1607097600000,"examCount":1000},{"date":1607184000000,"examCount":1000},{"date":1607270400000,"examCount":1000},{"date":1607356800000,"examCount":1000},{"date":1607443200000,"examCount":1000},{"date":1607529600000,"examCount":1000},{"date":1607616000000,"examCount":1000},{"date":1607702400000,"examCount":1000},{"date":1607788800000,"examCount":1000},{"date":1607875200000,"examCount":1000},{"date":1607961600000,"examCount":1000},{"date":1608048000000,"examCount":1000},{"date":1608134400000,"examCount":1000},{"date":1608220800000,"examCount":1000},{"date":1608307200000,"examCount":1000},{"date":1608393600000,"examCount":1000},{"date":1608480000000,"examCount":1000},{"date":1608566400000,"examCount":1000},{"date":1608652800000,"examCount":1000},{"date":1608739200000,"examCount":1000},{"date":1608825600000,"examCount":1000},{"date":1608912000000,"examCount":1000},{"date":1608998400000,"examCount":1000},{"date":1609084800000,"examCount":1000},{"date":1609171200000,"examCount":1000},{"date":1609257600000,"examCount":1000},{"date":1609344000000,"examCount":1000},{"date":1609430400000,"examCount":1000},{"date":1609516800000,"examCount":1000},{"date":1609603200000,"examCount":1000},{"date":1609689600000,"examCount":1000},{"date":1609776000000,"examCount":1000},{"date":1609862400000,"examCount":1000},{"date":1609948800000,"examCount":1000},{"date":1610035200000,"examCount":1000},{"date":1610121600000,"examCount":1000},{"date":1610208000000,"examCount":1000},{"date":1610294400000,"examCount":1000},{"date":1610380800000,"examCount":1000},{"date":1610467200000,"examCount":1000},{"date":1610553600000,"examCount":1000},{"date":1610640000000,"examCount":1000},{"date":1610726400000,"examCount":1000},{"date":1610812800000,"examCount":1000},{"date":1610899200000,"examCount":1000},{"date":1610985600000,"examCount":1000},{"date":1611072000000,"examCount":1000},{"date":1611158400000,"examCount":1000},{"date":1611244800000,"examCount":1000},{"date":1611331200000,"examCount":1000},{"date":1611417600000,"examCount":1000},{"date":1611504000000,"examCount":1000},{"date":1611590400000,"examCount":1000},{"date":1611676800000,"examCount":1000},{"date":1611763200000,"examCount":1000},{"date":1611849600000,"examCount":1000},{"date":1611936000000,"examCount":1000},{"date":1612022400000,"examCount":1000},{"date":1612108800000,"examCount":1000},{"date":1612195200000,"examCount":1000},{"date":1612281600000,"examCount":1000},{"date":1612368000000,"examCount":1000},{"date":1612454400000,"examCount":1000},{"date":1612540800000,"examCount":1000},{"date":1612627200000,"examCount":1000},{"date":1612713600000,"examCount":1000},{"date":1612800000000,"examCount":1000},{"date":1612886400000,"examCount":1000},{"date":1612972800000,"examCount":1000},{"date":1613059200000,"examCount":1000},{"date":1613145600000,"examCount":1000},{"date":1613232000000,"examCount":1000},{"date":1613318400000,"examCount":1000},{"date":1613404800000,"examCount":1000},{"date":1613491200000,"examCount":1000},{"date":1613577600000,"examCount":1000},{"date":1613664000000,"examCount":1000},{"date":1613750400000,"examCount":1000},{"date":1613836800000,"examCount":1000},{"date":1613923200000,"examCount":1000},{"date":1614009600000,"examCount":1000},{"date":1614096000000,"examCount":1000},{"date":1614182400000,"examCount":1000},{"date":1614268800000,"examCount":1000},{"date":1614355200000,"examCount":1000},{"date":1614441600000,"examCount":1000},{"date":1614528000000,"examCount":1000},{"date":1614614400000,"examCount":1000},{"date":1614700800000,"examCount":1000},{"date":1614787200000,"examCount":1000},{"date":1614873600000,"examCount":1000},{"date":1614960000000,"examCount":1000},{"date":1615046400000,"examCount":1000},{"date":1615132800000,"examCount":1000},{"date":1615219200000,"examCount":1000},{"date":1615305600000,"examCount":1000},{"date":1615392000000,"examCount":1000},{"date":1615478400000,"examCount":1000},{"date":1615564800000,"examCount":1000},{"date":1615651200000,"examCount":1000},{"date":1615737600000,"examCount":1000},{"date":1615824000000,"examCount":1000},{"date":1615910400000,"examCount":1000},{"date":1615996800000,"examCount":1000},{"date":1616083200000,"examCount":1000},{"date":1616169600000,"examCount":1000},{"date":1616256000000,"examCount":1000},{"date":1616342400000,"examCount":1000},{"date":1616428800000,"examCount":1000},{"date":1616515200000,"examCount":1000},{"date":1616601600000,"examCount":1000},{"date":1616688000000,"examCount":1000},{"date":1616774400000,"examCount":1000},{"date":1616860800000,"examCount":1000},{"date":1616947200000,"examCount":1000},{"date":1617033600000,"examCount":1000},{"date":1617120000000,"examCount":1000},{"date":1617206400000,"examCount":1000},{"date":1617292800000,"examCount":1000},{"date":1617379200000,"examCount":1000},{"date":1617465600000,"examCount":1000},{"date":1617552000000,"examCount":1000},{"date":1617638400000,"examCount":1000},{"date":1617724800000,"examCount":1000},{"date":1617811200000,"examCount":1000},{"date":1617897600000,"examCount":1000},{"date":1617984000000,"examCount":1000},{"date":1618070400000,"examCount":1000},{"date":1618156800000,"examCount":1000},{"date":1618243200000,"examCount":1000},{"date":1618329600000,"examCount":1000},{"date":1618416000000,"examCount":1000},{"date":1618502400000,"examCount":1000},{"date":1618588800000,"examCount":1000},{"date":1618675200000,"examCount":1000},{"date":1618761600000,"examCount":1000},{"date":1618848000000,"examCount":1000},{"date":1618934400000,"examCount":1000},{"date":1619020800000,"examCount":1000},{"date":1619107200000,"examCount":1000},{"date":1619193600000,"examCount":1000},{"date":1619280000000,"examCount":1000},{"date":1619366400000,"examCount":1000},{"date":1619452800000,"examCount":1000},{"date":1619539200000,"examCount":1000},{"date":1619625600000,"examCount":1000},{"date":1619712000000,"examCount":1000},{"date":1619798400000,"examCount":1000},{"date":1619884800000,"examCount":1000},{"date":1619971200000,"examCount":1000},{"date":1620057600000,"examCount":1000},{"date":1620144000000,"examCount":1000},{"date":1620230400000,"examCount":1000},{"date":1620316800000,"examCount":1000},{"date":1620403200000,"examCount":1000},{"date":1620489600000,"examCount":1000},{"date":1620576000000,"examCount":1000},{"date":1620662400000,"examCount":1000},{"date":1620748800000,"examCount":1000},{"date":1620835200000,"examCount":1000},{"date":1620921600000,"examCount":1000},{"date":1621008000000,"examCount":1000},{"date":1621094400000,"examCount":1000},{"date":1621180800000,"examCount":1000},{"date":1621267200000,"examCount":1000},{"date":1621353600000,"examCount":1000},{"date":1621440000000,"examCount":1000},{"date":1621526400000,"examCount":1000},{"date":1621612800000,"examCount":1000},{"date":1621699200000,"examCount":1000},{"date":1621785600000,"examCount":1000},{"date":1621872000000,"examCount":1000},{"date":1621958400000,"examCount":1000},{"date":1622044800000,"examCount":1000},{"date":1622131200000,"examCount":1000},{"date":1622217600000,"examCount":1000},{"date":1622304000000,"examCount":1000},{"date":1622390400000,"examCount":1000},{"date":1622476800000,"examCount":1000},{"date":1622563200000,"examCount":1000},{"date":1622649600000,"examCount":1000},{"date":1622736000000,"examCount":1000},{"date":1622822400000,"examCount":1000},{"date":1622908800000,"examCount":1000},{"date":1622995200000,"examCount":1000},{"date":1623081600000,"examCount":1000},{"date":1623168000000,"examCount":1000},{"date":1623254400000,"examCount":1000},{"date":1623340800000,"examCount":1000},{"date":1623427200000,"examCount":1000},{"date":1623513600000,"examCount":1000},{"date":1623600000000,"examCount":1000},{"date":1623686400000,"examCount":1000},{"date":1623772800000,"examCount":1000},{"date":1623859200000,"examCount":1000},{"date":1623945600000,"examCount":1000},{"date":1624032000000,"examCount":1000},{"date":1624118400000,"examCount":1000},{"date":1624204800000,"examCount":1000},{"date":1624291200000,"examCount":1000},{"date":1624377600000,"examCount":1000},{"date":1624464000000,"examCount":1000},{"date":1624550400000,"examCount":1000},{"date":1624636800000,"examCount":1000},{"date":1624723200000,"examCount":1000},{"date":1624809600000,"examCount":1000},{"date":1624896000000,"examCount":1000},{"date":1624982400000,"examCount":1000},{"date":1625068800000,"examCount":1000},{"date":1625155200000,"examCount":1000},{"date":1625241600000,"examCount":1000},{"date":1625328000000,"examCount":1000},{"date":1625414400000,"examCount":1000},{"date":1625500800000,"examCount":1000},{"date":1625587200000,"examCount":1000},{"date":1625673600000,"examCount":1000},{"date":1625760000000,"examCount":1000},{"date":1625846400000,"examCount":1000},{"date":1625932800000,"examCount":1000},{"date":1626019200000,"examCount":1000},{"date":1626105600000,"examCount":1000},{"date":1626192000000,"examCount":1000},{"date":1626278400000,"examCount":1000},{"date":1626364800000,"examCount":1000},{"date":1626451200000,"examCount":1000},{"date":1626537600000,"examCount":1000},{"date":1626624000000,"examCount":1000},{"date":1626710400000,"examCount":1000},{"date":1626796800000,"examCount":1000},{"date":1626883200000,"examCount":1000},{"date":1626969600000,"examCount":1000},{"date":1627056000000,"examCount":1000},{"date":1627142400000,"examCount":1000},{"date":1627228800000,"examCount":1000},{"date":1627315200000,"examCount":1000},{"date":1627401600000,"examCount":1000},{"date":1627488000000,"examCount":1000},{"date":1627574400000,"examCount":1000},{"date":1627660800000,"examCount":1000},{"date":1627747200000,"examCount":1000},{"date":1627833600000,"examCount":1000},{"date":1627920000000,"examCount":1000},{"date":1628006400000,"examCount":1000},{"date":1628092800000,"examCount":1000},{"date":1628179200000,"examCount":1000},{"date":1628265600000,"examCount":1000},{"date":1628352000000,"examCount":1000},{"date":1628438400000,"examCount":1000},{"date":1628524800000,"examCount":1000},{"date":1628611200000,"examCount":1000},{"date":1628697600000,"examCount":1000},{"date":1628784000000,"examCount":1000},{"date":1628870400000,"examCount":1000},{"date":1628956800000,"examCount":1000},{"date":1629043200000,"examCount":1000},{"date":1629129600000,"examCount":1000},{"date":1629216000000,"examCount":1000},{"date":1629302400000,"examCount":1000},{"date":1629388800000,"examCount":1000},{"date":1629475200000,"examCount":1000},{"date":1629561600000,"examCount":1000},{"date":1629648000000,"examCount":1000},{"date":1629734400000,"examCount":1000},{"date":1629820800000,"examCount":1000},{"date":1629907200000,"examCount":1000},{"date":1629993600000,"examCount":1000},{"date":1630080000000,"examCount":1000},{"date":1630166400000,"examCount":1000},{"date":1630252800000,"examCount":1000},{"date":1630339200000,"examCount":1000},{"date":1630425600000,"examCount":1000},{"date":1630512000000,"examCount":1000},{"date":1630598400000,"examCount":1000},{"date":1630684800000,"examCount":1000},{"date":1630771200000,"examCount":1000},{"date":1630857600000,"examCount":1000},{"date":1630944000000,"examCount":1000},{"date":1631030400000,"examCount":1000},{"date":1631116800000,"examCount":1000},{"date":1631203200000,"examCount":1000},{"date":1631289600000,"examCount":1000},{"date":1631376000000,"examCount":1000},{"date":1631462400000,"examCount":1000},{"date":1631548800000,"examCount":1000},{"date":1631635200000,"examCount":1000},{"date":1631721600000,"examCount":1000},{"date":1631808000000,"examCount":1000},{"date":1631894400000,"examCount":1000},{"date":1631980800000,"examCount":1000},{"date":1632067200000,"examCount":1000},{"date":1632153600000,"examCount":1000},{"date":1632240000000,"examCount":1000},{"date":1632326400000,"examCount":1000},{"date":1632412800000,"examCount":1000},{"date":1632499200000,"examCount":1000},{"date":1632585600000,"examCount":1000},{"date":1632672000000,"examCount":1000},{"date":1632758400000,"examCount":1000},{"date":1632844800000,"examCount":1000},{"date":1632931200000,"examCount":1000},{"date":1633017600000,"examCount":1000},{"date":1633104000000,"examCount":1000},{"date":1633190400000,"examCount":1000},{"date":1633276800000,"examCount":1000},{"date":1633363200000,"examCount":1000},{"date":1633449600000,"examCount":1000},{"date":1633536000000,"examCount":1000},{"date":1633622400000,"examCount":1000},{"date":1633708800000,"examCount":1000},{"date":1633795200000,"examCount":1000},{"date":1633881600000,"examCount":1000},{"date":1633968000000,"examCount":1000},{"date":1634054400000,"examCount":1000},{"date":1634140800000,"examCount":1000},{"date":1634227200000,"examCount":1000},{"date":1634313600000,"examCount":1000},{"date":1634400000000,"examCount":1000},{"date":1634486400000,"examCount":1000},{"date":1634572800000,"examCount":1000},{"date":1634659200000,"examCount":1000},{"date":1634745600000,"examCount":1000},{"date":1634832000000,"examCount":1000},{"date":1634918400000,"examCount":1000},{"date":1635004800000,"examCount":1000},{"date":1635091200000,"examCount":1000},{"date":1635177600000,"examCount":1000},{"date":1635264000000,"examCount":1000},{"date":1635350400000,"examCount":1000},{"date":1635436800000,"examCount":1000},{"date":1635523200000,"examCount":1000},{"date":1635609600000,"examCount":1000},{"date":1635696000000,"examCount":1000},{"date":1635782400000,"examCount":1000},{"date":1635868800000,"examCount":1000},{"date":1635955200000,"examCount":1000},{"date":1636041600000,"examCount":1000},{"date":1636128000000,"examCount":1000},{"date":1636214400000,"examCount":1000},{"date":1636300800000,"examCount":1000},{"date":1636387200000,"examCount":1000},{"date":1636473600000,"examCount":1000}],"examEndTime":1636473600000,"examStartTime":1605024000000,"companyId":"2734","deadlineTime":"","batchTimeAppointStatus":0,"branchRatioList":[],"intervalList":[],"enableSyncHos":1,"stationId":"HL99998"}；sql：{}
2020-12-28 09:47:09,792-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:09,841-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:09,842-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:09,872-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:09,874-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:09,939-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:09,940-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:09,965-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:09,967-[INFO]-logger.py-all_method-日志信息:批次信息详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/card/v3/batch/2695
2020-12-28 09:47:10,041-[INFO]-logger.py-all_method-日志信息:批次信息详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'auditOpenSync': 1, 'batchId': 2695, 'batchName': '基础体检女', 'batchProcess': 4, 'batchTimeAppointStatus': 0, 'bindTypes': '1', 'createTimeStamp': 1605098979000, 'dateJson': '[{"date":1605024000000,"examCount":1000},{"date":1605110400000,"examCount":1000},{"date":1605196800000,"examCount":1000},{"date":1605283200000,"examCount":1000},{"date":1605369600000,"examCount":1000},{"date":1605456000000,"examCount":1000},{"date":1605542400000,"examCount":1000},{"date":1605628800000,"examCount":1000},{"date":1605715200000,"examCount":1000},{"date":1605801600000,"examCount":1000},{"date":1605888000000,"examCount":1000},{"date":1605974400000,"examCount":1000},{"date":1606060800000,"examCount":1000},{"date":1606147200000,"examCount":1000},{"date":1606233600000,"examCount":1000},{"date":1606320000000,"examCount":1000},{"date":1606406400000,"examCount":1000},{"date":1606492800000,"examCount":1000},{"date":1606579200000,"examCount":1000},{"date":1606665600000,"examCount":1000},{"date":1606752000000,"examCount":1000},{"date":1606838400000,"examCount":1000},{"date":1606924800000,"examCount":1000},{"date":1607011200000,"examCount":1000},{"date":1607097600000,"examCount":1000},{"date":1607184000000,"examCount":1000},{"date":1607270400000,"examCount":1000},{"date":1607356800000,"examCount":1000},{"date":1607443200000,"examCount":1000},{"date":1607529600000,"examCount":1000},{"date":1607616000000,"examCount":1000},{"date":1607702400000,"examCount":1000},{"date":1607788800000,"examCount":1000},{"date":1607875200000,"examCount":1000},{"date":1607961600000,"examCount":1000},{"date":1608048000000,"examCount":1000},{"date":1608134400000,"examCount":1000},{"date":1608220800000,"examCount":1000},{"date":1608307200000,"examCount":1000},{"date":1608393600000,"examCount":1000},{"date":1608480000000,"examCount":1000},{"date":1608566400000,"examCount":1000},{"date":1608652800000,"examCount":1000},{"date":1608739200000,"examCount":1000},{"date":1608825600000,"examCount":1000},{"date":1608912000000,"examCount":1000},{"date":1608998400000,"examCount":1000},{"date":1609084800000,"examCount":1000},{"date":1609171200000,"examCount":1000},{"date":1609257600000,"examCount":1000},{"date":1609344000000,"examCount":1000},{"date":1609430400000,"examCount":1000},{"date":1609516800000,"examCount":1000},{"date":1609603200000,"examCount":1000},{"date":1609689600000,"examCount":1000},{"date":1609776000000,"examCount":1000},{"date":1609862400000,"examCount":1000},{"date":1609948800000,"examCount":1000},{"date":1610035200000,"examCount":1000},{"date":1610121600000,"examCount":1000},{"date":1610208000000,"examCount":1000},{"date":1610294400000,"examCount":1000},{"date":1610380800000,"examCount":1000},{"date":1610467200000,"examCount":1000},{"date":1610553600000,"examCount":1000},{"date":1610640000000,"examCount":1000},{"date":1610726400000,"examCount":1000},{"date":1610812800000,"examCount":1000},{"date":1610899200000,"examCount":1000},{"date":1610985600000,"examCount":1000},{"date":1611072000000,"examCount":1000},{"date":1611158400000,"examCount":1000},{"date":1611244800000,"examCount":1000},{"date":1611331200000,"examCount":1000},{"date":1611417600000,"examCount":1000},{"date":1611504000000,"examCount":1000},{"date":1611590400000,"examCount":1000},{"date":1611676800000,"examCount":1000},{"date":1611763200000,"examCount":1000},{"date":1611849600000,"examCount":1000},{"date":1611936000000,"examCount":1000},{"date":1612022400000,"examCount":1000},{"date":1612108800000,"examCount":1000},{"date":1612195200000,"examCount":1000},{"date":1612281600000,"examCount":1000},{"date":1612368000000,"examCount":1000},{"date":1612454400000,"examCount":1000},{"date":1612540800000,"examCount":1000},{"date":1612627200000,"examCount":1000},{"date":1612713600000,"examCount":1000},{"date":1612800000000,"examCount":1000},{"date":1612886400000,"examCount":1000},{"date":1612972800000,"examCount":1000},{"date":1613059200000,"examCount":1000},{"date":1613145600000,"examCount":1000},{"date":1613232000000,"examCount":1000},{"date":1613318400000,"examCount":1000},{"date":1613404800000,"examCount":1000},{"date":1613491200000,"examCount":1000},{"date":1613577600000,"examCount":1000},{"date":1613664000000,"examCount":1000},{"date":1613750400000,"examCount":1000},{"date":1613836800000,"examCount":1000},{"date":1613923200000,"examCount":1000},{"date":1614009600000,"examCount":1000},{"date":1614096000000,"examCount":1000},{"date":1614182400000,"examCount":1000},{"date":1614268800000,"examCount":1000},{"date":1614355200000,"examCount":1000},{"date":1614441600000,"examCount":1000},{"date":1614528000000,"examCount":1000},{"date":1614614400000,"examCount":1000},{"date":1614700800000,"examCount":1000},{"date":1614787200000,"examCount":1000},{"date":1614873600000,"examCount":1000},{"date":1614960000000,"examCount":1000},{"date":1615046400000,"examCount":1000},{"date":1615132800000,"examCount":1000},{"date":1615219200000,"examCount":1000},{"date":1615305600000,"examCount":1000},{"date":1615392000000,"examCount":1000},{"date":1615478400000,"examCount":1000},{"date":1615564800000,"examCount":1000},{"date":1615651200000,"examCount":1000},{"date":1615737600000,"examCount":1000},{"date":1615824000000,"examCount":1000},{"date":1615910400000,"examCount":1000},{"date":1615996800000,"examCount":1000},{"date":1616083200000,"examCount":1000},{"date":1616169600000,"examCount":1000},{"date":1616256000000,"examCount":1000},{"date":1616342400000,"examCount":1000},{"date":1616428800000,"examCount":1000},{"date":1616515200000,"examCount":1000},{"date":1616601600000,"examCount":1000},{"date":1616688000000,"examCount":1000},{"date":1616774400000,"examCount":1000},{"date":1616860800000,"examCount":1000},{"date":1616947200000,"examCount":1000},{"date":1617033600000,"examCount":1000},{"date":1617120000000,"examCount":1000},{"date":1617206400000,"examCount":1000},{"date":1617292800000,"examCount":1000},{"date":1617379200000,"examCount":1000},{"date":1617465600000,"examCount":1000},{"date":1617552000000,"examCount":1000},{"date":1617638400000,"examCount":1000},{"date":1617724800000,"examCount":1000},{"date":1617811200000,"examCount":1000},{"date":1617897600000,"examCount":1000},{"date":1617984000000,"examCount":1000},{"date":1618070400000,"examCount":1000},{"date":1618156800000,"examCount":1000},{"date":1618243200000,"examCount":1000},{"date":1618329600000,"examCount":1000},{"date":1618416000000,"examCount":1000},{"date":1618502400000,"examCount":1000},{"date":1618588800000,"examCount":1000},{"date":1618675200000,"examCount":1000},{"date":1618761600000,"examCount":1000},{"date":1618848000000,"examCount":1000},{"date":1618934400000,"examCount":1000},{"date":1619020800000,"examCount":1000},{"date":1619107200000,"examCount":1000},{"date":1619193600000,"examCount":1000},{"date":1619280000000,"examCount":1000},{"date":1619366400000,"examCount":1000},{"date":1619452800000,"examCount":1000},{"date":1619539200000,"examCount":1000},{"date":1619625600000,"examCount":1000},{"date":1619712000000,"examCount":1000},{"date":1619798400000,"examCount":1000},{"date":1619884800000,"examCount":1000},{"date":1619971200000,"examCount":1000},{"date":1620057600000,"examCount":1000},{"date":1620144000000,"examCount":1000},{"date":1620230400000,"examCount":1000},{"date":1620316800000,"examCount":1000},{"date":1620403200000,"examCount":1000},{"date":1620489600000,"examCount":1000},{"date":1620576000000,"examCount":1000},{"date":1620662400000,"examCount":1000},{"date":1620748800000,"examCount":1000},{"date":1620835200000,"examCount":1000},{"date":1620921600000,"examCount":1000},{"date":1621008000000,"examCount":1000},{"date":1621094400000,"examCount":1000},{"date":1621180800000,"examCount":1000},{"date":1621267200000,"examCount":1000},{"date":1621353600000,"examCount":1000},{"date":1621440000000,"examCount":1000},{"date":1621526400000,"examCount":1000},{"date":1621612800000,"examCount":1000},{"date":1621699200000,"examCount":1000},{"date":1621785600000,"examCount":1000},{"date":1621872000000,"examCount":1000},{"date":1621958400000,"examCount":1000},{"date":1622044800000,"examCount":1000},{"date":1622131200000,"examCount":1000},{"date":1622217600000,"examCount":1000},{"date":1622304000000,"examCount":1000},{"date":1622390400000,"examCount":1000},{"date":1622476800000,"examCount":1000},{"date":1622563200000,"examCount":1000},{"date":1622649600000,"examCount":1000},{"date":1622736000000,"examCount":1000},{"date":1622822400000,"examCount":1000},{"date":1622908800000,"examCount":1000},{"date":1622995200000,"examCount":1000},{"date":1623081600000,"examCount":1000},{"date":1623168000000,"examCount":1000},{"date":1623254400000,"examCount":1000},{"date":1623340800000,"examCount":1000},{"date":1623427200000,"examCount":1000},{"date":1623513600000,"examCount":1000},{"date":1623600000000,"examCount":1000},{"date":1623686400000,"examCount":1000},{"date":1623772800000,"examCount":1000},{"date":1623859200000,"examCount":1000},{"date":1623945600000,"examCount":1000},{"date":1624032000000,"examCount":1000},{"date":1624118400000,"examCount":1000},{"date":1624204800000,"examCount":1000},{"date":1624291200000,"examCount":1000},{"date":1624377600000,"examCount":1000},{"date":1624464000000,"examCount":1000},{"date":1624550400000,"examCount":1000},{"date":1624636800000,"examCount":1000},{"date":1624723200000,"examCount":1000},{"date":1624809600000,"examCount":1000},{"date":1624896000000,"examCount":1000},{"date":1624982400000,"examCount":1000},{"date":1625068800000,"examCount":1000},{"date":1625155200000,"examCount":1000},{"date":1625241600000,"examCount":1000},{"date":1625328000000,"examCount":1000},{"date":1625414400000,"examCount":1000},{"date":1625500800000,"examCount":1000},{"date":1625587200000,"examCount":1000},{"date":1625673600000,"examCount":1000},{"date":1625760000000,"examCount":1000},{"date":1625846400000,"examCount":1000},{"date":1625932800000,"examCount":1000},{"date":1626019200000,"examCount":1000},{"date":1626105600000,"examCount":1000},{"date":1626192000000,"examCount":1000},{"date":1626278400000,"examCount":1000},{"date":1626364800000,"examCount":1000},{"date":1626451200000,"examCount":1000},{"date":1626537600000,"examCount":1000},{"date":1626624000000,"examCount":1000},{"date":1626710400000,"examCount":1000},{"date":1626796800000,"examCount":1000},{"date":1626883200000,"examCount":1000},{"date":1626969600000,"examCount":1000},{"date":1627056000000,"examCount":1000},{"date":1627142400000,"examCount":1000},{"date":1627228800000,"examCount":1000},{"date":1627315200000,"examCount":1000},{"date":1627401600000,"examCount":1000},{"date":1627488000000,"examCount":1000},{"date":1627574400000,"examCount":1000},{"date":1627660800000,"examCount":1000},{"date":1627747200000,"examCount":1000},{"date":1627833600000,"examCount":1000},{"date":1627920000000,"examCount":1000},{"date":1628006400000,"examCount":1000},{"date":1628092800000,"examCount":1000},{"date":1628179200000,"examCount":1000},{"date":1628265600000,"examCount":1000},{"date":1628352000000,"examCount":1000},{"date":1628438400000,"examCount":1000},{"date":1628524800000,"examCount":1000},{"date":1628611200000,"examCount":1000},{"date":1628697600000,"examCount":1000},{"date":1628784000000,"examCount":1000},{"date":1628870400000,"examCount":1000},{"date":1628956800000,"examCount":1000},{"date":1629043200000,"examCount":1000},{"date":1629129600000,"examCount":1000},{"date":1629216000000,"examCount":1000},{"date":1629302400000,"examCount":1000},{"date":1629388800000,"examCount":1000},{"date":1629475200000,"examCount":1000},{"date":1629561600000,"examCount":1000},{"date":1629648000000,"examCount":1000},{"date":1629734400000,"examCount":1000},{"date":1629820800000,"examCount":1000},{"date":1629907200000,"examCount":1000},{"date":1629993600000,"examCount":1000},{"date":1630080000000,"examCount":1000},{"date":1630166400000,"examCount":1000},{"date":1630252800000,"examCount":1000},{"date":1630339200000,"examCount":1000},{"date":1630425600000,"examCount":1000},{"date":1630512000000,"examCount":1000},{"date":1630598400000,"examCount":1000},{"date":1630684800000,"examCount":1000},{"date":1630771200000,"examCount":1000},{"date":1630857600000,"examCount":1000},{"date":1630944000000,"examCount":1000},{"date":1631030400000,"examCount":1000},{"date":1631116800000,"examCount":1000},{"date":1631203200000,"examCount":1000},{"date":1631289600000,"examCount":1000},{"date":1631376000000,"examCount":1000},{"date":1631462400000,"examCount":1000},{"date":1631548800000,"examCount":1000},{"date":1631635200000,"examCount":1000},{"date":1631721600000,"examCount":1000},{"date":1631808000000,"examCount":1000},{"date":1631894400000,"examCount":1000},{"date":1631980800000,"examCount":1000},{"date":1632067200000,"examCount":1000},{"date":1632153600000,"examCount":1000},{"date":1632240000000,"examCount":1000},{"date":1632326400000,"examCount":1000},{"date":1632412800000,"examCount":1000},{"date":1632499200000,"examCount":1000},{"date":1632585600000,"examCount":1000},{"date":1632672000000,"examCount":1000},{"date":1632758400000,"examCount":1000},{"date":1632844800000,"examCount":1000},{"date":1632931200000,"examCount":1000},{"date":1633017600000,"examCount":1000},{"date":1633104000000,"examCount":1000},{"date":1633190400000,"examCount":1000},{"date":1633276800000,"examCount":1000},{"date":1633363200000,"examCount":1000},{"date":1633449600000,"examCount":1000},{"date":1633536000000,"examCount":1000},{"date":1633622400000,"examCount":1000},{"date":1633708800000,"examCount":1000},{"date":1633795200000,"examCount":1000},{"date":1633881600000,"examCount":1000},{"date":1633968000000,"examCount":1000},{"date":1634054400000,"examCount":1000},{"date":1634140800000,"examCount":1000},{"date":1634227200000,"examCount":1000},{"date":1634313600000,"examCount":1000},{"date":1634400000000,"examCount":1000},{"date":1634486400000,"examCount":1000},{"date":1634572800000,"examCount":1000},{"date":1634659200000,"examCount":1000},{"date":1634745600000,"examCount":1000},{"date":1634832000000,"examCount":1000},{"date":1634918400000,"examCount":1000},{"date":1635004800000,"examCount":1000},{"date":1635091200000,"examCount":1000},{"date":1635177600000,"examCount":1000},{"date":1635264000000,"examCount":1000},{"date":1635350400000,"examCount":1000},{"date":1635436800000,"examCount":1000},{"date":1635523200000,"examCount":1000},{"date":1635609600000,"examCount":1000},{"date":1635696000000,"examCount":1000},{"date":1635782400000,"examCount":1000},{"date":1635868800000,"examCount":1000},{"date":1635955200000,"examCount":1000},{"date":1636041600000,"examCount":1000},{"date":1636128000000,"examCount":1000},{"date":1636214400000,"examCount":1000},{"date":1636300800000,"examCount":1000},{"date":1636387200000,"examCount":1000},{"date":1636473600000,"examCount":1000}]', 'deadlineTimeStamp': None, 'deadlineTimeStr': None, 'employeesProvided': 1, 'enableSyncHos': 1, 'examEndTimeStamp': 1636473600000, 'examEndTimeStr': '2021-11-10', 'examStartTimeStamp': 1605024000000, 'examStartTimeStr': '2020-11-11', 'isExpired': 0, 'issuedCount': 1, 'notIssuedCount': 0, 'optimisticLockId': '2695', 'optimisticLockVersion': 1609120028000, 'showEnableSyncHos': 1, 'unGroupedCount': 0}, 'success': True}
2020-12-28 09:47:10,052-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120028000,时间戳id:2695
2020-12-28 09:47:10,054-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:47:10,253-[INFO]-logger.py-httpRequest-日志信息:第一次保存headers：{'optimisticLockVersion': '1609120028000', 'optimisticLockId': '2695', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '0', 'errorMsg': '', 'result': {'batchId': 2695}, 'success': True}
2020-12-28 09:47:10,324-[INFO]-logger.py-httpRequest-日志信息:第二次保存headers：{'optimisticLockVersion': '1609120028000', 'optimisticLockId': '2695', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '20289', 'errorMsg': '该项数据已被修改，请刷新后重试！', 'result': None, 'success': False}
2020-12-28 09:47:10,325-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.536302s
2020-12-28 09:47:10,326-[INFO]-logger.py-Unit_test-日志信息:接口返回message:该项数据已被修改，请刷新后重试！
2020-12-28 09:47:10,327-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20289
2020-12-28 09:47:10,328-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.536302, 'data': '该项数据已被修改，请刷新后重试！', 'code': '20289', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:47:11,220-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:11,221-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:11,222-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:11,223-[INFO]-logger.py-Unit_test-日志信息:正在执行第26条用例:【单位体检】4-时间戳不一致-单位批次-批次新增或者更新-用户b页面2时间戳1保存-失败
2020-12-28 09:47:11,225-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/card/v3/batch/save；method：POST；data：{"batchId":"2695","batchName":"基础体检女","employeesProvided":"1","bindTypes":"1","dateJson":[{"date":1605024000000,"examCount":1000},{"date":1605110400000,"examCount":1000},{"date":1605196800000,"examCount":1000},{"date":1605283200000,"examCount":1000},{"date":1605369600000,"examCount":1000},{"date":1605456000000,"examCount":1000},{"date":1605542400000,"examCount":1000},{"date":1605628800000,"examCount":1000},{"date":1605715200000,"examCount":1000},{"date":1605801600000,"examCount":1000},{"date":1605888000000,"examCount":1000},{"date":1605974400000,"examCount":1000},{"date":1606060800000,"examCount":1000},{"date":1606147200000,"examCount":1000},{"date":1606233600000,"examCount":1000},{"date":1606320000000,"examCount":1000},{"date":1606406400000,"examCount":1000},{"date":1606492800000,"examCount":1000},{"date":1606579200000,"examCount":1000},{"date":1606665600000,"examCount":1000},{"date":1606752000000,"examCount":1000},{"date":1606838400000,"examCount":1000},{"date":1606924800000,"examCount":1000},{"date":1607011200000,"examCount":1000},{"date":1607097600000,"examCount":1000},{"date":1607184000000,"examCount":1000},{"date":1607270400000,"examCount":1000},{"date":1607356800000,"examCount":1000},{"date":1607443200000,"examCount":1000},{"date":1607529600000,"examCount":1000},{"date":1607616000000,"examCount":1000},{"date":1607702400000,"examCount":1000},{"date":1607788800000,"examCount":1000},{"date":1607875200000,"examCount":1000},{"date":1607961600000,"examCount":1000},{"date":1608048000000,"examCount":1000},{"date":1608134400000,"examCount":1000},{"date":1608220800000,"examCount":1000},{"date":1608307200000,"examCount":1000},{"date":1608393600000,"examCount":1000},{"date":1608480000000,"examCount":1000},{"date":1608566400000,"examCount":1000},{"date":1608652800000,"examCount":1000},{"date":1608739200000,"examCount":1000},{"date":1608825600000,"examCount":1000},{"date":1608912000000,"examCount":1000},{"date":1608998400000,"examCount":1000},{"date":1609084800000,"examCount":1000},{"date":1609171200000,"examCount":1000},{"date":1609257600000,"examCount":1000},{"date":1609344000000,"examCount":1000},{"date":1609430400000,"examCount":1000},{"date":1609516800000,"examCount":1000},{"date":1609603200000,"examCount":1000},{"date":1609689600000,"examCount":1000},{"date":1609776000000,"examCount":1000},{"date":1609862400000,"examCount":1000},{"date":1609948800000,"examCount":1000},{"date":1610035200000,"examCount":1000},{"date":1610121600000,"examCount":1000},{"date":1610208000000,"examCount":1000},{"date":1610294400000,"examCount":1000},{"date":1610380800000,"examCount":1000},{"date":1610467200000,"examCount":1000},{"date":1610553600000,"examCount":1000},{"date":1610640000000,"examCount":1000},{"date":1610726400000,"examCount":1000},{"date":1610812800000,"examCount":1000},{"date":1610899200000,"examCount":1000},{"date":1610985600000,"examCount":1000},{"date":1611072000000,"examCount":1000},{"date":1611158400000,"examCount":1000},{"date":1611244800000,"examCount":1000},{"date":1611331200000,"examCount":1000},{"date":1611417600000,"examCount":1000},{"date":1611504000000,"examCount":1000},{"date":1611590400000,"examCount":1000},{"date":1611676800000,"examCount":1000},{"date":1611763200000,"examCount":1000},{"date":1611849600000,"examCount":1000},{"date":1611936000000,"examCount":1000},{"date":1612022400000,"examCount":1000},{"date":1612108800000,"examCount":1000},{"date":1612195200000,"examCount":1000},{"date":1612281600000,"examCount":1000},{"date":1612368000000,"examCount":1000},{"date":1612454400000,"examCount":1000},{"date":1612540800000,"examCount":1000},{"date":1612627200000,"examCount":1000},{"date":1612713600000,"examCount":1000},{"date":1612800000000,"examCount":1000},{"date":1612886400000,"examCount":1000},{"date":1612972800000,"examCount":1000},{"date":1613059200000,"examCount":1000},{"date":1613145600000,"examCount":1000},{"date":1613232000000,"examCount":1000},{"date":1613318400000,"examCount":1000},{"date":1613404800000,"examCount":1000},{"date":1613491200000,"examCount":1000},{"date":1613577600000,"examCount":1000},{"date":1613664000000,"examCount":1000},{"date":1613750400000,"examCount":1000},{"date":1613836800000,"examCount":1000},{"date":1613923200000,"examCount":1000},{"date":1614009600000,"examCount":1000},{"date":1614096000000,"examCount":1000},{"date":1614182400000,"examCount":1000},{"date":1614268800000,"examCount":1000},{"date":1614355200000,"examCount":1000},{"date":1614441600000,"examCount":1000},{"date":1614528000000,"examCount":1000},{"date":1614614400000,"examCount":1000},{"date":1614700800000,"examCount":1000},{"date":1614787200000,"examCount":1000},{"date":1614873600000,"examCount":1000},{"date":1614960000000,"examCount":1000},{"date":1615046400000,"examCount":1000},{"date":1615132800000,"examCount":1000},{"date":1615219200000,"examCount":1000},{"date":1615305600000,"examCount":1000},{"date":1615392000000,"examCount":1000},{"date":1615478400000,"examCount":1000},{"date":1615564800000,"examCount":1000},{"date":1615651200000,"examCount":1000},{"date":1615737600000,"examCount":1000},{"date":1615824000000,"examCount":1000},{"date":1615910400000,"examCount":1000},{"date":1615996800000,"examCount":1000},{"date":1616083200000,"examCount":1000},{"date":1616169600000,"examCount":1000},{"date":1616256000000,"examCount":1000},{"date":1616342400000,"examCount":1000},{"date":1616428800000,"examCount":1000},{"date":1616515200000,"examCount":1000},{"date":1616601600000,"examCount":1000},{"date":1616688000000,"examCount":1000},{"date":1616774400000,"examCount":1000},{"date":1616860800000,"examCount":1000},{"date":1616947200000,"examCount":1000},{"date":1617033600000,"examCount":1000},{"date":1617120000000,"examCount":1000},{"date":1617206400000,"examCount":1000},{"date":1617292800000,"examCount":1000},{"date":1617379200000,"examCount":1000},{"date":1617465600000,"examCount":1000},{"date":1617552000000,"examCount":1000},{"date":1617638400000,"examCount":1000},{"date":1617724800000,"examCount":1000},{"date":1617811200000,"examCount":1000},{"date":1617897600000,"examCount":1000},{"date":1617984000000,"examCount":1000},{"date":1618070400000,"examCount":1000},{"date":1618156800000,"examCount":1000},{"date":1618243200000,"examCount":1000},{"date":1618329600000,"examCount":1000},{"date":1618416000000,"examCount":1000},{"date":1618502400000,"examCount":1000},{"date":1618588800000,"examCount":1000},{"date":1618675200000,"examCount":1000},{"date":1618761600000,"examCount":1000},{"date":1618848000000,"examCount":1000},{"date":1618934400000,"examCount":1000},{"date":1619020800000,"examCount":1000},{"date":1619107200000,"examCount":1000},{"date":1619193600000,"examCount":1000},{"date":1619280000000,"examCount":1000},{"date":1619366400000,"examCount":1000},{"date":1619452800000,"examCount":1000},{"date":1619539200000,"examCount":1000},{"date":1619625600000,"examCount":1000},{"date":1619712000000,"examCount":1000},{"date":1619798400000,"examCount":1000},{"date":1619884800000,"examCount":1000},{"date":1619971200000,"examCount":1000},{"date":1620057600000,"examCount":1000},{"date":1620144000000,"examCount":1000},{"date":1620230400000,"examCount":1000},{"date":1620316800000,"examCount":1000},{"date":1620403200000,"examCount":1000},{"date":1620489600000,"examCount":1000},{"date":1620576000000,"examCount":1000},{"date":1620662400000,"examCount":1000},{"date":1620748800000,"examCount":1000},{"date":1620835200000,"examCount":1000},{"date":1620921600000,"examCount":1000},{"date":1621008000000,"examCount":1000},{"date":1621094400000,"examCount":1000},{"date":1621180800000,"examCount":1000},{"date":1621267200000,"examCount":1000},{"date":1621353600000,"examCount":1000},{"date":1621440000000,"examCount":1000},{"date":1621526400000,"examCount":1000},{"date":1621612800000,"examCount":1000},{"date":1621699200000,"examCount":1000},{"date":1621785600000,"examCount":1000},{"date":1621872000000,"examCount":1000},{"date":1621958400000,"examCount":1000},{"date":1622044800000,"examCount":1000},{"date":1622131200000,"examCount":1000},{"date":1622217600000,"examCount":1000},{"date":1622304000000,"examCount":1000},{"date":1622390400000,"examCount":1000},{"date":1622476800000,"examCount":1000},{"date":1622563200000,"examCount":1000},{"date":1622649600000,"examCount":1000},{"date":1622736000000,"examCount":1000},{"date":1622822400000,"examCount":1000},{"date":1622908800000,"examCount":1000},{"date":1622995200000,"examCount":1000},{"date":1623081600000,"examCount":1000},{"date":1623168000000,"examCount":1000},{"date":1623254400000,"examCount":1000},{"date":1623340800000,"examCount":1000},{"date":1623427200000,"examCount":1000},{"date":1623513600000,"examCount":1000},{"date":1623600000000,"examCount":1000},{"date":1623686400000,"examCount":1000},{"date":1623772800000,"examCount":1000},{"date":1623859200000,"examCount":1000},{"date":1623945600000,"examCount":1000},{"date":1624032000000,"examCount":1000},{"date":1624118400000,"examCount":1000},{"date":1624204800000,"examCount":1000},{"date":1624291200000,"examCount":1000},{"date":1624377600000,"examCount":1000},{"date":1624464000000,"examCount":1000},{"date":1624550400000,"examCount":1000},{"date":1624636800000,"examCount":1000},{"date":1624723200000,"examCount":1000},{"date":1624809600000,"examCount":1000},{"date":1624896000000,"examCount":1000},{"date":1624982400000,"examCount":1000},{"date":1625068800000,"examCount":1000},{"date":1625155200000,"examCount":1000},{"date":1625241600000,"examCount":1000},{"date":1625328000000,"examCount":1000},{"date":1625414400000,"examCount":1000},{"date":1625500800000,"examCount":1000},{"date":1625587200000,"examCount":1000},{"date":1625673600000,"examCount":1000},{"date":1625760000000,"examCount":1000},{"date":1625846400000,"examCount":1000},{"date":1625932800000,"examCount":1000},{"date":1626019200000,"examCount":1000},{"date":1626105600000,"examCount":1000},{"date":1626192000000,"examCount":1000},{"date":1626278400000,"examCount":1000},{"date":1626364800000,"examCount":1000},{"date":1626451200000,"examCount":1000},{"date":1626537600000,"examCount":1000},{"date":1626624000000,"examCount":1000},{"date":1626710400000,"examCount":1000},{"date":1626796800000,"examCount":1000},{"date":1626883200000,"examCount":1000},{"date":1626969600000,"examCount":1000},{"date":1627056000000,"examCount":1000},{"date":1627142400000,"examCount":1000},{"date":1627228800000,"examCount":1000},{"date":1627315200000,"examCount":1000},{"date":1627401600000,"examCount":1000},{"date":1627488000000,"examCount":1000},{"date":1627574400000,"examCount":1000},{"date":1627660800000,"examCount":1000},{"date":1627747200000,"examCount":1000},{"date":1627833600000,"examCount":1000},{"date":1627920000000,"examCount":1000},{"date":1628006400000,"examCount":1000},{"date":1628092800000,"examCount":1000},{"date":1628179200000,"examCount":1000},{"date":1628265600000,"examCount":1000},{"date":1628352000000,"examCount":1000},{"date":1628438400000,"examCount":1000},{"date":1628524800000,"examCount":1000},{"date":1628611200000,"examCount":1000},{"date":1628697600000,"examCount":1000},{"date":1628784000000,"examCount":1000},{"date":1628870400000,"examCount":1000},{"date":1628956800000,"examCount":1000},{"date":1629043200000,"examCount":1000},{"date":1629129600000,"examCount":1000},{"date":1629216000000,"examCount":1000},{"date":1629302400000,"examCount":1000},{"date":1629388800000,"examCount":1000},{"date":1629475200000,"examCount":1000},{"date":1629561600000,"examCount":1000},{"date":1629648000000,"examCount":1000},{"date":1629734400000,"examCount":1000},{"date":1629820800000,"examCount":1000},{"date":1629907200000,"examCount":1000},{"date":1629993600000,"examCount":1000},{"date":1630080000000,"examCount":1000},{"date":1630166400000,"examCount":1000},{"date":1630252800000,"examCount":1000},{"date":1630339200000,"examCount":1000},{"date":1630425600000,"examCount":1000},{"date":1630512000000,"examCount":1000},{"date":1630598400000,"examCount":1000},{"date":1630684800000,"examCount":1000},{"date":1630771200000,"examCount":1000},{"date":1630857600000,"examCount":1000},{"date":1630944000000,"examCount":1000},{"date":1631030400000,"examCount":1000},{"date":1631116800000,"examCount":1000},{"date":1631203200000,"examCount":1000},{"date":1631289600000,"examCount":1000},{"date":1631376000000,"examCount":1000},{"date":1631462400000,"examCount":1000},{"date":1631548800000,"examCount":1000},{"date":1631635200000,"examCount":1000},{"date":1631721600000,"examCount":1000},{"date":1631808000000,"examCount":1000},{"date":1631894400000,"examCount":1000},{"date":1631980800000,"examCount":1000},{"date":1632067200000,"examCount":1000},{"date":1632153600000,"examCount":1000},{"date":1632240000000,"examCount":1000},{"date":1632326400000,"examCount":1000},{"date":1632412800000,"examCount":1000},{"date":1632499200000,"examCount":1000},{"date":1632585600000,"examCount":1000},{"date":1632672000000,"examCount":1000},{"date":1632758400000,"examCount":1000},{"date":1632844800000,"examCount":1000},{"date":1632931200000,"examCount":1000},{"date":1633017600000,"examCount":1000},{"date":1633104000000,"examCount":1000},{"date":1633190400000,"examCount":1000},{"date":1633276800000,"examCount":1000},{"date":1633363200000,"examCount":1000},{"date":1633449600000,"examCount":1000},{"date":1633536000000,"examCount":1000},{"date":1633622400000,"examCount":1000},{"date":1633708800000,"examCount":1000},{"date":1633795200000,"examCount":1000},{"date":1633881600000,"examCount":1000},{"date":1633968000000,"examCount":1000},{"date":1634054400000,"examCount":1000},{"date":1634140800000,"examCount":1000},{"date":1634227200000,"examCount":1000},{"date":1634313600000,"examCount":1000},{"date":1634400000000,"examCount":1000},{"date":1634486400000,"examCount":1000},{"date":1634572800000,"examCount":1000},{"date":1634659200000,"examCount":1000},{"date":1634745600000,"examCount":1000},{"date":1634832000000,"examCount":1000},{"date":1634918400000,"examCount":1000},{"date":1635004800000,"examCount":1000},{"date":1635091200000,"examCount":1000},{"date":1635177600000,"examCount":1000},{"date":1635264000000,"examCount":1000},{"date":1635350400000,"examCount":1000},{"date":1635436800000,"examCount":1000},{"date":1635523200000,"examCount":1000},{"date":1635609600000,"examCount":1000},{"date":1635696000000,"examCount":1000},{"date":1635782400000,"examCount":1000},{"date":1635868800000,"examCount":1000},{"date":1635955200000,"examCount":1000},{"date":1636041600000,"examCount":1000},{"date":1636128000000,"examCount":1000},{"date":1636214400000,"examCount":1000},{"date":1636300800000,"examCount":1000},{"date":1636387200000,"examCount":1000},{"date":1636473600000,"examCount":1000}],"examEndTime":1636473600000,"examStartTime":1605024000000,"companyId":"2734","deadlineTime":"","batchTimeAppointStatus":0,"branchRatioList":[],"intervalList":[],"enableSyncHos":1,"stationId":"HL99998"}；sql：{}
2020-12-28 09:47:11,238-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:11,288-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:11,290-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:11,317-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:11,319-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:11,356-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:11,357-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:11,392-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:11,396-[INFO]-logger.py-all_method-日志信息:批次信息详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/card/v3/batch/2695
2020-12-28 09:47:11,479-[INFO]-logger.py-all_method-日志信息:批次信息详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'auditOpenSync': 1, 'batchId': 2695, 'batchName': '基础体检女', 'batchProcess': 4, 'batchTimeAppointStatus': 0, 'bindTypes': '1', 'createTimeStamp': 1605098979000, 'dateJson': '[{"date":1605024000000,"examCount":1000},{"date":1605110400000,"examCount":1000},{"date":1605196800000,"examCount":1000},{"date":1605283200000,"examCount":1000},{"date":1605369600000,"examCount":1000},{"date":1605456000000,"examCount":1000},{"date":1605542400000,"examCount":1000},{"date":1605628800000,"examCount":1000},{"date":1605715200000,"examCount":1000},{"date":1605801600000,"examCount":1000},{"date":1605888000000,"examCount":1000},{"date":1605974400000,"examCount":1000},{"date":1606060800000,"examCount":1000},{"date":1606147200000,"examCount":1000},{"date":1606233600000,"examCount":1000},{"date":1606320000000,"examCount":1000},{"date":1606406400000,"examCount":1000},{"date":1606492800000,"examCount":1000},{"date":1606579200000,"examCount":1000},{"date":1606665600000,"examCount":1000},{"date":1606752000000,"examCount":1000},{"date":1606838400000,"examCount":1000},{"date":1606924800000,"examCount":1000},{"date":1607011200000,"examCount":1000},{"date":1607097600000,"examCount":1000},{"date":1607184000000,"examCount":1000},{"date":1607270400000,"examCount":1000},{"date":1607356800000,"examCount":1000},{"date":1607443200000,"examCount":1000},{"date":1607529600000,"examCount":1000},{"date":1607616000000,"examCount":1000},{"date":1607702400000,"examCount":1000},{"date":1607788800000,"examCount":1000},{"date":1607875200000,"examCount":1000},{"date":1607961600000,"examCount":1000},{"date":1608048000000,"examCount":1000},{"date":1608134400000,"examCount":1000},{"date":1608220800000,"examCount":1000},{"date":1608307200000,"examCount":1000},{"date":1608393600000,"examCount":1000},{"date":1608480000000,"examCount":1000},{"date":1608566400000,"examCount":1000},{"date":1608652800000,"examCount":1000},{"date":1608739200000,"examCount":1000},{"date":1608825600000,"examCount":1000},{"date":1608912000000,"examCount":1000},{"date":1608998400000,"examCount":1000},{"date":1609084800000,"examCount":1000},{"date":1609171200000,"examCount":1000},{"date":1609257600000,"examCount":1000},{"date":1609344000000,"examCount":1000},{"date":1609430400000,"examCount":1000},{"date":1609516800000,"examCount":1000},{"date":1609603200000,"examCount":1000},{"date":1609689600000,"examCount":1000},{"date":1609776000000,"examCount":1000},{"date":1609862400000,"examCount":1000},{"date":1609948800000,"examCount":1000},{"date":1610035200000,"examCount":1000},{"date":1610121600000,"examCount":1000},{"date":1610208000000,"examCount":1000},{"date":1610294400000,"examCount":1000},{"date":1610380800000,"examCount":1000},{"date":1610467200000,"examCount":1000},{"date":1610553600000,"examCount":1000},{"date":1610640000000,"examCount":1000},{"date":1610726400000,"examCount":1000},{"date":1610812800000,"examCount":1000},{"date":1610899200000,"examCount":1000},{"date":1610985600000,"examCount":1000},{"date":1611072000000,"examCount":1000},{"date":1611158400000,"examCount":1000},{"date":1611244800000,"examCount":1000},{"date":1611331200000,"examCount":1000},{"date":1611417600000,"examCount":1000},{"date":1611504000000,"examCount":1000},{"date":1611590400000,"examCount":1000},{"date":1611676800000,"examCount":1000},{"date":1611763200000,"examCount":1000},{"date":1611849600000,"examCount":1000},{"date":1611936000000,"examCount":1000},{"date":1612022400000,"examCount":1000},{"date":1612108800000,"examCount":1000},{"date":1612195200000,"examCount":1000},{"date":1612281600000,"examCount":1000},{"date":1612368000000,"examCount":1000},{"date":1612454400000,"examCount":1000},{"date":1612540800000,"examCount":1000},{"date":1612627200000,"examCount":1000},{"date":1612713600000,"examCount":1000},{"date":1612800000000,"examCount":1000},{"date":1612886400000,"examCount":1000},{"date":1612972800000,"examCount":1000},{"date":1613059200000,"examCount":1000},{"date":1613145600000,"examCount":1000},{"date":1613232000000,"examCount":1000},{"date":1613318400000,"examCount":1000},{"date":1613404800000,"examCount":1000},{"date":1613491200000,"examCount":1000},{"date":1613577600000,"examCount":1000},{"date":1613664000000,"examCount":1000},{"date":1613750400000,"examCount":1000},{"date":1613836800000,"examCount":1000},{"date":1613923200000,"examCount":1000},{"date":1614009600000,"examCount":1000},{"date":1614096000000,"examCount":1000},{"date":1614182400000,"examCount":1000},{"date":1614268800000,"examCount":1000},{"date":1614355200000,"examCount":1000},{"date":1614441600000,"examCount":1000},{"date":1614528000000,"examCount":1000},{"date":1614614400000,"examCount":1000},{"date":1614700800000,"examCount":1000},{"date":1614787200000,"examCount":1000},{"date":1614873600000,"examCount":1000},{"date":1614960000000,"examCount":1000},{"date":1615046400000,"examCount":1000},{"date":1615132800000,"examCount":1000},{"date":1615219200000,"examCount":1000},{"date":1615305600000,"examCount":1000},{"date":1615392000000,"examCount":1000},{"date":1615478400000,"examCount":1000},{"date":1615564800000,"examCount":1000},{"date":1615651200000,"examCount":1000},{"date":1615737600000,"examCount":1000},{"date":1615824000000,"examCount":1000},{"date":1615910400000,"examCount":1000},{"date":1615996800000,"examCount":1000},{"date":1616083200000,"examCount":1000},{"date":1616169600000,"examCount":1000},{"date":1616256000000,"examCount":1000},{"date":1616342400000,"examCount":1000},{"date":1616428800000,"examCount":1000},{"date":1616515200000,"examCount":1000},{"date":1616601600000,"examCount":1000},{"date":1616688000000,"examCount":1000},{"date":1616774400000,"examCount":1000},{"date":1616860800000,"examCount":1000},{"date":1616947200000,"examCount":1000},{"date":1617033600000,"examCount":1000},{"date":1617120000000,"examCount":1000},{"date":1617206400000,"examCount":1000},{"date":1617292800000,"examCount":1000},{"date":1617379200000,"examCount":1000},{"date":1617465600000,"examCount":1000},{"date":1617552000000,"examCount":1000},{"date":1617638400000,"examCount":1000},{"date":1617724800000,"examCount":1000},{"date":1617811200000,"examCount":1000},{"date":1617897600000,"examCount":1000},{"date":1617984000000,"examCount":1000},{"date":1618070400000,"examCount":1000},{"date":1618156800000,"examCount":1000},{"date":1618243200000,"examCount":1000},{"date":1618329600000,"examCount":1000},{"date":1618416000000,"examCount":1000},{"date":1618502400000,"examCount":1000},{"date":1618588800000,"examCount":1000},{"date":1618675200000,"examCount":1000},{"date":1618761600000,"examCount":1000},{"date":1618848000000,"examCount":1000},{"date":1618934400000,"examCount":1000},{"date":1619020800000,"examCount":1000},{"date":1619107200000,"examCount":1000},{"date":1619193600000,"examCount":1000},{"date":1619280000000,"examCount":1000},{"date":1619366400000,"examCount":1000},{"date":1619452800000,"examCount":1000},{"date":1619539200000,"examCount":1000},{"date":1619625600000,"examCount":1000},{"date":1619712000000,"examCount":1000},{"date":1619798400000,"examCount":1000},{"date":1619884800000,"examCount":1000},{"date":1619971200000,"examCount":1000},{"date":1620057600000,"examCount":1000},{"date":1620144000000,"examCount":1000},{"date":1620230400000,"examCount":1000},{"date":1620316800000,"examCount":1000},{"date":1620403200000,"examCount":1000},{"date":1620489600000,"examCount":1000},{"date":1620576000000,"examCount":1000},{"date":1620662400000,"examCount":1000},{"date":1620748800000,"examCount":1000},{"date":1620835200000,"examCount":1000},{"date":1620921600000,"examCount":1000},{"date":1621008000000,"examCount":1000},{"date":1621094400000,"examCount":1000},{"date":1621180800000,"examCount":1000},{"date":1621267200000,"examCount":1000},{"date":1621353600000,"examCount":1000},{"date":1621440000000,"examCount":1000},{"date":1621526400000,"examCount":1000},{"date":1621612800000,"examCount":1000},{"date":1621699200000,"examCount":1000},{"date":1621785600000,"examCount":1000},{"date":1621872000000,"examCount":1000},{"date":1621958400000,"examCount":1000},{"date":1622044800000,"examCount":1000},{"date":1622131200000,"examCount":1000},{"date":1622217600000,"examCount":1000},{"date":1622304000000,"examCount":1000},{"date":1622390400000,"examCount":1000},{"date":1622476800000,"examCount":1000},{"date":1622563200000,"examCount":1000},{"date":1622649600000,"examCount":1000},{"date":1622736000000,"examCount":1000},{"date":1622822400000,"examCount":1000},{"date":1622908800000,"examCount":1000},{"date":1622995200000,"examCount":1000},{"date":1623081600000,"examCount":1000},{"date":1623168000000,"examCount":1000},{"date":1623254400000,"examCount":1000},{"date":1623340800000,"examCount":1000},{"date":1623427200000,"examCount":1000},{"date":1623513600000,"examCount":1000},{"date":1623600000000,"examCount":1000},{"date":1623686400000,"examCount":1000},{"date":1623772800000,"examCount":1000},{"date":1623859200000,"examCount":1000},{"date":1623945600000,"examCount":1000},{"date":1624032000000,"examCount":1000},{"date":1624118400000,"examCount":1000},{"date":1624204800000,"examCount":1000},{"date":1624291200000,"examCount":1000},{"date":1624377600000,"examCount":1000},{"date":1624464000000,"examCount":1000},{"date":1624550400000,"examCount":1000},{"date":1624636800000,"examCount":1000},{"date":1624723200000,"examCount":1000},{"date":1624809600000,"examCount":1000},{"date":1624896000000,"examCount":1000},{"date":1624982400000,"examCount":1000},{"date":1625068800000,"examCount":1000},{"date":1625155200000,"examCount":1000},{"date":1625241600000,"examCount":1000},{"date":1625328000000,"examCount":1000},{"date":1625414400000,"examCount":1000},{"date":1625500800000,"examCount":1000},{"date":1625587200000,"examCount":1000},{"date":1625673600000,"examCount":1000},{"date":1625760000000,"examCount":1000},{"date":1625846400000,"examCount":1000},{"date":1625932800000,"examCount":1000},{"date":1626019200000,"examCount":1000},{"date":1626105600000,"examCount":1000},{"date":1626192000000,"examCount":1000},{"date":1626278400000,"examCount":1000},{"date":1626364800000,"examCount":1000},{"date":1626451200000,"examCount":1000},{"date":1626537600000,"examCount":1000},{"date":1626624000000,"examCount":1000},{"date":1626710400000,"examCount":1000},{"date":1626796800000,"examCount":1000},{"date":1626883200000,"examCount":1000},{"date":1626969600000,"examCount":1000},{"date":1627056000000,"examCount":1000},{"date":1627142400000,"examCount":1000},{"date":1627228800000,"examCount":1000},{"date":1627315200000,"examCount":1000},{"date":1627401600000,"examCount":1000},{"date":1627488000000,"examCount":1000},{"date":1627574400000,"examCount":1000},{"date":1627660800000,"examCount":1000},{"date":1627747200000,"examCount":1000},{"date":1627833600000,"examCount":1000},{"date":1627920000000,"examCount":1000},{"date":1628006400000,"examCount":1000},{"date":1628092800000,"examCount":1000},{"date":1628179200000,"examCount":1000},{"date":1628265600000,"examCount":1000},{"date":1628352000000,"examCount":1000},{"date":1628438400000,"examCount":1000},{"date":1628524800000,"examCount":1000},{"date":1628611200000,"examCount":1000},{"date":1628697600000,"examCount":1000},{"date":1628784000000,"examCount":1000},{"date":1628870400000,"examCount":1000},{"date":1628956800000,"examCount":1000},{"date":1629043200000,"examCount":1000},{"date":1629129600000,"examCount":1000},{"date":1629216000000,"examCount":1000},{"date":1629302400000,"examCount":1000},{"date":1629388800000,"examCount":1000},{"date":1629475200000,"examCount":1000},{"date":1629561600000,"examCount":1000},{"date":1629648000000,"examCount":1000},{"date":1629734400000,"examCount":1000},{"date":1629820800000,"examCount":1000},{"date":1629907200000,"examCount":1000},{"date":1629993600000,"examCount":1000},{"date":1630080000000,"examCount":1000},{"date":1630166400000,"examCount":1000},{"date":1630252800000,"examCount":1000},{"date":1630339200000,"examCount":1000},{"date":1630425600000,"examCount":1000},{"date":1630512000000,"examCount":1000},{"date":1630598400000,"examCount":1000},{"date":1630684800000,"examCount":1000},{"date":1630771200000,"examCount":1000},{"date":1630857600000,"examCount":1000},{"date":1630944000000,"examCount":1000},{"date":1631030400000,"examCount":1000},{"date":1631116800000,"examCount":1000},{"date":1631203200000,"examCount":1000},{"date":1631289600000,"examCount":1000},{"date":1631376000000,"examCount":1000},{"date":1631462400000,"examCount":1000},{"date":1631548800000,"examCount":1000},{"date":1631635200000,"examCount":1000},{"date":1631721600000,"examCount":1000},{"date":1631808000000,"examCount":1000},{"date":1631894400000,"examCount":1000},{"date":1631980800000,"examCount":1000},{"date":1632067200000,"examCount":1000},{"date":1632153600000,"examCount":1000},{"date":1632240000000,"examCount":1000},{"date":1632326400000,"examCount":1000},{"date":1632412800000,"examCount":1000},{"date":1632499200000,"examCount":1000},{"date":1632585600000,"examCount":1000},{"date":1632672000000,"examCount":1000},{"date":1632758400000,"examCount":1000},{"date":1632844800000,"examCount":1000},{"date":1632931200000,"examCount":1000},{"date":1633017600000,"examCount":1000},{"date":1633104000000,"examCount":1000},{"date":1633190400000,"examCount":1000},{"date":1633276800000,"examCount":1000},{"date":1633363200000,"examCount":1000},{"date":1633449600000,"examCount":1000},{"date":1633536000000,"examCount":1000},{"date":1633622400000,"examCount":1000},{"date":1633708800000,"examCount":1000},{"date":1633795200000,"examCount":1000},{"date":1633881600000,"examCount":1000},{"date":1633968000000,"examCount":1000},{"date":1634054400000,"examCount":1000},{"date":1634140800000,"examCount":1000},{"date":1634227200000,"examCount":1000},{"date":1634313600000,"examCount":1000},{"date":1634400000000,"examCount":1000},{"date":1634486400000,"examCount":1000},{"date":1634572800000,"examCount":1000},{"date":1634659200000,"examCount":1000},{"date":1634745600000,"examCount":1000},{"date":1634832000000,"examCount":1000},{"date":1634918400000,"examCount":1000},{"date":1635004800000,"examCount":1000},{"date":1635091200000,"examCount":1000},{"date":1635177600000,"examCount":1000},{"date":1635264000000,"examCount":1000},{"date":1635350400000,"examCount":1000},{"date":1635436800000,"examCount":1000},{"date":1635523200000,"examCount":1000},{"date":1635609600000,"examCount":1000},{"date":1635696000000,"examCount":1000},{"date":1635782400000,"examCount":1000},{"date":1635868800000,"examCount":1000},{"date":1635955200000,"examCount":1000},{"date":1636041600000,"examCount":1000},{"date":1636128000000,"examCount":1000},{"date":1636214400000,"examCount":1000},{"date":1636300800000,"examCount":1000},{"date":1636387200000,"examCount":1000},{"date":1636473600000,"examCount":1000}]', 'deadlineTimeStamp': None, 'deadlineTimeStr': None, 'employeesProvided': 1, 'enableSyncHos': 1, 'examEndTimeStamp': 1636473600000, 'examEndTimeStr': '2021-11-10', 'examStartTimeStamp': 1605024000000, 'examStartTimeStr': '2020-11-11', 'isExpired': 0, 'issuedCount': 1, 'notIssuedCount': 0, 'optimisticLockId': '2695', 'optimisticLockVersion': 1609120030000, 'showEnableSyncHos': 1, 'unGroupedCount': 0}, 'success': True}
2020-12-28 09:47:11,485-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120030000,时间戳id:2695
2020-12-28 09:47:11,487-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:11,551-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(804,)
2020-12-28 09:47:11,554-[INFO]-logger.py-all_method-日志信息:手机15990106283:id获取成功返回:804
2020-12-28 09:47:11,592-[INFO]-logger.py-all_method-日志信息:手机15990106283:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '804', 'stationId': 'HL99998', 'token': 'ee999cd0bc8f5838fd28448a5f67fb14'}
2020-12-28 09:47:11,593-[INFO]-logger.py-all_method-日志信息:批次信息详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/card/v3/batch/2695
2020-12-28 09:47:11,663-[INFO]-logger.py-all_method-日志信息:批次信息详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'auditOpenSync': 1, 'batchId': 2695, 'batchName': '基础体检女', 'batchProcess': 4, 'batchTimeAppointStatus': 0, 'bindTypes': '1', 'createTimeStamp': 1605098979000, 'dateJson': '[{"date":1605024000000,"examCount":1000},{"date":1605110400000,"examCount":1000},{"date":1605196800000,"examCount":1000},{"date":1605283200000,"examCount":1000},{"date":1605369600000,"examCount":1000},{"date":1605456000000,"examCount":1000},{"date":1605542400000,"examCount":1000},{"date":1605628800000,"examCount":1000},{"date":1605715200000,"examCount":1000},{"date":1605801600000,"examCount":1000},{"date":1605888000000,"examCount":1000},{"date":1605974400000,"examCount":1000},{"date":1606060800000,"examCount":1000},{"date":1606147200000,"examCount":1000},{"date":1606233600000,"examCount":1000},{"date":1606320000000,"examCount":1000},{"date":1606406400000,"examCount":1000},{"date":1606492800000,"examCount":1000},{"date":1606579200000,"examCount":1000},{"date":1606665600000,"examCount":1000},{"date":1606752000000,"examCount":1000},{"date":1606838400000,"examCount":1000},{"date":1606924800000,"examCount":1000},{"date":1607011200000,"examCount":1000},{"date":1607097600000,"examCount":1000},{"date":1607184000000,"examCount":1000},{"date":1607270400000,"examCount":1000},{"date":1607356800000,"examCount":1000},{"date":1607443200000,"examCount":1000},{"date":1607529600000,"examCount":1000},{"date":1607616000000,"examCount":1000},{"date":1607702400000,"examCount":1000},{"date":1607788800000,"examCount":1000},{"date":1607875200000,"examCount":1000},{"date":1607961600000,"examCount":1000},{"date":1608048000000,"examCount":1000},{"date":1608134400000,"examCount":1000},{"date":1608220800000,"examCount":1000},{"date":1608307200000,"examCount":1000},{"date":1608393600000,"examCount":1000},{"date":1608480000000,"examCount":1000},{"date":1608566400000,"examCount":1000},{"date":1608652800000,"examCount":1000},{"date":1608739200000,"examCount":1000},{"date":1608825600000,"examCount":1000},{"date":1608912000000,"examCount":1000},{"date":1608998400000,"examCount":1000},{"date":1609084800000,"examCount":1000},{"date":1609171200000,"examCount":1000},{"date":1609257600000,"examCount":1000},{"date":1609344000000,"examCount":1000},{"date":1609430400000,"examCount":1000},{"date":1609516800000,"examCount":1000},{"date":1609603200000,"examCount":1000},{"date":1609689600000,"examCount":1000},{"date":1609776000000,"examCount":1000},{"date":1609862400000,"examCount":1000},{"date":1609948800000,"examCount":1000},{"date":1610035200000,"examCount":1000},{"date":1610121600000,"examCount":1000},{"date":1610208000000,"examCount":1000},{"date":1610294400000,"examCount":1000},{"date":1610380800000,"examCount":1000},{"date":1610467200000,"examCount":1000},{"date":1610553600000,"examCount":1000},{"date":1610640000000,"examCount":1000},{"date":1610726400000,"examCount":1000},{"date":1610812800000,"examCount":1000},{"date":1610899200000,"examCount":1000},{"date":1610985600000,"examCount":1000},{"date":1611072000000,"examCount":1000},{"date":1611158400000,"examCount":1000},{"date":1611244800000,"examCount":1000},{"date":1611331200000,"examCount":1000},{"date":1611417600000,"examCount":1000},{"date":1611504000000,"examCount":1000},{"date":1611590400000,"examCount":1000},{"date":1611676800000,"examCount":1000},{"date":1611763200000,"examCount":1000},{"date":1611849600000,"examCount":1000},{"date":1611936000000,"examCount":1000},{"date":1612022400000,"examCount":1000},{"date":1612108800000,"examCount":1000},{"date":1612195200000,"examCount":1000},{"date":1612281600000,"examCount":1000},{"date":1612368000000,"examCount":1000},{"date":1612454400000,"examCount":1000},{"date":1612540800000,"examCount":1000},{"date":1612627200000,"examCount":1000},{"date":1612713600000,"examCount":1000},{"date":1612800000000,"examCount":1000},{"date":1612886400000,"examCount":1000},{"date":1612972800000,"examCount":1000},{"date":1613059200000,"examCount":1000},{"date":1613145600000,"examCount":1000},{"date":1613232000000,"examCount":1000},{"date":1613318400000,"examCount":1000},{"date":1613404800000,"examCount":1000},{"date":1613491200000,"examCount":1000},{"date":1613577600000,"examCount":1000},{"date":1613664000000,"examCount":1000},{"date":1613750400000,"examCount":1000},{"date":1613836800000,"examCount":1000},{"date":1613923200000,"examCount":1000},{"date":1614009600000,"examCount":1000},{"date":1614096000000,"examCount":1000},{"date":1614182400000,"examCount":1000},{"date":1614268800000,"examCount":1000},{"date":1614355200000,"examCount":1000},{"date":1614441600000,"examCount":1000},{"date":1614528000000,"examCount":1000},{"date":1614614400000,"examCount":1000},{"date":1614700800000,"examCount":1000},{"date":1614787200000,"examCount":1000},{"date":1614873600000,"examCount":1000},{"date":1614960000000,"examCount":1000},{"date":1615046400000,"examCount":1000},{"date":1615132800000,"examCount":1000},{"date":1615219200000,"examCount":1000},{"date":1615305600000,"examCount":1000},{"date":1615392000000,"examCount":1000},{"date":1615478400000,"examCount":1000},{"date":1615564800000,"examCount":1000},{"date":1615651200000,"examCount":1000},{"date":1615737600000,"examCount":1000},{"date":1615824000000,"examCount":1000},{"date":1615910400000,"examCount":1000},{"date":1615996800000,"examCount":1000},{"date":1616083200000,"examCount":1000},{"date":1616169600000,"examCount":1000},{"date":1616256000000,"examCount":1000},{"date":1616342400000,"examCount":1000},{"date":1616428800000,"examCount":1000},{"date":1616515200000,"examCount":1000},{"date":1616601600000,"examCount":1000},{"date":1616688000000,"examCount":1000},{"date":1616774400000,"examCount":1000},{"date":1616860800000,"examCount":1000},{"date":1616947200000,"examCount":1000},{"date":1617033600000,"examCount":1000},{"date":1617120000000,"examCount":1000},{"date":1617206400000,"examCount":1000},{"date":1617292800000,"examCount":1000},{"date":1617379200000,"examCount":1000},{"date":1617465600000,"examCount":1000},{"date":1617552000000,"examCount":1000},{"date":1617638400000,"examCount":1000},{"date":1617724800000,"examCount":1000},{"date":1617811200000,"examCount":1000},{"date":1617897600000,"examCount":1000},{"date":1617984000000,"examCount":1000},{"date":1618070400000,"examCount":1000},{"date":1618156800000,"examCount":1000},{"date":1618243200000,"examCount":1000},{"date":1618329600000,"examCount":1000},{"date":1618416000000,"examCount":1000},{"date":1618502400000,"examCount":1000},{"date":1618588800000,"examCount":1000},{"date":1618675200000,"examCount":1000},{"date":1618761600000,"examCount":1000},{"date":1618848000000,"examCount":1000},{"date":1618934400000,"examCount":1000},{"date":1619020800000,"examCount":1000},{"date":1619107200000,"examCount":1000},{"date":1619193600000,"examCount":1000},{"date":1619280000000,"examCount":1000},{"date":1619366400000,"examCount":1000},{"date":1619452800000,"examCount":1000},{"date":1619539200000,"examCount":1000},{"date":1619625600000,"examCount":1000},{"date":1619712000000,"examCount":1000},{"date":1619798400000,"examCount":1000},{"date":1619884800000,"examCount":1000},{"date":1619971200000,"examCount":1000},{"date":1620057600000,"examCount":1000},{"date":1620144000000,"examCount":1000},{"date":1620230400000,"examCount":1000},{"date":1620316800000,"examCount":1000},{"date":1620403200000,"examCount":1000},{"date":1620489600000,"examCount":1000},{"date":1620576000000,"examCount":1000},{"date":1620662400000,"examCount":1000},{"date":1620748800000,"examCount":1000},{"date":1620835200000,"examCount":1000},{"date":1620921600000,"examCount":1000},{"date":1621008000000,"examCount":1000},{"date":1621094400000,"examCount":1000},{"date":1621180800000,"examCount":1000},{"date":1621267200000,"examCount":1000},{"date":1621353600000,"examCount":1000},{"date":1621440000000,"examCount":1000},{"date":1621526400000,"examCount":1000},{"date":1621612800000,"examCount":1000},{"date":1621699200000,"examCount":1000},{"date":1621785600000,"examCount":1000},{"date":1621872000000,"examCount":1000},{"date":1621958400000,"examCount":1000},{"date":1622044800000,"examCount":1000},{"date":1622131200000,"examCount":1000},{"date":1622217600000,"examCount":1000},{"date":1622304000000,"examCount":1000},{"date":1622390400000,"examCount":1000},{"date":1622476800000,"examCount":1000},{"date":1622563200000,"examCount":1000},{"date":1622649600000,"examCount":1000},{"date":1622736000000,"examCount":1000},{"date":1622822400000,"examCount":1000},{"date":1622908800000,"examCount":1000},{"date":1622995200000,"examCount":1000},{"date":1623081600000,"examCount":1000},{"date":1623168000000,"examCount":1000},{"date":1623254400000,"examCount":1000},{"date":1623340800000,"examCount":1000},{"date":1623427200000,"examCount":1000},{"date":1623513600000,"examCount":1000},{"date":1623600000000,"examCount":1000},{"date":1623686400000,"examCount":1000},{"date":1623772800000,"examCount":1000},{"date":1623859200000,"examCount":1000},{"date":1623945600000,"examCount":1000},{"date":1624032000000,"examCount":1000},{"date":1624118400000,"examCount":1000},{"date":1624204800000,"examCount":1000},{"date":1624291200000,"examCount":1000},{"date":1624377600000,"examCount":1000},{"date":1624464000000,"examCount":1000},{"date":1624550400000,"examCount":1000},{"date":1624636800000,"examCount":1000},{"date":1624723200000,"examCount":1000},{"date":1624809600000,"examCount":1000},{"date":1624896000000,"examCount":1000},{"date":1624982400000,"examCount":1000},{"date":1625068800000,"examCount":1000},{"date":1625155200000,"examCount":1000},{"date":1625241600000,"examCount":1000},{"date":1625328000000,"examCount":1000},{"date":1625414400000,"examCount":1000},{"date":1625500800000,"examCount":1000},{"date":1625587200000,"examCount":1000},{"date":1625673600000,"examCount":1000},{"date":1625760000000,"examCount":1000},{"date":1625846400000,"examCount":1000},{"date":1625932800000,"examCount":1000},{"date":1626019200000,"examCount":1000},{"date":1626105600000,"examCount":1000},{"date":1626192000000,"examCount":1000},{"date":1626278400000,"examCount":1000},{"date":1626364800000,"examCount":1000},{"date":1626451200000,"examCount":1000},{"date":1626537600000,"examCount":1000},{"date":1626624000000,"examCount":1000},{"date":1626710400000,"examCount":1000},{"date":1626796800000,"examCount":1000},{"date":1626883200000,"examCount":1000},{"date":1626969600000,"examCount":1000},{"date":1627056000000,"examCount":1000},{"date":1627142400000,"examCount":1000},{"date":1627228800000,"examCount":1000},{"date":1627315200000,"examCount":1000},{"date":1627401600000,"examCount":1000},{"date":1627488000000,"examCount":1000},{"date":1627574400000,"examCount":1000},{"date":1627660800000,"examCount":1000},{"date":1627747200000,"examCount":1000},{"date":1627833600000,"examCount":1000},{"date":1627920000000,"examCount":1000},{"date":1628006400000,"examCount":1000},{"date":1628092800000,"examCount":1000},{"date":1628179200000,"examCount":1000},{"date":1628265600000,"examCount":1000},{"date":1628352000000,"examCount":1000},{"date":1628438400000,"examCount":1000},{"date":1628524800000,"examCount":1000},{"date":1628611200000,"examCount":1000},{"date":1628697600000,"examCount":1000},{"date":1628784000000,"examCount":1000},{"date":1628870400000,"examCount":1000},{"date":1628956800000,"examCount":1000},{"date":1629043200000,"examCount":1000},{"date":1629129600000,"examCount":1000},{"date":1629216000000,"examCount":1000},{"date":1629302400000,"examCount":1000},{"date":1629388800000,"examCount":1000},{"date":1629475200000,"examCount":1000},{"date":1629561600000,"examCount":1000},{"date":1629648000000,"examCount":1000},{"date":1629734400000,"examCount":1000},{"date":1629820800000,"examCount":1000},{"date":1629907200000,"examCount":1000},{"date":1629993600000,"examCount":1000},{"date":1630080000000,"examCount":1000},{"date":1630166400000,"examCount":1000},{"date":1630252800000,"examCount":1000},{"date":1630339200000,"examCount":1000},{"date":1630425600000,"examCount":1000},{"date":1630512000000,"examCount":1000},{"date":1630598400000,"examCount":1000},{"date":1630684800000,"examCount":1000},{"date":1630771200000,"examCount":1000},{"date":1630857600000,"examCount":1000},{"date":1630944000000,"examCount":1000},{"date":1631030400000,"examCount":1000},{"date":1631116800000,"examCount":1000},{"date":1631203200000,"examCount":1000},{"date":1631289600000,"examCount":1000},{"date":1631376000000,"examCount":1000},{"date":1631462400000,"examCount":1000},{"date":1631548800000,"examCount":1000},{"date":1631635200000,"examCount":1000},{"date":1631721600000,"examCount":1000},{"date":1631808000000,"examCount":1000},{"date":1631894400000,"examCount":1000},{"date":1631980800000,"examCount":1000},{"date":1632067200000,"examCount":1000},{"date":1632153600000,"examCount":1000},{"date":1632240000000,"examCount":1000},{"date":1632326400000,"examCount":1000},{"date":1632412800000,"examCount":1000},{"date":1632499200000,"examCount":1000},{"date":1632585600000,"examCount":1000},{"date":1632672000000,"examCount":1000},{"date":1632758400000,"examCount":1000},{"date":1632844800000,"examCount":1000},{"date":1632931200000,"examCount":1000},{"date":1633017600000,"examCount":1000},{"date":1633104000000,"examCount":1000},{"date":1633190400000,"examCount":1000},{"date":1633276800000,"examCount":1000},{"date":1633363200000,"examCount":1000},{"date":1633449600000,"examCount":1000},{"date":1633536000000,"examCount":1000},{"date":1633622400000,"examCount":1000},{"date":1633708800000,"examCount":1000},{"date":1633795200000,"examCount":1000},{"date":1633881600000,"examCount":1000},{"date":1633968000000,"examCount":1000},{"date":1634054400000,"examCount":1000},{"date":1634140800000,"examCount":1000},{"date":1634227200000,"examCount":1000},{"date":1634313600000,"examCount":1000},{"date":1634400000000,"examCount":1000},{"date":1634486400000,"examCount":1000},{"date":1634572800000,"examCount":1000},{"date":1634659200000,"examCount":1000},{"date":1634745600000,"examCount":1000},{"date":1634832000000,"examCount":1000},{"date":1634918400000,"examCount":1000},{"date":1635004800000,"examCount":1000},{"date":1635091200000,"examCount":1000},{"date":1635177600000,"examCount":1000},{"date":1635264000000,"examCount":1000},{"date":1635350400000,"examCount":1000},{"date":1635436800000,"examCount":1000},{"date":1635523200000,"examCount":1000},{"date":1635609600000,"examCount":1000},{"date":1635696000000,"examCount":1000},{"date":1635782400000,"examCount":1000},{"date":1635868800000,"examCount":1000},{"date":1635955200000,"examCount":1000},{"date":1636041600000,"examCount":1000},{"date":1636128000000,"examCount":1000},{"date":1636214400000,"examCount":1000},{"date":1636300800000,"examCount":1000},{"date":1636387200000,"examCount":1000},{"date":1636473600000,"examCount":1000}]', 'deadlineTimeStamp': None, 'deadlineTimeStr': None, 'employeesProvided': 1, 'enableSyncHos': 1, 'examEndTimeStamp': 1636473600000, 'examEndTimeStr': '2021-11-10', 'examStartTimeStamp': 1605024000000, 'examStartTimeStr': '2020-11-11', 'isExpired': 0, 'issuedCount': 1, 'notIssuedCount': 0, 'optimisticLockId': '2695', 'optimisticLockVersion': 1609120030000, 'showEnableSyncHos': 1, 'unGroupedCount': 0}, 'success': True}
2020-12-28 09:47:11,673-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120030000,时间戳id:2695
2020-12-28 09:47:11,674-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:47:11,811-[INFO]-logger.py-httpRequest-日志信息:第一次保存headers：{'optimisticLockVersion': '1609120030000', 'optimisticLockId': '2695', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '0', 'errorMsg': '', 'result': {'batchId': 2695}, 'success': True}
2020-12-28 09:47:11,902-[INFO]-logger.py-httpRequest-日志信息:第二次保存headers：{'optimisticLockVersion': '1609120030000', 'optimisticLockId': '2695', 'adminId': '804', 'stationId': 'HL99998', 'token': 'ee999cd0bc8f5838fd28448a5f67fb14'},返回：{'code': '20289', 'errorMsg': '该项数据已被修改，请刷新后重试！', 'result': None, 'success': False}
2020-12-28 09:47:11,903-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.669617s
2020-12-28 09:47:11,904-[INFO]-logger.py-Unit_test-日志信息:接口返回message:该项数据已被修改，请刷新后重试！
2020-12-28 09:47:11,906-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20289
2020-12-28 09:47:11,907-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.669617, 'data': '该项数据已被修改，请刷新后重试！', 'code': '20289', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:47:12,869-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:12,870-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:12,872-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:12,873-[INFO]-logger.py-Unit_test-日志信息:正在执行第27条用例:【单位体检】2-时间戳一致-分组与人员-保存和更新分组信息-用户a页面1保存-成功
2020-12-28 09:47:12,874-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/card/v3/group/save；method：POST；data：{"list":[{"addFeeitemDiscount":"1","addFeeitemIds":"","addFeeitems":[],"ageMax":"","ageMin":"","batchId":2695,"cardFamilySuiteExtendDoList":[],"cardType":3,"cardValue":1,"companyId":2734,"editable":0,"enableRecommendSurvey":1,"examinationPassword":"","gender":2,"groupName":"空白分组","itemType":1,"married":2,"mutualExclusion":"0","optionalItemsBos":[],"optionalPkgsBos":[],"packageName":"团检女","reserveCardId":3370,"selfDiscount":"1","stationId":"HL99998","suitId":14610,"upgradePkgBos":[],"agePros":2,"selFamilyIds":[]}]}；sql：{}
2020-12-28 09:47:12,876-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:12,908-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:12,909-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:12,943-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:12,944-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:12,989-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:12,990-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:13,028-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:13,029-[INFO]-logger.py-all_method-日志信息:批次信息详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/card/v3/batch/2695
2020-12-28 09:47:13,104-[INFO]-logger.py-all_method-日志信息:批次信息详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'auditOpenSync': 1, 'batchId': 2695, 'batchName': '基础体检女', 'batchProcess': 4, 'batchTimeAppointStatus': 0, 'bindTypes': '1', 'createTimeStamp': 1605098979000, 'dateJson': '[{"date":1605024000000,"examCount":1000},{"date":1605110400000,"examCount":1000},{"date":1605196800000,"examCount":1000},{"date":1605283200000,"examCount":1000},{"date":1605369600000,"examCount":1000},{"date":1605456000000,"examCount":1000},{"date":1605542400000,"examCount":1000},{"date":1605628800000,"examCount":1000},{"date":1605715200000,"examCount":1000},{"date":1605801600000,"examCount":1000},{"date":1605888000000,"examCount":1000},{"date":1605974400000,"examCount":1000},{"date":1606060800000,"examCount":1000},{"date":1606147200000,"examCount":1000},{"date":1606233600000,"examCount":1000},{"date":1606320000000,"examCount":1000},{"date":1606406400000,"examCount":1000},{"date":1606492800000,"examCount":1000},{"date":1606579200000,"examCount":1000},{"date":1606665600000,"examCount":1000},{"date":1606752000000,"examCount":1000},{"date":1606838400000,"examCount":1000},{"date":1606924800000,"examCount":1000},{"date":1607011200000,"examCount":1000},{"date":1607097600000,"examCount":1000},{"date":1607184000000,"examCount":1000},{"date":1607270400000,"examCount":1000},{"date":1607356800000,"examCount":1000},{"date":1607443200000,"examCount":1000},{"date":1607529600000,"examCount":1000},{"date":1607616000000,"examCount":1000},{"date":1607702400000,"examCount":1000},{"date":1607788800000,"examCount":1000},{"date":1607875200000,"examCount":1000},{"date":1607961600000,"examCount":1000},{"date":1608048000000,"examCount":1000},{"date":1608134400000,"examCount":1000},{"date":1608220800000,"examCount":1000},{"date":1608307200000,"examCount":1000},{"date":1608393600000,"examCount":1000},{"date":1608480000000,"examCount":1000},{"date":1608566400000,"examCount":1000},{"date":1608652800000,"examCount":1000},{"date":1608739200000,"examCount":1000},{"date":1608825600000,"examCount":1000},{"date":1608912000000,"examCount":1000},{"date":1608998400000,"examCount":1000},{"date":1609084800000,"examCount":1000},{"date":1609171200000,"examCount":1000},{"date":1609257600000,"examCount":1000},{"date":1609344000000,"examCount":1000},{"date":1609430400000,"examCount":1000},{"date":1609516800000,"examCount":1000},{"date":1609603200000,"examCount":1000},{"date":1609689600000,"examCount":1000},{"date":1609776000000,"examCount":1000},{"date":1609862400000,"examCount":1000},{"date":1609948800000,"examCount":1000},{"date":1610035200000,"examCount":1000},{"date":1610121600000,"examCount":1000},{"date":1610208000000,"examCount":1000},{"date":1610294400000,"examCount":1000},{"date":1610380800000,"examCount":1000},{"date":1610467200000,"examCount":1000},{"date":1610553600000,"examCount":1000},{"date":1610640000000,"examCount":1000},{"date":1610726400000,"examCount":1000},{"date":1610812800000,"examCount":1000},{"date":1610899200000,"examCount":1000},{"date":1610985600000,"examCount":1000},{"date":1611072000000,"examCount":1000},{"date":1611158400000,"examCount":1000},{"date":1611244800000,"examCount":1000},{"date":1611331200000,"examCount":1000},{"date":1611417600000,"examCount":1000},{"date":1611504000000,"examCount":1000},{"date":1611590400000,"examCount":1000},{"date":1611676800000,"examCount":1000},{"date":1611763200000,"examCount":1000},{"date":1611849600000,"examCount":1000},{"date":1611936000000,"examCount":1000},{"date":1612022400000,"examCount":1000},{"date":1612108800000,"examCount":1000},{"date":1612195200000,"examCount":1000},{"date":1612281600000,"examCount":1000},{"date":1612368000000,"examCount":1000},{"date":1612454400000,"examCount":1000},{"date":1612540800000,"examCount":1000},{"date":1612627200000,"examCount":1000},{"date":1612713600000,"examCount":1000},{"date":1612800000000,"examCount":1000},{"date":1612886400000,"examCount":1000},{"date":1612972800000,"examCount":1000},{"date":1613059200000,"examCount":1000},{"date":1613145600000,"examCount":1000},{"date":1613232000000,"examCount":1000},{"date":1613318400000,"examCount":1000},{"date":1613404800000,"examCount":1000},{"date":1613491200000,"examCount":1000},{"date":1613577600000,"examCount":1000},{"date":1613664000000,"examCount":1000},{"date":1613750400000,"examCount":1000},{"date":1613836800000,"examCount":1000},{"date":1613923200000,"examCount":1000},{"date":1614009600000,"examCount":1000},{"date":1614096000000,"examCount":1000},{"date":1614182400000,"examCount":1000},{"date":1614268800000,"examCount":1000},{"date":1614355200000,"examCount":1000},{"date":1614441600000,"examCount":1000},{"date":1614528000000,"examCount":1000},{"date":1614614400000,"examCount":1000},{"date":1614700800000,"examCount":1000},{"date":1614787200000,"examCount":1000},{"date":1614873600000,"examCount":1000},{"date":1614960000000,"examCount":1000},{"date":1615046400000,"examCount":1000},{"date":1615132800000,"examCount":1000},{"date":1615219200000,"examCount":1000},{"date":1615305600000,"examCount":1000},{"date":1615392000000,"examCount":1000},{"date":1615478400000,"examCount":1000},{"date":1615564800000,"examCount":1000},{"date":1615651200000,"examCount":1000},{"date":1615737600000,"examCount":1000},{"date":1615824000000,"examCount":1000},{"date":1615910400000,"examCount":1000},{"date":1615996800000,"examCount":1000},{"date":1616083200000,"examCount":1000},{"date":1616169600000,"examCount":1000},{"date":1616256000000,"examCount":1000},{"date":1616342400000,"examCount":1000},{"date":1616428800000,"examCount":1000},{"date":1616515200000,"examCount":1000},{"date":1616601600000,"examCount":1000},{"date":1616688000000,"examCount":1000},{"date":1616774400000,"examCount":1000},{"date":1616860800000,"examCount":1000},{"date":1616947200000,"examCount":1000},{"date":1617033600000,"examCount":1000},{"date":1617120000000,"examCount":1000},{"date":1617206400000,"examCount":1000},{"date":1617292800000,"examCount":1000},{"date":1617379200000,"examCount":1000},{"date":1617465600000,"examCount":1000},{"date":1617552000000,"examCount":1000},{"date":1617638400000,"examCount":1000},{"date":1617724800000,"examCount":1000},{"date":1617811200000,"examCount":1000},{"date":1617897600000,"examCount":1000},{"date":1617984000000,"examCount":1000},{"date":1618070400000,"examCount":1000},{"date":1618156800000,"examCount":1000},{"date":1618243200000,"examCount":1000},{"date":1618329600000,"examCount":1000},{"date":1618416000000,"examCount":1000},{"date":1618502400000,"examCount":1000},{"date":1618588800000,"examCount":1000},{"date":1618675200000,"examCount":1000},{"date":1618761600000,"examCount":1000},{"date":1618848000000,"examCount":1000},{"date":1618934400000,"examCount":1000},{"date":1619020800000,"examCount":1000},{"date":1619107200000,"examCount":1000},{"date":1619193600000,"examCount":1000},{"date":1619280000000,"examCount":1000},{"date":1619366400000,"examCount":1000},{"date":1619452800000,"examCount":1000},{"date":1619539200000,"examCount":1000},{"date":1619625600000,"examCount":1000},{"date":1619712000000,"examCount":1000},{"date":1619798400000,"examCount":1000},{"date":1619884800000,"examCount":1000},{"date":1619971200000,"examCount":1000},{"date":1620057600000,"examCount":1000},{"date":1620144000000,"examCount":1000},{"date":1620230400000,"examCount":1000},{"date":1620316800000,"examCount":1000},{"date":1620403200000,"examCount":1000},{"date":1620489600000,"examCount":1000},{"date":1620576000000,"examCount":1000},{"date":1620662400000,"examCount":1000},{"date":1620748800000,"examCount":1000},{"date":1620835200000,"examCount":1000},{"date":1620921600000,"examCount":1000},{"date":1621008000000,"examCount":1000},{"date":1621094400000,"examCount":1000},{"date":1621180800000,"examCount":1000},{"date":1621267200000,"examCount":1000},{"date":1621353600000,"examCount":1000},{"date":1621440000000,"examCount":1000},{"date":1621526400000,"examCount":1000},{"date":1621612800000,"examCount":1000},{"date":1621699200000,"examCount":1000},{"date":1621785600000,"examCount":1000},{"date":1621872000000,"examCount":1000},{"date":1621958400000,"examCount":1000},{"date":1622044800000,"examCount":1000},{"date":1622131200000,"examCount":1000},{"date":1622217600000,"examCount":1000},{"date":1622304000000,"examCount":1000},{"date":1622390400000,"examCount":1000},{"date":1622476800000,"examCount":1000},{"date":1622563200000,"examCount":1000},{"date":1622649600000,"examCount":1000},{"date":1622736000000,"examCount":1000},{"date":1622822400000,"examCount":1000},{"date":1622908800000,"examCount":1000},{"date":1622995200000,"examCount":1000},{"date":1623081600000,"examCount":1000},{"date":1623168000000,"examCount":1000},{"date":1623254400000,"examCount":1000},{"date":1623340800000,"examCount":1000},{"date":1623427200000,"examCount":1000},{"date":1623513600000,"examCount":1000},{"date":1623600000000,"examCount":1000},{"date":1623686400000,"examCount":1000},{"date":1623772800000,"examCount":1000},{"date":1623859200000,"examCount":1000},{"date":1623945600000,"examCount":1000},{"date":1624032000000,"examCount":1000},{"date":1624118400000,"examCount":1000},{"date":1624204800000,"examCount":1000},{"date":1624291200000,"examCount":1000},{"date":1624377600000,"examCount":1000},{"date":1624464000000,"examCount":1000},{"date":1624550400000,"examCount":1000},{"date":1624636800000,"examCount":1000},{"date":1624723200000,"examCount":1000},{"date":1624809600000,"examCount":1000},{"date":1624896000000,"examCount":1000},{"date":1624982400000,"examCount":1000},{"date":1625068800000,"examCount":1000},{"date":1625155200000,"examCount":1000},{"date":1625241600000,"examCount":1000},{"date":1625328000000,"examCount":1000},{"date":1625414400000,"examCount":1000},{"date":1625500800000,"examCount":1000},{"date":1625587200000,"examCount":1000},{"date":1625673600000,"examCount":1000},{"date":1625760000000,"examCount":1000},{"date":1625846400000,"examCount":1000},{"date":1625932800000,"examCount":1000},{"date":1626019200000,"examCount":1000},{"date":1626105600000,"examCount":1000},{"date":1626192000000,"examCount":1000},{"date":1626278400000,"examCount":1000},{"date":1626364800000,"examCount":1000},{"date":1626451200000,"examCount":1000},{"date":1626537600000,"examCount":1000},{"date":1626624000000,"examCount":1000},{"date":1626710400000,"examCount":1000},{"date":1626796800000,"examCount":1000},{"date":1626883200000,"examCount":1000},{"date":1626969600000,"examCount":1000},{"date":1627056000000,"examCount":1000},{"date":1627142400000,"examCount":1000},{"date":1627228800000,"examCount":1000},{"date":1627315200000,"examCount":1000},{"date":1627401600000,"examCount":1000},{"date":1627488000000,"examCount":1000},{"date":1627574400000,"examCount":1000},{"date":1627660800000,"examCount":1000},{"date":1627747200000,"examCount":1000},{"date":1627833600000,"examCount":1000},{"date":1627920000000,"examCount":1000},{"date":1628006400000,"examCount":1000},{"date":1628092800000,"examCount":1000},{"date":1628179200000,"examCount":1000},{"date":1628265600000,"examCount":1000},{"date":1628352000000,"examCount":1000},{"date":1628438400000,"examCount":1000},{"date":1628524800000,"examCount":1000},{"date":1628611200000,"examCount":1000},{"date":1628697600000,"examCount":1000},{"date":1628784000000,"examCount":1000},{"date":1628870400000,"examCount":1000},{"date":1628956800000,"examCount":1000},{"date":1629043200000,"examCount":1000},{"date":1629129600000,"examCount":1000},{"date":1629216000000,"examCount":1000},{"date":1629302400000,"examCount":1000},{"date":1629388800000,"examCount":1000},{"date":1629475200000,"examCount":1000},{"date":1629561600000,"examCount":1000},{"date":1629648000000,"examCount":1000},{"date":1629734400000,"examCount":1000},{"date":1629820800000,"examCount":1000},{"date":1629907200000,"examCount":1000},{"date":1629993600000,"examCount":1000},{"date":1630080000000,"examCount":1000},{"date":1630166400000,"examCount":1000},{"date":1630252800000,"examCount":1000},{"date":1630339200000,"examCount":1000},{"date":1630425600000,"examCount":1000},{"date":1630512000000,"examCount":1000},{"date":1630598400000,"examCount":1000},{"date":1630684800000,"examCount":1000},{"date":1630771200000,"examCount":1000},{"date":1630857600000,"examCount":1000},{"date":1630944000000,"examCount":1000},{"date":1631030400000,"examCount":1000},{"date":1631116800000,"examCount":1000},{"date":1631203200000,"examCount":1000},{"date":1631289600000,"examCount":1000},{"date":1631376000000,"examCount":1000},{"date":1631462400000,"examCount":1000},{"date":1631548800000,"examCount":1000},{"date":1631635200000,"examCount":1000},{"date":1631721600000,"examCount":1000},{"date":1631808000000,"examCount":1000},{"date":1631894400000,"examCount":1000},{"date":1631980800000,"examCount":1000},{"date":1632067200000,"examCount":1000},{"date":1632153600000,"examCount":1000},{"date":1632240000000,"examCount":1000},{"date":1632326400000,"examCount":1000},{"date":1632412800000,"examCount":1000},{"date":1632499200000,"examCount":1000},{"date":1632585600000,"examCount":1000},{"date":1632672000000,"examCount":1000},{"date":1632758400000,"examCount":1000},{"date":1632844800000,"examCount":1000},{"date":1632931200000,"examCount":1000},{"date":1633017600000,"examCount":1000},{"date":1633104000000,"examCount":1000},{"date":1633190400000,"examCount":1000},{"date":1633276800000,"examCount":1000},{"date":1633363200000,"examCount":1000},{"date":1633449600000,"examCount":1000},{"date":1633536000000,"examCount":1000},{"date":1633622400000,"examCount":1000},{"date":1633708800000,"examCount":1000},{"date":1633795200000,"examCount":1000},{"date":1633881600000,"examCount":1000},{"date":1633968000000,"examCount":1000},{"date":1634054400000,"examCount":1000},{"date":1634140800000,"examCount":1000},{"date":1634227200000,"examCount":1000},{"date":1634313600000,"examCount":1000},{"date":1634400000000,"examCount":1000},{"date":1634486400000,"examCount":1000},{"date":1634572800000,"examCount":1000},{"date":1634659200000,"examCount":1000},{"date":1634745600000,"examCount":1000},{"date":1634832000000,"examCount":1000},{"date":1634918400000,"examCount":1000},{"date":1635004800000,"examCount":1000},{"date":1635091200000,"examCount":1000},{"date":1635177600000,"examCount":1000},{"date":1635264000000,"examCount":1000},{"date":1635350400000,"examCount":1000},{"date":1635436800000,"examCount":1000},{"date":1635523200000,"examCount":1000},{"date":1635609600000,"examCount":1000},{"date":1635696000000,"examCount":1000},{"date":1635782400000,"examCount":1000},{"date":1635868800000,"examCount":1000},{"date":1635955200000,"examCount":1000},{"date":1636041600000,"examCount":1000},{"date":1636128000000,"examCount":1000},{"date":1636214400000,"examCount":1000},{"date":1636300800000,"examCount":1000},{"date":1636387200000,"examCount":1000},{"date":1636473600000,"examCount":1000}]', 'deadlineTimeStamp': None, 'deadlineTimeStr': None, 'employeesProvided': 1, 'enableSyncHos': 1, 'examEndTimeStamp': 1636473600000, 'examEndTimeStr': '2021-11-10', 'examStartTimeStamp': 1605024000000, 'examStartTimeStr': '2020-11-11', 'isExpired': 0, 'issuedCount': 1, 'notIssuedCount': 0, 'optimisticLockId': '2695', 'optimisticLockVersion': 1609120031000, 'showEnableSyncHos': 1, 'unGroupedCount': 0}, 'success': True}
2020-12-28 09:47:13,111-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120031000,时间戳id:2695
2020-12-28 09:47:13,112-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:47:13,221-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.343887s
2020-12-28 09:47:13,223-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:47:13,225-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.343887, 'data': None, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:47:14,171-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:14,172-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:14,174-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:14,175-[INFO]-logger.py-Unit_test-日志信息:正在执行第28条用例:【单位体检】3-时间戳不一致-分组与人员-保存和更新分组信息-用户a页面1保存-成功
2020-12-28 09:47:14,176-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/card/v3/group/save；method：POST；data：{"list":[{"addFeeitemDiscount":"1","addFeeitemIds":"","addFeeitems":[],"ageMax":"","ageMin":"","batchId":2695,"cardFamilySuiteExtendDoList":[],"cardType":3,"cardValue":1,"companyId":2734,"editable":0,"enableRecommendSurvey":1,"examinationPassword":"","gender":2,"groupName":"空白分组","itemType":1,"married":2,"mutualExclusion":"0","optionalItemsBos":[],"optionalPkgsBos":[],"packageName":"团检女","reserveCardId":3370,"selfDiscount":"1","stationId":"HL99998","suitId":14610,"upgradePkgBos":[],"agePros":2,"selFamilyIds":[]}]}；sql：{}
2020-12-28 09:47:14,178-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:14,242-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:14,243-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:14,269-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:14,271-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:14,299-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:14,300-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:14,334-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:14,338-[INFO]-logger.py-all_method-日志信息:批次信息详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/card/v3/batch/2695
2020-12-28 09:47:14,422-[INFO]-logger.py-all_method-日志信息:批次信息详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'auditOpenSync': 1, 'batchId': 2695, 'batchName': '基础体检女', 'batchProcess': 4, 'batchTimeAppointStatus': 0, 'bindTypes': '1', 'createTimeStamp': 1605098979000, 'dateJson': '[{"date":1605024000000,"examCount":1000},{"date":1605110400000,"examCount":1000},{"date":1605196800000,"examCount":1000},{"date":1605283200000,"examCount":1000},{"date":1605369600000,"examCount":1000},{"date":1605456000000,"examCount":1000},{"date":1605542400000,"examCount":1000},{"date":1605628800000,"examCount":1000},{"date":1605715200000,"examCount":1000},{"date":1605801600000,"examCount":1000},{"date":1605888000000,"examCount":1000},{"date":1605974400000,"examCount":1000},{"date":1606060800000,"examCount":1000},{"date":1606147200000,"examCount":1000},{"date":1606233600000,"examCount":1000},{"date":1606320000000,"examCount":1000},{"date":1606406400000,"examCount":1000},{"date":1606492800000,"examCount":1000},{"date":1606579200000,"examCount":1000},{"date":1606665600000,"examCount":1000},{"date":1606752000000,"examCount":1000},{"date":1606838400000,"examCount":1000},{"date":1606924800000,"examCount":1000},{"date":1607011200000,"examCount":1000},{"date":1607097600000,"examCount":1000},{"date":1607184000000,"examCount":1000},{"date":1607270400000,"examCount":1000},{"date":1607356800000,"examCount":1000},{"date":1607443200000,"examCount":1000},{"date":1607529600000,"examCount":1000},{"date":1607616000000,"examCount":1000},{"date":1607702400000,"examCount":1000},{"date":1607788800000,"examCount":1000},{"date":1607875200000,"examCount":1000},{"date":1607961600000,"examCount":1000},{"date":1608048000000,"examCount":1000},{"date":1608134400000,"examCount":1000},{"date":1608220800000,"examCount":1000},{"date":1608307200000,"examCount":1000},{"date":1608393600000,"examCount":1000},{"date":1608480000000,"examCount":1000},{"date":1608566400000,"examCount":1000},{"date":1608652800000,"examCount":1000},{"date":1608739200000,"examCount":1000},{"date":1608825600000,"examCount":1000},{"date":1608912000000,"examCount":1000},{"date":1608998400000,"examCount":1000},{"date":1609084800000,"examCount":1000},{"date":1609171200000,"examCount":1000},{"date":1609257600000,"examCount":1000},{"date":1609344000000,"examCount":1000},{"date":1609430400000,"examCount":1000},{"date":1609516800000,"examCount":1000},{"date":1609603200000,"examCount":1000},{"date":1609689600000,"examCount":1000},{"date":1609776000000,"examCount":1000},{"date":1609862400000,"examCount":1000},{"date":1609948800000,"examCount":1000},{"date":1610035200000,"examCount":1000},{"date":1610121600000,"examCount":1000},{"date":1610208000000,"examCount":1000},{"date":1610294400000,"examCount":1000},{"date":1610380800000,"examCount":1000},{"date":1610467200000,"examCount":1000},{"date":1610553600000,"examCount":1000},{"date":1610640000000,"examCount":1000},{"date":1610726400000,"examCount":1000},{"date":1610812800000,"examCount":1000},{"date":1610899200000,"examCount":1000},{"date":1610985600000,"examCount":1000},{"date":1611072000000,"examCount":1000},{"date":1611158400000,"examCount":1000},{"date":1611244800000,"examCount":1000},{"date":1611331200000,"examCount":1000},{"date":1611417600000,"examCount":1000},{"date":1611504000000,"examCount":1000},{"date":1611590400000,"examCount":1000},{"date":1611676800000,"examCount":1000},{"date":1611763200000,"examCount":1000},{"date":1611849600000,"examCount":1000},{"date":1611936000000,"examCount":1000},{"date":1612022400000,"examCount":1000},{"date":1612108800000,"examCount":1000},{"date":1612195200000,"examCount":1000},{"date":1612281600000,"examCount":1000},{"date":1612368000000,"examCount":1000},{"date":1612454400000,"examCount":1000},{"date":1612540800000,"examCount":1000},{"date":1612627200000,"examCount":1000},{"date":1612713600000,"examCount":1000},{"date":1612800000000,"examCount":1000},{"date":1612886400000,"examCount":1000},{"date":1612972800000,"examCount":1000},{"date":1613059200000,"examCount":1000},{"date":1613145600000,"examCount":1000},{"date":1613232000000,"examCount":1000},{"date":1613318400000,"examCount":1000},{"date":1613404800000,"examCount":1000},{"date":1613491200000,"examCount":1000},{"date":1613577600000,"examCount":1000},{"date":1613664000000,"examCount":1000},{"date":1613750400000,"examCount":1000},{"date":1613836800000,"examCount":1000},{"date":1613923200000,"examCount":1000},{"date":1614009600000,"examCount":1000},{"date":1614096000000,"examCount":1000},{"date":1614182400000,"examCount":1000},{"date":1614268800000,"examCount":1000},{"date":1614355200000,"examCount":1000},{"date":1614441600000,"examCount":1000},{"date":1614528000000,"examCount":1000},{"date":1614614400000,"examCount":1000},{"date":1614700800000,"examCount":1000},{"date":1614787200000,"examCount":1000},{"date":1614873600000,"examCount":1000},{"date":1614960000000,"examCount":1000},{"date":1615046400000,"examCount":1000},{"date":1615132800000,"examCount":1000},{"date":1615219200000,"examCount":1000},{"date":1615305600000,"examCount":1000},{"date":1615392000000,"examCount":1000},{"date":1615478400000,"examCount":1000},{"date":1615564800000,"examCount":1000},{"date":1615651200000,"examCount":1000},{"date":1615737600000,"examCount":1000},{"date":1615824000000,"examCount":1000},{"date":1615910400000,"examCount":1000},{"date":1615996800000,"examCount":1000},{"date":1616083200000,"examCount":1000},{"date":1616169600000,"examCount":1000},{"date":1616256000000,"examCount":1000},{"date":1616342400000,"examCount":1000},{"date":1616428800000,"examCount":1000},{"date":1616515200000,"examCount":1000},{"date":1616601600000,"examCount":1000},{"date":1616688000000,"examCount":1000},{"date":1616774400000,"examCount":1000},{"date":1616860800000,"examCount":1000},{"date":1616947200000,"examCount":1000},{"date":1617033600000,"examCount":1000},{"date":1617120000000,"examCount":1000},{"date":1617206400000,"examCount":1000},{"date":1617292800000,"examCount":1000},{"date":1617379200000,"examCount":1000},{"date":1617465600000,"examCount":1000},{"date":1617552000000,"examCount":1000},{"date":1617638400000,"examCount":1000},{"date":1617724800000,"examCount":1000},{"date":1617811200000,"examCount":1000},{"date":1617897600000,"examCount":1000},{"date":1617984000000,"examCount":1000},{"date":1618070400000,"examCount":1000},{"date":1618156800000,"examCount":1000},{"date":1618243200000,"examCount":1000},{"date":1618329600000,"examCount":1000},{"date":1618416000000,"examCount":1000},{"date":1618502400000,"examCount":1000},{"date":1618588800000,"examCount":1000},{"date":1618675200000,"examCount":1000},{"date":1618761600000,"examCount":1000},{"date":1618848000000,"examCount":1000},{"date":1618934400000,"examCount":1000},{"date":1619020800000,"examCount":1000},{"date":1619107200000,"examCount":1000},{"date":1619193600000,"examCount":1000},{"date":1619280000000,"examCount":1000},{"date":1619366400000,"examCount":1000},{"date":1619452800000,"examCount":1000},{"date":1619539200000,"examCount":1000},{"date":1619625600000,"examCount":1000},{"date":1619712000000,"examCount":1000},{"date":1619798400000,"examCount":1000},{"date":1619884800000,"examCount":1000},{"date":1619971200000,"examCount":1000},{"date":1620057600000,"examCount":1000},{"date":1620144000000,"examCount":1000},{"date":1620230400000,"examCount":1000},{"date":1620316800000,"examCount":1000},{"date":1620403200000,"examCount":1000},{"date":1620489600000,"examCount":1000},{"date":1620576000000,"examCount":1000},{"date":1620662400000,"examCount":1000},{"date":1620748800000,"examCount":1000},{"date":1620835200000,"examCount":1000},{"date":1620921600000,"examCount":1000},{"date":1621008000000,"examCount":1000},{"date":1621094400000,"examCount":1000},{"date":1621180800000,"examCount":1000},{"date":1621267200000,"examCount":1000},{"date":1621353600000,"examCount":1000},{"date":1621440000000,"examCount":1000},{"date":1621526400000,"examCount":1000},{"date":1621612800000,"examCount":1000},{"date":1621699200000,"examCount":1000},{"date":1621785600000,"examCount":1000},{"date":1621872000000,"examCount":1000},{"date":1621958400000,"examCount":1000},{"date":1622044800000,"examCount":1000},{"date":1622131200000,"examCount":1000},{"date":1622217600000,"examCount":1000},{"date":1622304000000,"examCount":1000},{"date":1622390400000,"examCount":1000},{"date":1622476800000,"examCount":1000},{"date":1622563200000,"examCount":1000},{"date":1622649600000,"examCount":1000},{"date":1622736000000,"examCount":1000},{"date":1622822400000,"examCount":1000},{"date":1622908800000,"examCount":1000},{"date":1622995200000,"examCount":1000},{"date":1623081600000,"examCount":1000},{"date":1623168000000,"examCount":1000},{"date":1623254400000,"examCount":1000},{"date":1623340800000,"examCount":1000},{"date":1623427200000,"examCount":1000},{"date":1623513600000,"examCount":1000},{"date":1623600000000,"examCount":1000},{"date":1623686400000,"examCount":1000},{"date":1623772800000,"examCount":1000},{"date":1623859200000,"examCount":1000},{"date":1623945600000,"examCount":1000},{"date":1624032000000,"examCount":1000},{"date":1624118400000,"examCount":1000},{"date":1624204800000,"examCount":1000},{"date":1624291200000,"examCount":1000},{"date":1624377600000,"examCount":1000},{"date":1624464000000,"examCount":1000},{"date":1624550400000,"examCount":1000},{"date":1624636800000,"examCount":1000},{"date":1624723200000,"examCount":1000},{"date":1624809600000,"examCount":1000},{"date":1624896000000,"examCount":1000},{"date":1624982400000,"examCount":1000},{"date":1625068800000,"examCount":1000},{"date":1625155200000,"examCount":1000},{"date":1625241600000,"examCount":1000},{"date":1625328000000,"examCount":1000},{"date":1625414400000,"examCount":1000},{"date":1625500800000,"examCount":1000},{"date":1625587200000,"examCount":1000},{"date":1625673600000,"examCount":1000},{"date":1625760000000,"examCount":1000},{"date":1625846400000,"examCount":1000},{"date":1625932800000,"examCount":1000},{"date":1626019200000,"examCount":1000},{"date":1626105600000,"examCount":1000},{"date":1626192000000,"examCount":1000},{"date":1626278400000,"examCount":1000},{"date":1626364800000,"examCount":1000},{"date":1626451200000,"examCount":1000},{"date":1626537600000,"examCount":1000},{"date":1626624000000,"examCount":1000},{"date":1626710400000,"examCount":1000},{"date":1626796800000,"examCount":1000},{"date":1626883200000,"examCount":1000},{"date":1626969600000,"examCount":1000},{"date":1627056000000,"examCount":1000},{"date":1627142400000,"examCount":1000},{"date":1627228800000,"examCount":1000},{"date":1627315200000,"examCount":1000},{"date":1627401600000,"examCount":1000},{"date":1627488000000,"examCount":1000},{"date":1627574400000,"examCount":1000},{"date":1627660800000,"examCount":1000},{"date":1627747200000,"examCount":1000},{"date":1627833600000,"examCount":1000},{"date":1627920000000,"examCount":1000},{"date":1628006400000,"examCount":1000},{"date":1628092800000,"examCount":1000},{"date":1628179200000,"examCount":1000},{"date":1628265600000,"examCount":1000},{"date":1628352000000,"examCount":1000},{"date":1628438400000,"examCount":1000},{"date":1628524800000,"examCount":1000},{"date":1628611200000,"examCount":1000},{"date":1628697600000,"examCount":1000},{"date":1628784000000,"examCount":1000},{"date":1628870400000,"examCount":1000},{"date":1628956800000,"examCount":1000},{"date":1629043200000,"examCount":1000},{"date":1629129600000,"examCount":1000},{"date":1629216000000,"examCount":1000},{"date":1629302400000,"examCount":1000},{"date":1629388800000,"examCount":1000},{"date":1629475200000,"examCount":1000},{"date":1629561600000,"examCount":1000},{"date":1629648000000,"examCount":1000},{"date":1629734400000,"examCount":1000},{"date":1629820800000,"examCount":1000},{"date":1629907200000,"examCount":1000},{"date":1629993600000,"examCount":1000},{"date":1630080000000,"examCount":1000},{"date":1630166400000,"examCount":1000},{"date":1630252800000,"examCount":1000},{"date":1630339200000,"examCount":1000},{"date":1630425600000,"examCount":1000},{"date":1630512000000,"examCount":1000},{"date":1630598400000,"examCount":1000},{"date":1630684800000,"examCount":1000},{"date":1630771200000,"examCount":1000},{"date":1630857600000,"examCount":1000},{"date":1630944000000,"examCount":1000},{"date":1631030400000,"examCount":1000},{"date":1631116800000,"examCount":1000},{"date":1631203200000,"examCount":1000},{"date":1631289600000,"examCount":1000},{"date":1631376000000,"examCount":1000},{"date":1631462400000,"examCount":1000},{"date":1631548800000,"examCount":1000},{"date":1631635200000,"examCount":1000},{"date":1631721600000,"examCount":1000},{"date":1631808000000,"examCount":1000},{"date":1631894400000,"examCount":1000},{"date":1631980800000,"examCount":1000},{"date":1632067200000,"examCount":1000},{"date":1632153600000,"examCount":1000},{"date":1632240000000,"examCount":1000},{"date":1632326400000,"examCount":1000},{"date":1632412800000,"examCount":1000},{"date":1632499200000,"examCount":1000},{"date":1632585600000,"examCount":1000},{"date":1632672000000,"examCount":1000},{"date":1632758400000,"examCount":1000},{"date":1632844800000,"examCount":1000},{"date":1632931200000,"examCount":1000},{"date":1633017600000,"examCount":1000},{"date":1633104000000,"examCount":1000},{"date":1633190400000,"examCount":1000},{"date":1633276800000,"examCount":1000},{"date":1633363200000,"examCount":1000},{"date":1633449600000,"examCount":1000},{"date":1633536000000,"examCount":1000},{"date":1633622400000,"examCount":1000},{"date":1633708800000,"examCount":1000},{"date":1633795200000,"examCount":1000},{"date":1633881600000,"examCount":1000},{"date":1633968000000,"examCount":1000},{"date":1634054400000,"examCount":1000},{"date":1634140800000,"examCount":1000},{"date":1634227200000,"examCount":1000},{"date":1634313600000,"examCount":1000},{"date":1634400000000,"examCount":1000},{"date":1634486400000,"examCount":1000},{"date":1634572800000,"examCount":1000},{"date":1634659200000,"examCount":1000},{"date":1634745600000,"examCount":1000},{"date":1634832000000,"examCount":1000},{"date":1634918400000,"examCount":1000},{"date":1635004800000,"examCount":1000},{"date":1635091200000,"examCount":1000},{"date":1635177600000,"examCount":1000},{"date":1635264000000,"examCount":1000},{"date":1635350400000,"examCount":1000},{"date":1635436800000,"examCount":1000},{"date":1635523200000,"examCount":1000},{"date":1635609600000,"examCount":1000},{"date":1635696000000,"examCount":1000},{"date":1635782400000,"examCount":1000},{"date":1635868800000,"examCount":1000},{"date":1635955200000,"examCount":1000},{"date":1636041600000,"examCount":1000},{"date":1636128000000,"examCount":1000},{"date":1636214400000,"examCount":1000},{"date":1636300800000,"examCount":1000},{"date":1636387200000,"examCount":1000},{"date":1636473600000,"examCount":1000}]', 'deadlineTimeStamp': None, 'deadlineTimeStr': None, 'employeesProvided': 1, 'enableSyncHos': 1, 'examEndTimeStamp': 1636473600000, 'examEndTimeStr': '2021-11-10', 'examStartTimeStamp': 1605024000000, 'examStartTimeStr': '2020-11-11', 'isExpired': 0, 'issuedCount': 1, 'notIssuedCount': 0, 'optimisticLockId': '2695', 'optimisticLockVersion': 1609120033000, 'showEnableSyncHos': 1, 'unGroupedCount': 0}, 'success': True}
2020-12-28 09:47:14,432-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120033000,时间戳id:2695
2020-12-28 09:47:14,434-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:47:14,539-[INFO]-logger.py-httpRequest-日志信息:第一次保存headers：{'optimisticLockVersion': '1609120033000', 'optimisticLockId': '2695', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '0', 'errorMsg': '', 'result': None, 'success': True}
2020-12-28 09:47:14,584-[INFO]-logger.py-httpRequest-日志信息:第二次保存headers：{'optimisticLockVersion': '1609120033000', 'optimisticLockId': '2695', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '20289', 'errorMsg': '该项数据已被修改，请刷新后重试！', 'result': None, 'success': False}
2020-12-28 09:47:14,586-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.408766s
2020-12-28 09:47:14,587-[INFO]-logger.py-Unit_test-日志信息:接口返回message:该项数据已被修改，请刷新后重试！
2020-12-28 09:47:14,589-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20289
2020-12-28 09:47:14,590-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.408766, 'data': '该项数据已被修改，请刷新后重试！', 'code': '20289', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:47:15,505-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:15,506-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:15,508-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:15,509-[INFO]-logger.py-Unit_test-日志信息:正在执行第29条用例:【单位体检】4-时间戳不一致-分组与人员-保存和更新分组信息-用户a页面1保存-成功
2020-12-28 09:47:15,510-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/card/v3/group/save；method：POST；data：{"list":[{"addFeeitemDiscount":"1","addFeeitemIds":"","addFeeitems":[],"ageMax":"","ageMin":"","batchId":2695,"cardFamilySuiteExtendDoList":[],"cardType":3,"cardValue":1,"companyId":2734,"editable":0,"enableRecommendSurvey":1,"examinationPassword":"","gender":2,"groupName":"空白分组","itemType":1,"married":2,"mutualExclusion":"0","optionalItemsBos":[],"optionalPkgsBos":[],"packageName":"团检女","reserveCardId":3370,"selfDiscount":"1","stationId":"HL99998","suitId":14610,"upgradePkgBos":[],"agePros":2,"selFamilyIds":[]}]}；sql：{}
2020-12-28 09:47:15,513-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:15,562-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:15,565-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:15,602-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:15,606-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:15,669-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:15,671-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:15,694-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:15,697-[INFO]-logger.py-all_method-日志信息:批次信息详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/card/v3/batch/2695
2020-12-28 09:47:15,777-[INFO]-logger.py-all_method-日志信息:批次信息详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'auditOpenSync': 1, 'batchId': 2695, 'batchName': '基础体检女', 'batchProcess': 4, 'batchTimeAppointStatus': 0, 'bindTypes': '1', 'createTimeStamp': 1605098979000, 'dateJson': '[{"date":1605024000000,"examCount":1000},{"date":1605110400000,"examCount":1000},{"date":1605196800000,"examCount":1000},{"date":1605283200000,"examCount":1000},{"date":1605369600000,"examCount":1000},{"date":1605456000000,"examCount":1000},{"date":1605542400000,"examCount":1000},{"date":1605628800000,"examCount":1000},{"date":1605715200000,"examCount":1000},{"date":1605801600000,"examCount":1000},{"date":1605888000000,"examCount":1000},{"date":1605974400000,"examCount":1000},{"date":1606060800000,"examCount":1000},{"date":1606147200000,"examCount":1000},{"date":1606233600000,"examCount":1000},{"date":1606320000000,"examCount":1000},{"date":1606406400000,"examCount":1000},{"date":1606492800000,"examCount":1000},{"date":1606579200000,"examCount":1000},{"date":1606665600000,"examCount":1000},{"date":1606752000000,"examCount":1000},{"date":1606838400000,"examCount":1000},{"date":1606924800000,"examCount":1000},{"date":1607011200000,"examCount":1000},{"date":1607097600000,"examCount":1000},{"date":1607184000000,"examCount":1000},{"date":1607270400000,"examCount":1000},{"date":1607356800000,"examCount":1000},{"date":1607443200000,"examCount":1000},{"date":1607529600000,"examCount":1000},{"date":1607616000000,"examCount":1000},{"date":1607702400000,"examCount":1000},{"date":1607788800000,"examCount":1000},{"date":1607875200000,"examCount":1000},{"date":1607961600000,"examCount":1000},{"date":1608048000000,"examCount":1000},{"date":1608134400000,"examCount":1000},{"date":1608220800000,"examCount":1000},{"date":1608307200000,"examCount":1000},{"date":1608393600000,"examCount":1000},{"date":1608480000000,"examCount":1000},{"date":1608566400000,"examCount":1000},{"date":1608652800000,"examCount":1000},{"date":1608739200000,"examCount":1000},{"date":1608825600000,"examCount":1000},{"date":1608912000000,"examCount":1000},{"date":1608998400000,"examCount":1000},{"date":1609084800000,"examCount":1000},{"date":1609171200000,"examCount":1000},{"date":1609257600000,"examCount":1000},{"date":1609344000000,"examCount":1000},{"date":1609430400000,"examCount":1000},{"date":1609516800000,"examCount":1000},{"date":1609603200000,"examCount":1000},{"date":1609689600000,"examCount":1000},{"date":1609776000000,"examCount":1000},{"date":1609862400000,"examCount":1000},{"date":1609948800000,"examCount":1000},{"date":1610035200000,"examCount":1000},{"date":1610121600000,"examCount":1000},{"date":1610208000000,"examCount":1000},{"date":1610294400000,"examCount":1000},{"date":1610380800000,"examCount":1000},{"date":1610467200000,"examCount":1000},{"date":1610553600000,"examCount":1000},{"date":1610640000000,"examCount":1000},{"date":1610726400000,"examCount":1000},{"date":1610812800000,"examCount":1000},{"date":1610899200000,"examCount":1000},{"date":1610985600000,"examCount":1000},{"date":1611072000000,"examCount":1000},{"date":1611158400000,"examCount":1000},{"date":1611244800000,"examCount":1000},{"date":1611331200000,"examCount":1000},{"date":1611417600000,"examCount":1000},{"date":1611504000000,"examCount":1000},{"date":1611590400000,"examCount":1000},{"date":1611676800000,"examCount":1000},{"date":1611763200000,"examCount":1000},{"date":1611849600000,"examCount":1000},{"date":1611936000000,"examCount":1000},{"date":1612022400000,"examCount":1000},{"date":1612108800000,"examCount":1000},{"date":1612195200000,"examCount":1000},{"date":1612281600000,"examCount":1000},{"date":1612368000000,"examCount":1000},{"date":1612454400000,"examCount":1000},{"date":1612540800000,"examCount":1000},{"date":1612627200000,"examCount":1000},{"date":1612713600000,"examCount":1000},{"date":1612800000000,"examCount":1000},{"date":1612886400000,"examCount":1000},{"date":1612972800000,"examCount":1000},{"date":1613059200000,"examCount":1000},{"date":1613145600000,"examCount":1000},{"date":1613232000000,"examCount":1000},{"date":1613318400000,"examCount":1000},{"date":1613404800000,"examCount":1000},{"date":1613491200000,"examCount":1000},{"date":1613577600000,"examCount":1000},{"date":1613664000000,"examCount":1000},{"date":1613750400000,"examCount":1000},{"date":1613836800000,"examCount":1000},{"date":1613923200000,"examCount":1000},{"date":1614009600000,"examCount":1000},{"date":1614096000000,"examCount":1000},{"date":1614182400000,"examCount":1000},{"date":1614268800000,"examCount":1000},{"date":1614355200000,"examCount":1000},{"date":1614441600000,"examCount":1000},{"date":1614528000000,"examCount":1000},{"date":1614614400000,"examCount":1000},{"date":1614700800000,"examCount":1000},{"date":1614787200000,"examCount":1000},{"date":1614873600000,"examCount":1000},{"date":1614960000000,"examCount":1000},{"date":1615046400000,"examCount":1000},{"date":1615132800000,"examCount":1000},{"date":1615219200000,"examCount":1000},{"date":1615305600000,"examCount":1000},{"date":1615392000000,"examCount":1000},{"date":1615478400000,"examCount":1000},{"date":1615564800000,"examCount":1000},{"date":1615651200000,"examCount":1000},{"date":1615737600000,"examCount":1000},{"date":1615824000000,"examCount":1000},{"date":1615910400000,"examCount":1000},{"date":1615996800000,"examCount":1000},{"date":1616083200000,"examCount":1000},{"date":1616169600000,"examCount":1000},{"date":1616256000000,"examCount":1000},{"date":1616342400000,"examCount":1000},{"date":1616428800000,"examCount":1000},{"date":1616515200000,"examCount":1000},{"date":1616601600000,"examCount":1000},{"date":1616688000000,"examCount":1000},{"date":1616774400000,"examCount":1000},{"date":1616860800000,"examCount":1000},{"date":1616947200000,"examCount":1000},{"date":1617033600000,"examCount":1000},{"date":1617120000000,"examCount":1000},{"date":1617206400000,"examCount":1000},{"date":1617292800000,"examCount":1000},{"date":1617379200000,"examCount":1000},{"date":1617465600000,"examCount":1000},{"date":1617552000000,"examCount":1000},{"date":1617638400000,"examCount":1000},{"date":1617724800000,"examCount":1000},{"date":1617811200000,"examCount":1000},{"date":1617897600000,"examCount":1000},{"date":1617984000000,"examCount":1000},{"date":1618070400000,"examCount":1000},{"date":1618156800000,"examCount":1000},{"date":1618243200000,"examCount":1000},{"date":1618329600000,"examCount":1000},{"date":1618416000000,"examCount":1000},{"date":1618502400000,"examCount":1000},{"date":1618588800000,"examCount":1000},{"date":1618675200000,"examCount":1000},{"date":1618761600000,"examCount":1000},{"date":1618848000000,"examCount":1000},{"date":1618934400000,"examCount":1000},{"date":1619020800000,"examCount":1000},{"date":1619107200000,"examCount":1000},{"date":1619193600000,"examCount":1000},{"date":1619280000000,"examCount":1000},{"date":1619366400000,"examCount":1000},{"date":1619452800000,"examCount":1000},{"date":1619539200000,"examCount":1000},{"date":1619625600000,"examCount":1000},{"date":1619712000000,"examCount":1000},{"date":1619798400000,"examCount":1000},{"date":1619884800000,"examCount":1000},{"date":1619971200000,"examCount":1000},{"date":1620057600000,"examCount":1000},{"date":1620144000000,"examCount":1000},{"date":1620230400000,"examCount":1000},{"date":1620316800000,"examCount":1000},{"date":1620403200000,"examCount":1000},{"date":1620489600000,"examCount":1000},{"date":1620576000000,"examCount":1000},{"date":1620662400000,"examCount":1000},{"date":1620748800000,"examCount":1000},{"date":1620835200000,"examCount":1000},{"date":1620921600000,"examCount":1000},{"date":1621008000000,"examCount":1000},{"date":1621094400000,"examCount":1000},{"date":1621180800000,"examCount":1000},{"date":1621267200000,"examCount":1000},{"date":1621353600000,"examCount":1000},{"date":1621440000000,"examCount":1000},{"date":1621526400000,"examCount":1000},{"date":1621612800000,"examCount":1000},{"date":1621699200000,"examCount":1000},{"date":1621785600000,"examCount":1000},{"date":1621872000000,"examCount":1000},{"date":1621958400000,"examCount":1000},{"date":1622044800000,"examCount":1000},{"date":1622131200000,"examCount":1000},{"date":1622217600000,"examCount":1000},{"date":1622304000000,"examCount":1000},{"date":1622390400000,"examCount":1000},{"date":1622476800000,"examCount":1000},{"date":1622563200000,"examCount":1000},{"date":1622649600000,"examCount":1000},{"date":1622736000000,"examCount":1000},{"date":1622822400000,"examCount":1000},{"date":1622908800000,"examCount":1000},{"date":1622995200000,"examCount":1000},{"date":1623081600000,"examCount":1000},{"date":1623168000000,"examCount":1000},{"date":1623254400000,"examCount":1000},{"date":1623340800000,"examCount":1000},{"date":1623427200000,"examCount":1000},{"date":1623513600000,"examCount":1000},{"date":1623600000000,"examCount":1000},{"date":1623686400000,"examCount":1000},{"date":1623772800000,"examCount":1000},{"date":1623859200000,"examCount":1000},{"date":1623945600000,"examCount":1000},{"date":1624032000000,"examCount":1000},{"date":1624118400000,"examCount":1000},{"date":1624204800000,"examCount":1000},{"date":1624291200000,"examCount":1000},{"date":1624377600000,"examCount":1000},{"date":1624464000000,"examCount":1000},{"date":1624550400000,"examCount":1000},{"date":1624636800000,"examCount":1000},{"date":1624723200000,"examCount":1000},{"date":1624809600000,"examCount":1000},{"date":1624896000000,"examCount":1000},{"date":1624982400000,"examCount":1000},{"date":1625068800000,"examCount":1000},{"date":1625155200000,"examCount":1000},{"date":1625241600000,"examCount":1000},{"date":1625328000000,"examCount":1000},{"date":1625414400000,"examCount":1000},{"date":1625500800000,"examCount":1000},{"date":1625587200000,"examCount":1000},{"date":1625673600000,"examCount":1000},{"date":1625760000000,"examCount":1000},{"date":1625846400000,"examCount":1000},{"date":1625932800000,"examCount":1000},{"date":1626019200000,"examCount":1000},{"date":1626105600000,"examCount":1000},{"date":1626192000000,"examCount":1000},{"date":1626278400000,"examCount":1000},{"date":1626364800000,"examCount":1000},{"date":1626451200000,"examCount":1000},{"date":1626537600000,"examCount":1000},{"date":1626624000000,"examCount":1000},{"date":1626710400000,"examCount":1000},{"date":1626796800000,"examCount":1000},{"date":1626883200000,"examCount":1000},{"date":1626969600000,"examCount":1000},{"date":1627056000000,"examCount":1000},{"date":1627142400000,"examCount":1000},{"date":1627228800000,"examCount":1000},{"date":1627315200000,"examCount":1000},{"date":1627401600000,"examCount":1000},{"date":1627488000000,"examCount":1000},{"date":1627574400000,"examCount":1000},{"date":1627660800000,"examCount":1000},{"date":1627747200000,"examCount":1000},{"date":1627833600000,"examCount":1000},{"date":1627920000000,"examCount":1000},{"date":1628006400000,"examCount":1000},{"date":1628092800000,"examCount":1000},{"date":1628179200000,"examCount":1000},{"date":1628265600000,"examCount":1000},{"date":1628352000000,"examCount":1000},{"date":1628438400000,"examCount":1000},{"date":1628524800000,"examCount":1000},{"date":1628611200000,"examCount":1000},{"date":1628697600000,"examCount":1000},{"date":1628784000000,"examCount":1000},{"date":1628870400000,"examCount":1000},{"date":1628956800000,"examCount":1000},{"date":1629043200000,"examCount":1000},{"date":1629129600000,"examCount":1000},{"date":1629216000000,"examCount":1000},{"date":1629302400000,"examCount":1000},{"date":1629388800000,"examCount":1000},{"date":1629475200000,"examCount":1000},{"date":1629561600000,"examCount":1000},{"date":1629648000000,"examCount":1000},{"date":1629734400000,"examCount":1000},{"date":1629820800000,"examCount":1000},{"date":1629907200000,"examCount":1000},{"date":1629993600000,"examCount":1000},{"date":1630080000000,"examCount":1000},{"date":1630166400000,"examCount":1000},{"date":1630252800000,"examCount":1000},{"date":1630339200000,"examCount":1000},{"date":1630425600000,"examCount":1000},{"date":1630512000000,"examCount":1000},{"date":1630598400000,"examCount":1000},{"date":1630684800000,"examCount":1000},{"date":1630771200000,"examCount":1000},{"date":1630857600000,"examCount":1000},{"date":1630944000000,"examCount":1000},{"date":1631030400000,"examCount":1000},{"date":1631116800000,"examCount":1000},{"date":1631203200000,"examCount":1000},{"date":1631289600000,"examCount":1000},{"date":1631376000000,"examCount":1000},{"date":1631462400000,"examCount":1000},{"date":1631548800000,"examCount":1000},{"date":1631635200000,"examCount":1000},{"date":1631721600000,"examCount":1000},{"date":1631808000000,"examCount":1000},{"date":1631894400000,"examCount":1000},{"date":1631980800000,"examCount":1000},{"date":1632067200000,"examCount":1000},{"date":1632153600000,"examCount":1000},{"date":1632240000000,"examCount":1000},{"date":1632326400000,"examCount":1000},{"date":1632412800000,"examCount":1000},{"date":1632499200000,"examCount":1000},{"date":1632585600000,"examCount":1000},{"date":1632672000000,"examCount":1000},{"date":1632758400000,"examCount":1000},{"date":1632844800000,"examCount":1000},{"date":1632931200000,"examCount":1000},{"date":1633017600000,"examCount":1000},{"date":1633104000000,"examCount":1000},{"date":1633190400000,"examCount":1000},{"date":1633276800000,"examCount":1000},{"date":1633363200000,"examCount":1000},{"date":1633449600000,"examCount":1000},{"date":1633536000000,"examCount":1000},{"date":1633622400000,"examCount":1000},{"date":1633708800000,"examCount":1000},{"date":1633795200000,"examCount":1000},{"date":1633881600000,"examCount":1000},{"date":1633968000000,"examCount":1000},{"date":1634054400000,"examCount":1000},{"date":1634140800000,"examCount":1000},{"date":1634227200000,"examCount":1000},{"date":1634313600000,"examCount":1000},{"date":1634400000000,"examCount":1000},{"date":1634486400000,"examCount":1000},{"date":1634572800000,"examCount":1000},{"date":1634659200000,"examCount":1000},{"date":1634745600000,"examCount":1000},{"date":1634832000000,"examCount":1000},{"date":1634918400000,"examCount":1000},{"date":1635004800000,"examCount":1000},{"date":1635091200000,"examCount":1000},{"date":1635177600000,"examCount":1000},{"date":1635264000000,"examCount":1000},{"date":1635350400000,"examCount":1000},{"date":1635436800000,"examCount":1000},{"date":1635523200000,"examCount":1000},{"date":1635609600000,"examCount":1000},{"date":1635696000000,"examCount":1000},{"date":1635782400000,"examCount":1000},{"date":1635868800000,"examCount":1000},{"date":1635955200000,"examCount":1000},{"date":1636041600000,"examCount":1000},{"date":1636128000000,"examCount":1000},{"date":1636214400000,"examCount":1000},{"date":1636300800000,"examCount":1000},{"date":1636387200000,"examCount":1000},{"date":1636473600000,"examCount":1000}]', 'deadlineTimeStamp': None, 'deadlineTimeStr': None, 'employeesProvided': 1, 'enableSyncHos': 1, 'examEndTimeStamp': 1636473600000, 'examEndTimeStr': '2021-11-10', 'examStartTimeStamp': 1605024000000, 'examStartTimeStr': '2020-11-11', 'isExpired': 0, 'issuedCount': 1, 'notIssuedCount': 0, 'optimisticLockId': '2695', 'optimisticLockVersion': 1609120034000, 'showEnableSyncHos': 1, 'unGroupedCount': 0}, 'success': True}
2020-12-28 09:47:15,783-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120034000,时间戳id:2695
2020-12-28 09:47:15,785-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:15,869-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(804,)
2020-12-28 09:47:15,870-[INFO]-logger.py-all_method-日志信息:手机15990106283:id获取成功返回:804
2020-12-28 09:47:15,923-[INFO]-logger.py-all_method-日志信息:手机15990106283:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '804', 'stationId': 'HL99998', 'token': 'ee999cd0bc8f5838fd28448a5f67fb14'}
2020-12-28 09:47:15,925-[INFO]-logger.py-all_method-日志信息:批次信息详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/card/v3/batch/2695
2020-12-28 09:47:16,005-[INFO]-logger.py-all_method-日志信息:批次信息详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'auditOpenSync': 1, 'batchId': 2695, 'batchName': '基础体检女', 'batchProcess': 4, 'batchTimeAppointStatus': 0, 'bindTypes': '1', 'createTimeStamp': 1605098979000, 'dateJson': '[{"date":1605024000000,"examCount":1000},{"date":1605110400000,"examCount":1000},{"date":1605196800000,"examCount":1000},{"date":1605283200000,"examCount":1000},{"date":1605369600000,"examCount":1000},{"date":1605456000000,"examCount":1000},{"date":1605542400000,"examCount":1000},{"date":1605628800000,"examCount":1000},{"date":1605715200000,"examCount":1000},{"date":1605801600000,"examCount":1000},{"date":1605888000000,"examCount":1000},{"date":1605974400000,"examCount":1000},{"date":1606060800000,"examCount":1000},{"date":1606147200000,"examCount":1000},{"date":1606233600000,"examCount":1000},{"date":1606320000000,"examCount":1000},{"date":1606406400000,"examCount":1000},{"date":1606492800000,"examCount":1000},{"date":1606579200000,"examCount":1000},{"date":1606665600000,"examCount":1000},{"date":1606752000000,"examCount":1000},{"date":1606838400000,"examCount":1000},{"date":1606924800000,"examCount":1000},{"date":1607011200000,"examCount":1000},{"date":1607097600000,"examCount":1000},{"date":1607184000000,"examCount":1000},{"date":1607270400000,"examCount":1000},{"date":1607356800000,"examCount":1000},{"date":1607443200000,"examCount":1000},{"date":1607529600000,"examCount":1000},{"date":1607616000000,"examCount":1000},{"date":1607702400000,"examCount":1000},{"date":1607788800000,"examCount":1000},{"date":1607875200000,"examCount":1000},{"date":1607961600000,"examCount":1000},{"date":1608048000000,"examCount":1000},{"date":1608134400000,"examCount":1000},{"date":1608220800000,"examCount":1000},{"date":1608307200000,"examCount":1000},{"date":1608393600000,"examCount":1000},{"date":1608480000000,"examCount":1000},{"date":1608566400000,"examCount":1000},{"date":1608652800000,"examCount":1000},{"date":1608739200000,"examCount":1000},{"date":1608825600000,"examCount":1000},{"date":1608912000000,"examCount":1000},{"date":1608998400000,"examCount":1000},{"date":1609084800000,"examCount":1000},{"date":1609171200000,"examCount":1000},{"date":1609257600000,"examCount":1000},{"date":1609344000000,"examCount":1000},{"date":1609430400000,"examCount":1000},{"date":1609516800000,"examCount":1000},{"date":1609603200000,"examCount":1000},{"date":1609689600000,"examCount":1000},{"date":1609776000000,"examCount":1000},{"date":1609862400000,"examCount":1000},{"date":1609948800000,"examCount":1000},{"date":1610035200000,"examCount":1000},{"date":1610121600000,"examCount":1000},{"date":1610208000000,"examCount":1000},{"date":1610294400000,"examCount":1000},{"date":1610380800000,"examCount":1000},{"date":1610467200000,"examCount":1000},{"date":1610553600000,"examCount":1000},{"date":1610640000000,"examCount":1000},{"date":1610726400000,"examCount":1000},{"date":1610812800000,"examCount":1000},{"date":1610899200000,"examCount":1000},{"date":1610985600000,"examCount":1000},{"date":1611072000000,"examCount":1000},{"date":1611158400000,"examCount":1000},{"date":1611244800000,"examCount":1000},{"date":1611331200000,"examCount":1000},{"date":1611417600000,"examCount":1000},{"date":1611504000000,"examCount":1000},{"date":1611590400000,"examCount":1000},{"date":1611676800000,"examCount":1000},{"date":1611763200000,"examCount":1000},{"date":1611849600000,"examCount":1000},{"date":1611936000000,"examCount":1000},{"date":1612022400000,"examCount":1000},{"date":1612108800000,"examCount":1000},{"date":1612195200000,"examCount":1000},{"date":1612281600000,"examCount":1000},{"date":1612368000000,"examCount":1000},{"date":1612454400000,"examCount":1000},{"date":1612540800000,"examCount":1000},{"date":1612627200000,"examCount":1000},{"date":1612713600000,"examCount":1000},{"date":1612800000000,"examCount":1000},{"date":1612886400000,"examCount":1000},{"date":1612972800000,"examCount":1000},{"date":1613059200000,"examCount":1000},{"date":1613145600000,"examCount":1000},{"date":1613232000000,"examCount":1000},{"date":1613318400000,"examCount":1000},{"date":1613404800000,"examCount":1000},{"date":1613491200000,"examCount":1000},{"date":1613577600000,"examCount":1000},{"date":1613664000000,"examCount":1000},{"date":1613750400000,"examCount":1000},{"date":1613836800000,"examCount":1000},{"date":1613923200000,"examCount":1000},{"date":1614009600000,"examCount":1000},{"date":1614096000000,"examCount":1000},{"date":1614182400000,"examCount":1000},{"date":1614268800000,"examCount":1000},{"date":1614355200000,"examCount":1000},{"date":1614441600000,"examCount":1000},{"date":1614528000000,"examCount":1000},{"date":1614614400000,"examCount":1000},{"date":1614700800000,"examCount":1000},{"date":1614787200000,"examCount":1000},{"date":1614873600000,"examCount":1000},{"date":1614960000000,"examCount":1000},{"date":1615046400000,"examCount":1000},{"date":1615132800000,"examCount":1000},{"date":1615219200000,"examCount":1000},{"date":1615305600000,"examCount":1000},{"date":1615392000000,"examCount":1000},{"date":1615478400000,"examCount":1000},{"date":1615564800000,"examCount":1000},{"date":1615651200000,"examCount":1000},{"date":1615737600000,"examCount":1000},{"date":1615824000000,"examCount":1000},{"date":1615910400000,"examCount":1000},{"date":1615996800000,"examCount":1000},{"date":1616083200000,"examCount":1000},{"date":1616169600000,"examCount":1000},{"date":1616256000000,"examCount":1000},{"date":1616342400000,"examCount":1000},{"date":1616428800000,"examCount":1000},{"date":1616515200000,"examCount":1000},{"date":1616601600000,"examCount":1000},{"date":1616688000000,"examCount":1000},{"date":1616774400000,"examCount":1000},{"date":1616860800000,"examCount":1000},{"date":1616947200000,"examCount":1000},{"date":1617033600000,"examCount":1000},{"date":1617120000000,"examCount":1000},{"date":1617206400000,"examCount":1000},{"date":1617292800000,"examCount":1000},{"date":1617379200000,"examCount":1000},{"date":1617465600000,"examCount":1000},{"date":1617552000000,"examCount":1000},{"date":1617638400000,"examCount":1000},{"date":1617724800000,"examCount":1000},{"date":1617811200000,"examCount":1000},{"date":1617897600000,"examCount":1000},{"date":1617984000000,"examCount":1000},{"date":1618070400000,"examCount":1000},{"date":1618156800000,"examCount":1000},{"date":1618243200000,"examCount":1000},{"date":1618329600000,"examCount":1000},{"date":1618416000000,"examCount":1000},{"date":1618502400000,"examCount":1000},{"date":1618588800000,"examCount":1000},{"date":1618675200000,"examCount":1000},{"date":1618761600000,"examCount":1000},{"date":1618848000000,"examCount":1000},{"date":1618934400000,"examCount":1000},{"date":1619020800000,"examCount":1000},{"date":1619107200000,"examCount":1000},{"date":1619193600000,"examCount":1000},{"date":1619280000000,"examCount":1000},{"date":1619366400000,"examCount":1000},{"date":1619452800000,"examCount":1000},{"date":1619539200000,"examCount":1000},{"date":1619625600000,"examCount":1000},{"date":1619712000000,"examCount":1000},{"date":1619798400000,"examCount":1000},{"date":1619884800000,"examCount":1000},{"date":1619971200000,"examCount":1000},{"date":1620057600000,"examCount":1000},{"date":1620144000000,"examCount":1000},{"date":1620230400000,"examCount":1000},{"date":1620316800000,"examCount":1000},{"date":1620403200000,"examCount":1000},{"date":1620489600000,"examCount":1000},{"date":1620576000000,"examCount":1000},{"date":1620662400000,"examCount":1000},{"date":1620748800000,"examCount":1000},{"date":1620835200000,"examCount":1000},{"date":1620921600000,"examCount":1000},{"date":1621008000000,"examCount":1000},{"date":1621094400000,"examCount":1000},{"date":1621180800000,"examCount":1000},{"date":1621267200000,"examCount":1000},{"date":1621353600000,"examCount":1000},{"date":1621440000000,"examCount":1000},{"date":1621526400000,"examCount":1000},{"date":1621612800000,"examCount":1000},{"date":1621699200000,"examCount":1000},{"date":1621785600000,"examCount":1000},{"date":1621872000000,"examCount":1000},{"date":1621958400000,"examCount":1000},{"date":1622044800000,"examCount":1000},{"date":1622131200000,"examCount":1000},{"date":1622217600000,"examCount":1000},{"date":1622304000000,"examCount":1000},{"date":1622390400000,"examCount":1000},{"date":1622476800000,"examCount":1000},{"date":1622563200000,"examCount":1000},{"date":1622649600000,"examCount":1000},{"date":1622736000000,"examCount":1000},{"date":1622822400000,"examCount":1000},{"date":1622908800000,"examCount":1000},{"date":1622995200000,"examCount":1000},{"date":1623081600000,"examCount":1000},{"date":1623168000000,"examCount":1000},{"date":1623254400000,"examCount":1000},{"date":1623340800000,"examCount":1000},{"date":1623427200000,"examCount":1000},{"date":1623513600000,"examCount":1000},{"date":1623600000000,"examCount":1000},{"date":1623686400000,"examCount":1000},{"date":1623772800000,"examCount":1000},{"date":1623859200000,"examCount":1000},{"date":1623945600000,"examCount":1000},{"date":1624032000000,"examCount":1000},{"date":1624118400000,"examCount":1000},{"date":1624204800000,"examCount":1000},{"date":1624291200000,"examCount":1000},{"date":1624377600000,"examCount":1000},{"date":1624464000000,"examCount":1000},{"date":1624550400000,"examCount":1000},{"date":1624636800000,"examCount":1000},{"date":1624723200000,"examCount":1000},{"date":1624809600000,"examCount":1000},{"date":1624896000000,"examCount":1000},{"date":1624982400000,"examCount":1000},{"date":1625068800000,"examCount":1000},{"date":1625155200000,"examCount":1000},{"date":1625241600000,"examCount":1000},{"date":1625328000000,"examCount":1000},{"date":1625414400000,"examCount":1000},{"date":1625500800000,"examCount":1000},{"date":1625587200000,"examCount":1000},{"date":1625673600000,"examCount":1000},{"date":1625760000000,"examCount":1000},{"date":1625846400000,"examCount":1000},{"date":1625932800000,"examCount":1000},{"date":1626019200000,"examCount":1000},{"date":1626105600000,"examCount":1000},{"date":1626192000000,"examCount":1000},{"date":1626278400000,"examCount":1000},{"date":1626364800000,"examCount":1000},{"date":1626451200000,"examCount":1000},{"date":1626537600000,"examCount":1000},{"date":1626624000000,"examCount":1000},{"date":1626710400000,"examCount":1000},{"date":1626796800000,"examCount":1000},{"date":1626883200000,"examCount":1000},{"date":1626969600000,"examCount":1000},{"date":1627056000000,"examCount":1000},{"date":1627142400000,"examCount":1000},{"date":1627228800000,"examCount":1000},{"date":1627315200000,"examCount":1000},{"date":1627401600000,"examCount":1000},{"date":1627488000000,"examCount":1000},{"date":1627574400000,"examCount":1000},{"date":1627660800000,"examCount":1000},{"date":1627747200000,"examCount":1000},{"date":1627833600000,"examCount":1000},{"date":1627920000000,"examCount":1000},{"date":1628006400000,"examCount":1000},{"date":1628092800000,"examCount":1000},{"date":1628179200000,"examCount":1000},{"date":1628265600000,"examCount":1000},{"date":1628352000000,"examCount":1000},{"date":1628438400000,"examCount":1000},{"date":1628524800000,"examCount":1000},{"date":1628611200000,"examCount":1000},{"date":1628697600000,"examCount":1000},{"date":1628784000000,"examCount":1000},{"date":1628870400000,"examCount":1000},{"date":1628956800000,"examCount":1000},{"date":1629043200000,"examCount":1000},{"date":1629129600000,"examCount":1000},{"date":1629216000000,"examCount":1000},{"date":1629302400000,"examCount":1000},{"date":1629388800000,"examCount":1000},{"date":1629475200000,"examCount":1000},{"date":1629561600000,"examCount":1000},{"date":1629648000000,"examCount":1000},{"date":1629734400000,"examCount":1000},{"date":1629820800000,"examCount":1000},{"date":1629907200000,"examCount":1000},{"date":1629993600000,"examCount":1000},{"date":1630080000000,"examCount":1000},{"date":1630166400000,"examCount":1000},{"date":1630252800000,"examCount":1000},{"date":1630339200000,"examCount":1000},{"date":1630425600000,"examCount":1000},{"date":1630512000000,"examCount":1000},{"date":1630598400000,"examCount":1000},{"date":1630684800000,"examCount":1000},{"date":1630771200000,"examCount":1000},{"date":1630857600000,"examCount":1000},{"date":1630944000000,"examCount":1000},{"date":1631030400000,"examCount":1000},{"date":1631116800000,"examCount":1000},{"date":1631203200000,"examCount":1000},{"date":1631289600000,"examCount":1000},{"date":1631376000000,"examCount":1000},{"date":1631462400000,"examCount":1000},{"date":1631548800000,"examCount":1000},{"date":1631635200000,"examCount":1000},{"date":1631721600000,"examCount":1000},{"date":1631808000000,"examCount":1000},{"date":1631894400000,"examCount":1000},{"date":1631980800000,"examCount":1000},{"date":1632067200000,"examCount":1000},{"date":1632153600000,"examCount":1000},{"date":1632240000000,"examCount":1000},{"date":1632326400000,"examCount":1000},{"date":1632412800000,"examCount":1000},{"date":1632499200000,"examCount":1000},{"date":1632585600000,"examCount":1000},{"date":1632672000000,"examCount":1000},{"date":1632758400000,"examCount":1000},{"date":1632844800000,"examCount":1000},{"date":1632931200000,"examCount":1000},{"date":1633017600000,"examCount":1000},{"date":1633104000000,"examCount":1000},{"date":1633190400000,"examCount":1000},{"date":1633276800000,"examCount":1000},{"date":1633363200000,"examCount":1000},{"date":1633449600000,"examCount":1000},{"date":1633536000000,"examCount":1000},{"date":1633622400000,"examCount":1000},{"date":1633708800000,"examCount":1000},{"date":1633795200000,"examCount":1000},{"date":1633881600000,"examCount":1000},{"date":1633968000000,"examCount":1000},{"date":1634054400000,"examCount":1000},{"date":1634140800000,"examCount":1000},{"date":1634227200000,"examCount":1000},{"date":1634313600000,"examCount":1000},{"date":1634400000000,"examCount":1000},{"date":1634486400000,"examCount":1000},{"date":1634572800000,"examCount":1000},{"date":1634659200000,"examCount":1000},{"date":1634745600000,"examCount":1000},{"date":1634832000000,"examCount":1000},{"date":1634918400000,"examCount":1000},{"date":1635004800000,"examCount":1000},{"date":1635091200000,"examCount":1000},{"date":1635177600000,"examCount":1000},{"date":1635264000000,"examCount":1000},{"date":1635350400000,"examCount":1000},{"date":1635436800000,"examCount":1000},{"date":1635523200000,"examCount":1000},{"date":1635609600000,"examCount":1000},{"date":1635696000000,"examCount":1000},{"date":1635782400000,"examCount":1000},{"date":1635868800000,"examCount":1000},{"date":1635955200000,"examCount":1000},{"date":1636041600000,"examCount":1000},{"date":1636128000000,"examCount":1000},{"date":1636214400000,"examCount":1000},{"date":1636300800000,"examCount":1000},{"date":1636387200000,"examCount":1000},{"date":1636473600000,"examCount":1000}]', 'deadlineTimeStamp': None, 'deadlineTimeStr': None, 'employeesProvided': 1, 'enableSyncHos': 1, 'examEndTimeStamp': 1636473600000, 'examEndTimeStr': '2021-11-10', 'examStartTimeStamp': 1605024000000, 'examStartTimeStr': '2020-11-11', 'isExpired': 0, 'issuedCount': 1, 'notIssuedCount': 0, 'optimisticLockId': '2695', 'optimisticLockVersion': 1609120034000, 'showEnableSyncHos': 1, 'unGroupedCount': 0}, 'success': True}
2020-12-28 09:47:16,011-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120034000,时间戳id:2695
2020-12-28 09:47:16,013-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:47:16,115-[INFO]-logger.py-httpRequest-日志信息:第一次保存headers：{'optimisticLockVersion': '1609120034000', 'optimisticLockId': '2695', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '0', 'errorMsg': '', 'result': None, 'success': True}
2020-12-28 09:47:16,173-[INFO]-logger.py-httpRequest-日志信息:第二次保存headers：{'optimisticLockVersion': '1609120034000', 'optimisticLockId': '2695', 'adminId': '804', 'stationId': 'HL99998', 'token': 'ee999cd0bc8f5838fd28448a5f67fb14'},返回：{'code': '20289', 'errorMsg': '该项数据已被修改，请刷新后重试！', 'result': None, 'success': False}
2020-12-28 09:47:16,175-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.663236s
2020-12-28 09:47:16,176-[INFO]-logger.py-Unit_test-日志信息:接口返回message:该项数据已被修改，请刷新后重试！
2020-12-28 09:47:16,178-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20289
2020-12-28 09:47:16,179-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.663236, 'data': '该项数据已被修改，请刷新后重试！', 'code': '20289', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:47:17,153-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:17,154-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:17,156-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:17,157-[INFO]-logger.py-Unit_test-日志信息:正在执行第30条用例:【项目管理】1-正常-医院体检项目-获取项目信息-成功
2020-12-28 09:47:17,158-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/item/examHospital/list/HL99998/1/10；method：POST；data：{"name":"","addFrom":0,"isAdd":''}；sql：{}
2020-12-28 09:47:17,160-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:17,215-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:17,216-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:17,260-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:17,264-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 09:47:17,319-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '0', 'errorMsg': '', 'result': {'list': [{'addFrom': 0, 'canAdd': 1, 'desc': '尿常规是医学检验“三大常规”项目之一，通过对尿液成分、形状等进行分析，用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能，还可用于协助检查其他系统疾病，如糖尿病、高血压、肝炎等。', 'discount': 1.0, 'gender': 0, 'id': 102926, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0002', 'itemTagId': 18, 'name': '尿常规', 'notice': '1.尽量留取晨尿，留取时需选择中段尿（10ml以上)\n2.女性月经期及其前后3-5天一般不宜留取尿液送检，以免经血混入小便，造成血尿的假象；\n3.尿液留取后需尽快送实验室检查；\n4.检测前一天应当避免同房、剧烈运动等；前一天晚上8点后避免大量进食、饮水。\n5. 检测前不要使用抗菌药物，以免影响检查结果的准确性。', 'optimisticLockId': '102926', 'optimisticLockVersion': 1609117876000, 'orderNum': None, 'originalPrice': None, 'price': 600, 'purpose': '用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'reason': '检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'salePrice': 6.0, 'specialRemark': '尿常规尿常规尿常规尿常规eeeee11111111', 'standardItemDesc': '尿常规是医学检验“三大常规”项目之一，通过对尿液成分、形状等进行分析，用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能，还可用于协助检查其他系统疾病，如糖尿病、高血压、肝炎等。', 'standardItemId': 106, 'standardItemName': '尿常规', 'standardItemNotice': '1.尽量留取晨尿，留取时需选择中段尿（10ml以上)\n2.女性月经期及其前后3-5天一般不宜留取尿液送检，以免经血混入小便，造成血尿的假象；\n3.尿液留取后需尽快送实验室检查；\n4.检测前一天应当避免同房、剧烈运动等；前一天晚上8点后避免大量进食、饮水。\n5. 检测前不要使用抗菌药物，以免影响检查结果的准确性。', 'standardItemPurpose': '用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'stationId': 'HL99998', 'tagName': '必选检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '生化全套检查内容包括：肝功能；血脂；空腹血糖；肾功能；尿酸等', 'discount': None, 'gender': 0, 'id': 102927, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0022', 'itemTagId': 18, 'name': '生化全项', 'notice': '1.抽血检查前避免劳累、运动、喝酒、情绪激动，饮食宜清淡； 2.抽血前一天不吃过于油腻、高蛋白食物，避免大量饮酒，抽血前禁食12小时； 3.检查前保证足够的睡眠时间，避免熬夜； 4.检查前若患有感冒并服用药物，建议感冒痊愈且停药后1周做检查', 'optimisticLockId': '102927', 'optimisticLockVersion': 1605591291000, 'orderNum': None, 'originalPrice': 100.0, 'price': 27800, 'purpose': '常规体检普查；用于疾病的筛查和确证试验', 'reason': '比普通的单项的生化检查查的更全、性价比更高，检查的项目多', 'salePrice': 0.02, 'specialRemark': '这是特殊说明，这个会有不一样哦，哈哈哈哈，看看怎么现实的额吧，一定要显示正常哦\n但是大家时间了洛杉矶大家都是家里都是垃圾的时间是多久的积极的角度', 'standardItemDesc': '生化全套检查内容包括：肝功能；血脂；空腹血糖；肾功能；尿酸等', 'standardItemId': 696, 'standardItemName': '体检生化全套', 'standardItemNotice': '1.抽血检查前避免劳累、运动、喝酒、情绪激动，饮食宜清淡； 2.抽血前一天不吃过于油腻、高蛋白食物，避免大量饮酒，抽血前禁食12小时； 3.检查前保证足够的睡眠时间，避免熬夜； 4.检查前若患有感冒并服用药物，建议感冒痊愈且停药后1周做检查', 'standardItemPurpose': '常规体检普查；用于疾病的筛查和确证试验', 'stationId': 'HL99998', 'tagName': '必选检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '阴道或尿道分泌物中查解尿支原体，其不仅可引起阴道、宫颈等生殖器感染，而且与流产、不育及胎儿宫内发育迟缓有密切关系。', 'discount': None, 'gender': 2, 'id': 102928, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'JK0002', 'itemTagId': 12, 'name': '一次性材料费', 'notice': '女性月经干净后１周后检查，检查前避免同房，一旦阳性，需要男女同治，治疗期间避免同房。', 'optimisticLockId': '102928', 'optimisticLockVersion': 1605687610000, 'orderNum': None, 'originalPrice': None, 'price': 2000, 'purpose': '了解是否感染了解尿支原体', 'reason': '早发现早治疗', 'salePrice': 0.01, 'specialRemark': '一次性材料费', 'standardItemDesc': '阴道或尿道分泌物中查解尿支原体，其不仅可引起阴道、宫颈等生殖器感染，而且与流产、不育及胎儿宫内发育迟缓有密切关系。', 'standardItemId': 823, 'standardItemName': '解尿支原体', 'standardItemNotice': '女性月经干净后１周后检查，检查前避免同房，一旦阳性，需要男女同治，治疗期间避免同房。', 'standardItemPurpose': '了解是否感染了解尿支原体', 'stationId': 'HL99998', 'tagName': '女性检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '', 'discount': None, 'gender': 2, 'id': 102929, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0037', 'itemTagId': 12, 'name': '血脂全项', 'notice': '1.做TCT检查前24小时避免性生活。2.在做TCT检查前3天内不要冲洗阴道或使用阴道栓剂，也不要做阴道内诊。3.如有炎症先治疗，然后再做TCT检查，以免影响诊断结果。4.TCT检查最好安排在月经结束后的3-7天。', 'optimisticLockId': '102929', 'optimisticLockVersion': 1601276410000, 'orderNum': None, 'originalPrice': None, 'price': 6600, 'purpose': '宫颈癌的筛查', 'reason': '面对女性的宫颈癌高发，妇科检查+液基细胞学检查都应该定期检查，TCT技术是应用于妇女宫颈癌筛查的一项先进的技术。', 'salePrice': 66.0, 'specialRemark': None, 'standardItemDesc': '', 'standardItemId': 745, 'standardItemName': '妇科检查+液基细胞学检查', 'standardItemNotice': '1.做TCT检查前24小时避免性生活。2.在做TCT检查前3天内不要冲洗阴道或使用阴道栓剂，也不要做阴道内诊。3.如有炎症先治疗，然后再做TCT检查，以免影响诊断结果。4.TCT检查最好安排在月经结束后的3-7天。', 'standardItemPurpose': '宫颈癌的筛查', 'stationId': 'HL99998', 'tagName': '女性检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '', 'discount': 1.0, 'gender': 1, 'id': 102930, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'DR0001', 'itemTagId': 16, 'name': '颈椎DR三位片', 'notice': '不带任何项链，裸露检查部位，勿要携带金属物品置于身检查；避免紧张积极配合医生检查；备孕或者孕妇不适宜X线类的检查。', 'optimisticLockId': '102930', 'optimisticLockVersion': 1600699015000, 'orderNum': None, 'originalPrice': None, 'price': 26000, 'purpose': '对颈椎进行较为全面的检查', 'reason': '越来越多的人受到颈椎病的困扰，及时早期治疗有较大意义，更加重视颈椎健康。', 'salePrice': 0.01, 'specialRemark': None, 'standardItemDesc': '', 'standardItemId': 746, 'standardItemName': '颈椎正侧双斜位（颈椎四位片）', 'standardItemNotice': '不带任何项链，裸露检查部位，勿要携带金属物品置于身检查；避免紧张积极配合医生检查；备孕或者孕妇不适宜X线类的检查。', 'standardItemPurpose': '对颈椎进行较为全面的检查', 'stationId': 'HL99998', 'tagName': '腰颈椎检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '哇哇哇哇哇哇哇哇哇哇哇哇下踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'discount': None, 'gender': 0, 'id': 102931, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'NK0001', 'itemTagId': 11, 'name': '内科检查(必检）', 'notice': '1.医生评估能否适合做该项检查。\n2.消化道不通畅的患者，进行胶囊内镜检查时要慎重，如经检查证实或怀疑患有消化道畸形、胃肠道梗阻、消化道穿孔、消化道狭窄或瘘管者禁做；对高分子材料过敏者禁做以及其他医生诊断不建议做者禁做。\n', 'optimisticLockId': '102931', 'optimisticLockVersion': 1600847799000, 'orderNum': None, 'originalPrice': None, 'price': 800, 'purpose': '消化道疾病尤其是小肠疾病诊断的首选方法顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶踩踩踩踩踩踩踩踩踩', 'reason': '检查过程中无需麻醉、不需住院，行动自如，不耽误正常的工作和生活；舒适检查手段无痛无创，满足耐受性较差的人群查病，提高诊断胃肠道疾病准确率，对小肠都能进行检查。', 'salePrice': 2.0, 'specialRemark': None, 'standardItemDesc': '哇哇哇哇哇哇哇哇哇哇哇哇下踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'standardItemId': 500, 'standardItemName': '智能胶囊内窥镜检测', 'standardItemNotice': '1.医生评估能否适合做该项检查。\n2.消化道不通畅的患者，进行胶囊内镜检查时要慎重，如经检查证实或怀疑患有消化道畸形、胃肠道梗阻、消化道穿孔、消化道狭窄或瘘管者禁做；对高分子材料过敏者禁做以及其他医生诊断不建议做者禁做。\n', 'standardItemPurpose': '消化道疾病尤其是小肠疾病诊断的首选方法顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶踩踩踩踩踩踩踩踩踩', 'stationId': 'HL99998', 'tagName': '胃部疾病检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '总胆固醇、甘油三酯、高密度脂蛋白胆固醇、低密度脂蛋白胆固醇、测定血清中血脂含量，它们的增高或降低与动脉粥样硬化的形成有很大的关系。', 'discount': 0.1, 'gender': 0, 'id': 102932, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'WK0001', 'itemTagId': 7, 'name': '外科检查', 'notice': '1.一般最合适的时间是在当月月经结束后的3-7天内。2.妇科常规检查当日应穿着便于检查的衣服，长度适中的裙子是最好的选择。3.妇科常规检查的前一天晚上洗澡要选择淋浴，检查前24小时内不能洗阴道内部。4.检查前一晚避免性生活，不使用任何阴道药物', 'optimisticLockId': '102932', 'optimisticLockVersion': 1600760522000, 'orderNum': None, 'originalPrice': 111.0, 'price': 500, 'purpose': '检查子宫大小位置有无异常，看阴道黏膜表面是否光滑，白带是否异常有无病原体，宫颈上有没有肿物、溃疡、糜烂、息肉等', 'reason': '推荐理由', 'salePrice': 100.0, 'specialRemark': None, 'standardItemDesc': '总胆固醇、甘油三酯、高密度脂蛋白胆固醇、低密度脂蛋白胆固醇、测定血清中血脂含量，它们的增高或降低与动脉粥样硬化的形成有很大的关系。', 'standardItemId': 37, 'standardItemName': '血脂四项', 'standardItemNotice': '1.一般最合适的时间是在当月月经结束后的3-7天内。2.妇科常规检查当日应穿着便于检查的衣服，长度适中的裙子是最好的选择。3.妇科常规检查的前一天晚上洗澡要选择淋浴，检查前24小时内不能洗阴道内部。4.检查前一晚避免性生活，不使用任何阴道药物', 'standardItemPurpose': '检查子宫大小位置有无异常，看阴道黏膜表面是否光滑，白带是否异常有无病原体，宫颈上有没有肿物、溃疡、糜烂、息肉等', 'stationId': 'HL99998', 'tagName': '肿瘤生化'}, {'addFrom': 0, 'canAdd': 1, 'desc': '肾功能评价，测定肾功能损害程度及估计预后；血尿酸增高对高尿酸血症、痛风有诊断意义。肾功能不全出现肌酐升高', 'discount': None, 'gender': 0, 'id': 102934, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'WG0002', 'itemTagId': 3, 'name': '耳鼻喉科检查', 'notice': '1.有相关疾病提前告知，检查时积极配合医生完成检查时操作；2.避免精神紧张与压力', 'optimisticLockId': '102934', 'optimisticLockVersion': 1599546857000, 'orderNum': None, 'originalPrice': None, 'price': 800, 'purpose': '对耳、鼻、喉、咽的常规性检查', 'reason': '推荐理由', 'salePrice': 0.01, 'specialRemark': None, 'standardItemDesc': '肾功能评价，测定肾功能损害程度及估计预后；血尿酸增高对高尿酸血症、痛风有诊断意义。肾功能不全出现肌酐升高', 'standardItemId': 33, 'standardItemName': '尿素氮(BUN)、肌酐(Cr)、尿酸(UA)', 'standardItemNotice': '1.有相关疾病提前告知，检查时积极配合医生完成检查时操作；2.避免精神紧张与压力', 'standardItemPurpose': '对耳、鼻、喉、咽的常规性检查', 'stationId': 'HL99998', 'tagName': '心胸肺及腰椎'}, {'addFrom': 0, 'canAdd': 1, 'desc': '', 'discount': 0.9, 'gender': 0, 'id': 102935, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0039', 'itemTagId': 12, 'name': '血HCG', 'notice': '检前几天清淡饮食，空腹检查，采血前禁食12小时', 'optimisticLockId': '102935', 'optimisticLockVersion': 1605852490000, 'orderNum': None, 'originalPrice': 0.0, 'price': 3300, 'purpose': '早孕诊断以及与HCG相关性疾病的诊断', 'reason': '早孕的血液学诊断，也是某些疾病的辅助判断项目。', 'salePrice': 0.02, 'specialRemark': None, 'standardItemDesc': '', 'standardItemId': 772, 'standardItemName': '血HCG', 'standardItemNotice': '检前几天清淡饮食，空腹检查，采血前禁食12小时', 'standardItemPurpose': '早孕诊断以及与HCG相关性疾病的诊断', 'stationId': 'HL99998', 'tagName': '女性检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '妇科的常见病原体有细菌、病毒、真菌、寄生虫等广泛的存在于泌尿生殖道中，感染引起阴道炎症。常见的感染病原体：真菌（白色念珠菌）、毛滴虫、HPV等，阴道炎还有可能是其他的病原体如支原体感染所致，如解脲支原体、沙眼衣原体、抗生殖支原体等。', 'discount': None, 'gender': 2, 'id': 102936, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'FK00001', 'itemTagId': 12, 'name': '妇科检查', 'notice': '1.检查前一天要避免性生活，避免影响检查结果；2.必检经期进行检查，并选择最佳的检查时间；3.计划检查前24～48小时内不要冲洗阴道或使用置入阴道的栓剂，也不要进行阴道内诊检查。', 'optimisticLockId': '102936', 'optimisticLockVersion': 1601193171000, 'orderNum': None, 'originalPrice': 99.0, 'price': 2000, 'purpose': '妇科疾病是否由病原体感染。', 'reason': '妇科疾病严重者会引起不孕不育，重视妇科检查，行早发现早治疗原则。', 'salePrice': 0.01, 'specialRemark': None, 'standardItemDesc': '妇科的常见病原体有细菌、病毒、真菌、寄生虫等广泛的存在于泌尿生殖道中，感染引起阴道炎症。常见的感染病原体：真菌（白色念珠菌）、毛滴虫、HPV等，阴道炎还有可能是其他的病原体如支原体感染所致，如解脲支原体、沙眼衣原体、抗生殖支原体等。', 'standardItemId': 863, 'standardItemName': '妇科病原体检查', 'standardItemNotice': '1.检查前一天要避免性生活，避免影响检查结果；2.必检经期进行检查，并选择最佳的检查时间；3.计划检查前24～48小时内不要冲洗阴道或使用置入阴道的栓剂，也不要进行阴道内诊检查。', 'standardItemPurpose': '妇科疾病是否由病原体感染。', 'stationId': 'HL99998', 'tagName': '女性检查'}], 'total': 175}, 'success': True}
2020-12-28 09:47:17,327-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.16792s
2020-12-28 09:47:17,329-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:47:17,331-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.16792, 'data': {'list': [{'addFrom': 0, 'canAdd': 1, 'desc': '尿常规是医学检验“三大常规”项目之一，通过对尿液成分、形状等进行分析，用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能，还可用于协助检查其他系统疾病，如糖尿病、高血压、肝炎等。', 'discount': 1.0, 'gender': 0, 'id': 102926, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0002', 'itemTagId': 18, 'name': '尿常规', 'notice': '1.尽量留取晨尿，留取时需选择中段尿（10ml以上)\n2.女性月经期及其前后3-5天一般不宜留取尿液送检，以免经血混入小便，造成血尿的假象；\n3.尿液留取后需尽快送实验室检查；\n4.检测前一天应当避免同房、剧烈运动等；前一天晚上8点后避免大量进食、饮水。\n5. 检测前不要使用抗菌药物，以免影响检查结果的准确性。', 'optimisticLockId': '102926', 'optimisticLockVersion': 1609117876000, 'orderNum': None, 'originalPrice': None, 'price': 600, 'purpose': '用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'reason': '检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'salePrice': 6.0, 'specialRemark': '尿常规尿常规尿常规尿常规eeeee11111111', 'standardItemDesc': '尿常规是医学检验“三大常规”项目之一，通过对尿液成分、形状等进行分析，用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能，还可用于协助检查其他系统疾病，如糖尿病、高血压、肝炎等。', 'standardItemId': 106, 'standardItemName': '尿常规', 'standardItemNotice': '1.尽量留取晨尿，留取时需选择中段尿（10ml以上)\n2.女性月经期及其前后3-5天一般不宜留取尿液送检，以免经血混入小便，造成血尿的假象；\n3.尿液留取后需尽快送实验室检查；\n4.检测前一天应当避免同房、剧烈运动等；前一天晚上8点后避免大量进食、饮水。\n5. 检测前不要使用抗菌药物，以免影响检查结果的准确性。', 'standardItemPurpose': '用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'stationId': 'HL99998', 'tagName': '必选检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '生化全套检查内容包括：肝功能；血脂；空腹血糖；肾功能；尿酸等', 'discount': None, 'gender': 0, 'id': 102927, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0022', 'itemTagId': 18, 'name': '生化全项', 'notice': '1.抽血检查前避免劳累、运动、喝酒、情绪激动，饮食宜清淡； 2.抽血前一天不吃过于油腻、高蛋白食物，避免大量饮酒，抽血前禁食12小时； 3.检查前保证足够的睡眠时间，避免熬夜； 4.检查前若患有感冒并服用药物，建议感冒痊愈且停药后1周做检查', 'optimisticLockId': '102927', 'optimisticLockVersion': 1605591291000, 'orderNum': None, 'originalPrice': 100.0, 'price': 27800, 'purpose': '常规体检普查；用于疾病的筛查和确证试验', 'reason': '比普通的单项的生化检查查的更全、性价比更高，检查的项目多', 'salePrice': 0.02, 'specialRemark': '这是特殊说明，这个会有不一样哦，哈哈哈哈，看看怎么现实的额吧，一定要显示正常哦\n但是大家时间了洛杉矶大家都是家里都是垃圾的时间是多久的积极的角度', 'standardItemDesc': '生化全套检查内容包括：肝功能；血脂；空腹血糖；肾功能；尿酸等', 'standardItemId': 696, 'standardItemName': '体检生化全套', 'standardItemNotice': '1.抽血检查前避免劳累、运动、喝酒、情绪激动，饮食宜清淡； 2.抽血前一天不吃过于油腻、高蛋白食物，避免大量饮酒，抽血前禁食12小时； 3.检查前保证足够的睡眠时间，避免熬夜； 4.检查前若患有感冒并服用药物，建议感冒痊愈且停药后1周做检查', 'standardItemPurpose': '常规体检普查；用于疾病的筛查和确证试验', 'stationId': 'HL99998', 'tagName': '必选检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '阴道或尿道分泌物中查解尿支原体，其不仅可引起阴道、宫颈等生殖器感染，而且与流产、不育及胎儿宫内发育迟缓有密切关系。', 'discount': None, 'gender': 2, 'id': 102928, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'JK0002', 'itemTagId': 12, 'name': '一次性材料费', 'notice': '女性月经干净后１周后检查，检查前避免同房，一旦阳性，需要男女同治，治疗期间避免同房。', 'optimisticLockId': '102928', 'optimisticLockVersion': 1605687610000, 'orderNum': None, 'originalPrice': None, 'price': 2000, 'purpose': '了解是否感染了解尿支原体', 'reason': '早发现早治疗', 'salePrice': 0.01, 'specialRemark': '一次性材料费', 'standardItemDesc': '阴道或尿道分泌物中查解尿支原体，其不仅可引起阴道、宫颈等生殖器感染，而且与流产、不育及胎儿宫内发育迟缓有密切关系。', 'standardItemId': 823, 'standardItemName': '解尿支原体', 'standardItemNotice': '女性月经干净后１周后检查，检查前避免同房，一旦阳性，需要男女同治，治疗期间避免同房。', 'standardItemPurpose': '了解是否感染了解尿支原体', 'stationId': 'HL99998', 'tagName': '女性检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '', 'discount': None, 'gender': 2, 'id': 102929, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0037', 'itemTagId': 12, 'name': '血脂全项', 'notice': '1.做TCT检查前24小时避免性生活。2.在做TCT检查前3天内不要冲洗阴道或使用阴道栓剂，也不要做阴道内诊。3.如有炎症先治疗，然后再做TCT检查，以免影响诊断结果。4.TCT检查最好安排在月经结束后的3-7天。', 'optimisticLockId': '102929', 'optimisticLockVersion': 1601276410000, 'orderNum': None, 'originalPrice': None, 'price': 6600, 'purpose': '宫颈癌的筛查', 'reason': '面对女性的宫颈癌高发，妇科检查+液基细胞学检查都应该定期检查，TCT技术是应用于妇女宫颈癌筛查的一项先进的技术。', 'salePrice': 66.0, 'specialRemark': None, 'standardItemDesc': '', 'standardItemId': 745, 'standardItemName': '妇科检查+液基细胞学检查', 'standardItemNotice': '1.做TCT检查前24小时避免性生活。2.在做TCT检查前3天内不要冲洗阴道或使用阴道栓剂，也不要做阴道内诊。3.如有炎症先治疗，然后再做TCT检查，以免影响诊断结果。4.TCT检查最好安排在月经结束后的3-7天。', 'standardItemPurpose': '宫颈癌的筛查', 'stationId': 'HL99998', 'tagName': '女性检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '', 'discount': 1.0, 'gender': 1, 'id': 102930, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'DR0001', 'itemTagId': 16, 'name': '颈椎DR三位片', 'notice': '不带任何项链，裸露检查部位，勿要携带金属物品置于身检查；避免紧张积极配合医生检查；备孕或者孕妇不适宜X线类的检查。', 'optimisticLockId': '102930', 'optimisticLockVersion': 1600699015000, 'orderNum': None, 'originalPrice': None, 'price': 26000, 'purpose': '对颈椎进行较为全面的检查', 'reason': '越来越多的人受到颈椎病的困扰，及时早期治疗有较大意义，更加重视颈椎健康。', 'salePrice': 0.01, 'specialRemark': None, 'standardItemDesc': '', 'standardItemId': 746, 'standardItemName': '颈椎正侧双斜位（颈椎四位片）', 'standardItemNotice': '不带任何项链，裸露检查部位，勿要携带金属物品置于身检查；避免紧张积极配合医生检查；备孕或者孕妇不适宜X线类的检查。', 'standardItemPurpose': '对颈椎进行较为全面的检查', 'stationId': 'HL99998', 'tagName': '腰颈椎检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '哇哇哇哇哇哇哇哇哇哇哇哇下踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'discount': None, 'gender': 0, 'id': 102931, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'NK0001', 'itemTagId': 11, 'name': '内科检查(必检）', 'notice': '1.医生评估能否适合做该项检查。\n2.消化道不通畅的患者，进行胶囊内镜检查时要慎重，如经检查证实或怀疑患有消化道畸形、胃肠道梗阻、消化道穿孔、消化道狭窄或瘘管者禁做；对高分子材料过敏者禁做以及其他医生诊断不建议做者禁做。\n', 'optimisticLockId': '102931', 'optimisticLockVersion': 1600847799000, 'orderNum': None, 'originalPrice': None, 'price': 800, 'purpose': '消化道疾病尤其是小肠疾病诊断的首选方法顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶踩踩踩踩踩踩踩踩踩', 'reason': '检查过程中无需麻醉、不需住院，行动自如，不耽误正常的工作和生活；舒适检查手段无痛无创，满足耐受性较差的人群查病，提高诊断胃肠道疾病准确率，对小肠都能进行检查。', 'salePrice': 2.0, 'specialRemark': None, 'standardItemDesc': '哇哇哇哇哇哇哇哇哇哇哇哇下踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'standardItemId': 500, 'standardItemName': '智能胶囊内窥镜检测', 'standardItemNotice': '1.医生评估能否适合做该项检查。\n2.消化道不通畅的患者，进行胶囊内镜检查时要慎重，如经检查证实或怀疑患有消化道畸形、胃肠道梗阻、消化道穿孔、消化道狭窄或瘘管者禁做；对高分子材料过敏者禁做以及其他医生诊断不建议做者禁做。\n', 'standardItemPurpose': '消化道疾病尤其是小肠疾病诊断的首选方法顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶踩踩踩踩踩踩踩踩踩', 'stationId': 'HL99998', 'tagName': '胃部疾病检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '总胆固醇、甘油三酯、高密度脂蛋白胆固醇、低密度脂蛋白胆固醇、测定血清中血脂含量，它们的增高或降低与动脉粥样硬化的形成有很大的关系。', 'discount': 0.1, 'gender': 0, 'id': 102932, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'WK0001', 'itemTagId': 7, 'name': '外科检查', 'notice': '1.一般最合适的时间是在当月月经结束后的3-7天内。2.妇科常规检查当日应穿着便于检查的衣服，长度适中的裙子是最好的选择。3.妇科常规检查的前一天晚上洗澡要选择淋浴，检查前24小时内不能洗阴道内部。4.检查前一晚避免性生活，不使用任何阴道药物', 'optimisticLockId': '102932', 'optimisticLockVersion': 1600760522000, 'orderNum': None, 'originalPrice': 111.0, 'price': 500, 'purpose': '检查子宫大小位置有无异常，看阴道黏膜表面是否光滑，白带是否异常有无病原体，宫颈上有没有肿物、溃疡、糜烂、息肉等', 'reason': '推荐理由', 'salePrice': 100.0, 'specialRemark': None, 'standardItemDesc': '总胆固醇、甘油三酯、高密度脂蛋白胆固醇、低密度脂蛋白胆固醇、测定血清中血脂含量，它们的增高或降低与动脉粥样硬化的形成有很大的关系。', 'standardItemId': 37, 'standardItemName': '血脂四项', 'standardItemNotice': '1.一般最合适的时间是在当月月经结束后的3-7天内。2.妇科常规检查当日应穿着便于检查的衣服，长度适中的裙子是最好的选择。3.妇科常规检查的前一天晚上洗澡要选择淋浴，检查前24小时内不能洗阴道内部。4.检查前一晚避免性生活，不使用任何阴道药物', 'standardItemPurpose': '检查子宫大小位置有无异常，看阴道黏膜表面是否光滑，白带是否异常有无病原体，宫颈上有没有肿物、溃疡、糜烂、息肉等', 'stationId': 'HL99998', 'tagName': '肿瘤生化'}, {'addFrom': 0, 'canAdd': 1, 'desc': '肾功能评价，测定肾功能损害程度及估计预后；血尿酸增高对高尿酸血症、痛风有诊断意义。肾功能不全出现肌酐升高', 'discount': None, 'gender': 0, 'id': 102934, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'WG0002', 'itemTagId': 3, 'name': '耳鼻喉科检查', 'notice': '1.有相关疾病提前告知，检查时积极配合医生完成检查时操作；2.避免精神紧张与压力', 'optimisticLockId': '102934', 'optimisticLockVersion': 1599546857000, 'orderNum': None, 'originalPrice': None, 'price': 800, 'purpose': '对耳、鼻、喉、咽的常规性检查', 'reason': '推荐理由', 'salePrice': 0.01, 'specialRemark': None, 'standardItemDesc': '肾功能评价，测定肾功能损害程度及估计预后；血尿酸增高对高尿酸血症、痛风有诊断意义。肾功能不全出现肌酐升高', 'standardItemId': 33, 'standardItemName': '尿素氮(BUN)、肌酐(Cr)、尿酸(UA)', 'standardItemNotice': '1.有相关疾病提前告知，检查时积极配合医生完成检查时操作；2.避免精神紧张与压力', 'standardItemPurpose': '对耳、鼻、喉、咽的常规性检查', 'stationId': 'HL99998', 'tagName': '心胸肺及腰椎'}, {'addFrom': 0, 'canAdd': 1, 'desc': '', 'discount': 0.9, 'gender': 0, 'id': 102935, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0039', 'itemTagId': 12, 'name': '血HCG', 'notice': '检前几天清淡饮食，空腹检查，采血前禁食12小时', 'optimisticLockId': '102935', 'optimisticLockVersion': 1605852490000, 'orderNum': None, 'originalPrice': 0.0, 'price': 3300, 'purpose': '早孕诊断以及与HCG相关性疾病的诊断', 'reason': '早孕的血液学诊断，也是某些疾病的辅助判断项目。', 'salePrice': 0.02, 'specialRemark': None, 'standardItemDesc': '', 'standardItemId': 772, 'standardItemName': '血HCG', 'standardItemNotice': '检前几天清淡饮食，空腹检查，采血前禁食12小时', 'standardItemPurpose': '早孕诊断以及与HCG相关性疾病的诊断', 'stationId': 'HL99998', 'tagName': '女性检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '妇科的常见病原体有细菌、病毒、真菌、寄生虫等广泛的存在于泌尿生殖道中，感染引起阴道炎症。常见的感染病原体：真菌（白色念珠菌）、毛滴虫、HPV等，阴道炎还有可能是其他的病原体如支原体感染所致，如解脲支原体、沙眼衣原体、抗生殖支原体等。', 'discount': None, 'gender': 2, 'id': 102936, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'FK00001', 'itemTagId': 12, 'name': '妇科检查', 'notice': '1.检查前一天要避免性生活，避免影响检查结果；2.必检经期进行检查，并选择最佳的检查时间；3.计划检查前24～48小时内不要冲洗阴道或使用置入阴道的栓剂，也不要进行阴道内诊检查。', 'optimisticLockId': '102936', 'optimisticLockVersion': 1601193171000, 'orderNum': None, 'originalPrice': 99.0, 'price': 2000, 'purpose': '妇科疾病是否由病原体感染。', 'reason': '妇科疾病严重者会引起不孕不育，重视妇科检查，行早发现早治疗原则。', 'salePrice': 0.01, 'specialRemark': None, 'standardItemDesc': '妇科的常见病原体有细菌、病毒、真菌、寄生虫等广泛的存在于泌尿生殖道中，感染引起阴道炎症。常见的感染病原体：真菌（白色念珠菌）、毛滴虫、HPV等，阴道炎还有可能是其他的病原体如支原体感染所致，如解脲支原体、沙眼衣原体、抗生殖支原体等。', 'standardItemId': 863, 'standardItemName': '妇科病原体检查', 'standardItemNotice': '1.检查前一天要避免性生活，避免影响检查结果；2.必检经期进行检查，并选择最佳的检查时间；3.计划检查前24～48小时内不要冲洗阴道或使用置入阴道的栓剂，也不要进行阴道内诊检查。', 'standardItemPurpose': '妇科疾病是否由病原体感染。', 'stationId': 'HL99998', 'tagName': '女性检查'}], 'total': 175}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:47:18,289-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:18,290-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:18,291-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:18,293-[INFO]-logger.py-Unit_test-日志信息:正在执行第31条用例:【项目管理】2-时间戳一致-医院体检项目-编辑医院体检项-用户a页面1保存-成功
2020-12-28 09:47:18,294-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/item/examHospital/update；method：POST；data：{"name":"尿常规","standardItemName":"尿常规","tcLoading":'false',"standardItemId":106,"canAdd":1,"desc":"尿常规是医学检验“三大常规”项目之一，通过对尿液成分、形状等进行分析，用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能，还可用于协助检查其他系统疾病，如糖尿病、高血压、肝炎等。","purpose":"用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等","notice":"1.尽量留取晨尿，留取时需选择中段尿（10ml以上)\n2.女性月经期及其前后3-5天一般不宜留取尿液送检，以免经血混入小便，造成血尿的假象；\n3.尿液留取后需尽快送实验室检查；\n4.检测前一天应当避免同房、剧烈运动等；前一天晚上8点后避免大量进食、饮水。\n5. 检测前不要使用抗菌药物，以免影响检查结果的准确性。","isAdd":1,"salePrice":6,"originalPrice":'',"price":600,"discount":1,"id":102926,"itemId":"HY0002","reason":"检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等","stationId":"HL99998","gender":0,"specialRemark":"尿常规尿常规尿常规尿常规eeeee11111111","addFrom":0,"isHospitalIntroUsed":1,"isLimosis":'false',"isUrine":'false',"itemTagId":18,"orderNum":'',"standardItemDesc":"尿常规是医学检验“三大常规”项目之一，通过对尿液成分、形状等进行分析，用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能，还可用于协助检查其他系统疾病，如糖尿病、高血压、肝炎等。","standardItemNotice":"1.尽量留取晨尿，留取时需选择中段尿（10ml以上)\n2.女性月经期及其前后3-5天一般不宜留取尿液送检，以免经血混入小便，造成血尿的假象；\n3.尿液留取后需尽快送实验室检查；\n4.检测前一天应当避免同房、剧烈运动等；前一天晚上8点后避免大量进食、饮水。\n5. 检测前不要使用抗菌药物，以免影响检查结果的准确性。","standardItemPurpose":"用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等","tagName":"必选检查","selected":'false'}；sql：{}
2020-12-28 09:47:18,296-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:18,327-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:18,329-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:18,359-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:18,361-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:18,405-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:18,406-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:18,432-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:18,434-[INFO]-logger.py-all_method-日志信息:体检列表详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/item/examHospital/list/HL99998/1/10
2020-12-28 09:47:18,485-[INFO]-logger.py-all_method-日志信息:体检列表详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'list': [{'addFrom': 0, 'canAdd': 1, 'desc': '尿常规是医学检验“三大常规”项目之一，通过对尿液成分、形状等进行分析，用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能，还可用于协助检查其他系统疾病，如糖尿病、高血压、肝炎等。', 'discount': 1.0, 'gender': 0, 'id': 102926, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0002', 'itemTagId': 18, 'name': '尿常规', 'notice': '1.尽量留取晨尿，留取时需选择中段尿（10ml以上)\n2.女性月经期及其前后3-5天一般不宜留取尿液送检，以免经血混入小便，造成血尿的假象；\n3.尿液留取后需尽快送实验室检查；\n4.检测前一天应当避免同房、剧烈运动等；前一天晚上8点后避免大量进食、饮水。\n5. 检测前不要使用抗菌药物，以免影响检查结果的准确性。', 'optimisticLockId': '102926', 'optimisticLockVersion': 1609117876000, 'orderNum': None, 'originalPrice': None, 'price': 600, 'purpose': '用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'reason': '检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'salePrice': 6.0, 'specialRemark': '尿常规尿常规尿常规尿常规eeeee11111111', 'standardItemDesc': '尿常规是医学检验“三大常规”项目之一，通过对尿液成分、形状等进行分析，用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能，还可用于协助检查其他系统疾病，如糖尿病、高血压、肝炎等。', 'standardItemId': 106, 'standardItemName': '尿常规', 'standardItemNotice': '1.尽量留取晨尿，留取时需选择中段尿（10ml以上)\n2.女性月经期及其前后3-5天一般不宜留取尿液送检，以免经血混入小便，造成血尿的假象；\n3.尿液留取后需尽快送实验室检查；\n4.检测前一天应当避免同房、剧烈运动等；前一天晚上8点后避免大量进食、饮水。\n5. 检测前不要使用抗菌药物，以免影响检查结果的准确性。', 'standardItemPurpose': '用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'stationId': 'HL99998', 'tagName': '必选检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '生化全套检查内容包括：肝功能；血脂；空腹血糖；肾功能；尿酸等', 'discount': None, 'gender': 0, 'id': 102927, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0022', 'itemTagId': 18, 'name': '生化全项', 'notice': '1.抽血检查前避免劳累、运动、喝酒、情绪激动，饮食宜清淡； 2.抽血前一天不吃过于油腻、高蛋白食物，避免大量饮酒，抽血前禁食12小时； 3.检查前保证足够的睡眠时间，避免熬夜； 4.检查前若患有感冒并服用药物，建议感冒痊愈且停药后1周做检查', 'optimisticLockId': '102927', 'optimisticLockVersion': 1605591291000, 'orderNum': None, 'originalPrice': 100.0, 'price': 27800, 'purpose': '常规体检普查；用于疾病的筛查和确证试验', 'reason': '比普通的单项的生化检查查的更全、性价比更高，检查的项目多', 'salePrice': 0.02, 'specialRemark': '这是特殊说明，这个会有不一样哦，哈哈哈哈，看看怎么现实的额吧，一定要显示正常哦\n但是大家时间了洛杉矶大家都是家里都是垃圾的时间是多久的积极的角度', 'standardItemDesc': '生化全套检查内容包括：肝功能；血脂；空腹血糖；肾功能；尿酸等', 'standardItemId': 696, 'standardItemName': '体检生化全套', 'standardItemNotice': '1.抽血检查前避免劳累、运动、喝酒、情绪激动，饮食宜清淡； 2.抽血前一天不吃过于油腻、高蛋白食物，避免大量饮酒，抽血前禁食12小时； 3.检查前保证足够的睡眠时间，避免熬夜； 4.检查前若患有感冒并服用药物，建议感冒痊愈且停药后1周做检查', 'standardItemPurpose': '常规体检普查；用于疾病的筛查和确证试验', 'stationId': 'HL99998', 'tagName': '必选检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '阴道或尿道分泌物中查解尿支原体，其不仅可引起阴道、宫颈等生殖器感染，而且与流产、不育及胎儿宫内发育迟缓有密切关系。', 'discount': None, 'gender': 2, 'id': 102928, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'JK0002', 'itemTagId': 12, 'name': '一次性材料费', 'notice': '女性月经干净后１周后检查，检查前避免同房，一旦阳性，需要男女同治，治疗期间避免同房。', 'optimisticLockId': '102928', 'optimisticLockVersion': 1605687610000, 'orderNum': None, 'originalPrice': None, 'price': 2000, 'purpose': '了解是否感染了解尿支原体', 'reason': '早发现早治疗', 'salePrice': 0.01, 'specialRemark': '一次性材料费', 'standardItemDesc': '阴道或尿道分泌物中查解尿支原体，其不仅可引起阴道、宫颈等生殖器感染，而且与流产、不育及胎儿宫内发育迟缓有密切关系。', 'standardItemId': 823, 'standardItemName': '解尿支原体', 'standardItemNotice': '女性月经干净后１周后检查，检查前避免同房，一旦阳性，需要男女同治，治疗期间避免同房。', 'standardItemPurpose': '了解是否感染了解尿支原体', 'stationId': 'HL99998', 'tagName': '女性检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '', 'discount': None, 'gender': 2, 'id': 102929, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0037', 'itemTagId': 12, 'name': '血脂全项', 'notice': '1.做TCT检查前24小时避免性生活。2.在做TCT检查前3天内不要冲洗阴道或使用阴道栓剂，也不要做阴道内诊。3.如有炎症先治疗，然后再做TCT检查，以免影响诊断结果。4.TCT检查最好安排在月经结束后的3-7天。', 'optimisticLockId': '102929', 'optimisticLockVersion': 1601276410000, 'orderNum': None, 'originalPrice': None, 'price': 6600, 'purpose': '宫颈癌的筛查', 'reason': '面对女性的宫颈癌高发，妇科检查+液基细胞学检查都应该定期检查，TCT技术是应用于妇女宫颈癌筛查的一项先进的技术。', 'salePrice': 66.0, 'specialRemark': None, 'standardItemDesc': '', 'standardItemId': 745, 'standardItemName': '妇科检查+液基细胞学检查', 'standardItemNotice': '1.做TCT检查前24小时避免性生活。2.在做TCT检查前3天内不要冲洗阴道或使用阴道栓剂，也不要做阴道内诊。3.如有炎症先治疗，然后再做TCT检查，以免影响诊断结果。4.TCT检查最好安排在月经结束后的3-7天。', 'standardItemPurpose': '宫颈癌的筛查', 'stationId': 'HL99998', 'tagName': '女性检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '', 'discount': 1.0, 'gender': 1, 'id': 102930, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'DR0001', 'itemTagId': 16, 'name': '颈椎DR三位片', 'notice': '不带任何项链，裸露检查部位，勿要携带金属物品置于身检查；避免紧张积极配合医生检查；备孕或者孕妇不适宜X线类的检查。', 'optimisticLockId': '102930', 'optimisticLockVersion': 1600699015000, 'orderNum': None, 'originalPrice': None, 'price': 26000, 'purpose': '对颈椎进行较为全面的检查', 'reason': '越来越多的人受到颈椎病的困扰，及时早期治疗有较大意义，更加重视颈椎健康。', 'salePrice': 0.01, 'specialRemark': None, 'standardItemDesc': '', 'standardItemId': 746, 'standardItemName': '颈椎正侧双斜位（颈椎四位片）', 'standardItemNotice': '不带任何项链，裸露检查部位，勿要携带金属物品置于身检查；避免紧张积极配合医生检查；备孕或者孕妇不适宜X线类的检查。', 'standardItemPurpose': '对颈椎进行较为全面的检查', 'stationId': 'HL99998', 'tagName': '腰颈椎检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '哇哇哇哇哇哇哇哇哇哇哇哇下踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'discount': None, 'gender': 0, 'id': 102931, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'NK0001', 'itemTagId': 11, 'name': '内科检查(必检）', 'notice': '1.医生评估能否适合做该项检查。\n2.消化道不通畅的患者，进行胶囊内镜检查时要慎重，如经检查证实或怀疑患有消化道畸形、胃肠道梗阻、消化道穿孔、消化道狭窄或瘘管者禁做；对高分子材料过敏者禁做以及其他医生诊断不建议做者禁做。\n', 'optimisticLockId': '102931', 'optimisticLockVersion': 1600847799000, 'orderNum': None, 'originalPrice': None, 'price': 800, 'purpose': '消化道疾病尤其是小肠疾病诊断的首选方法顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶踩踩踩踩踩踩踩踩踩', 'reason': '检查过程中无需麻醉、不需住院，行动自如，不耽误正常的工作和生活；舒适检查手段无痛无创，满足耐受性较差的人群查病，提高诊断胃肠道疾病准确率，对小肠都能进行检查。', 'salePrice': 2.0, 'specialRemark': None, 'standardItemDesc': '哇哇哇哇哇哇哇哇哇哇哇哇下踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'standardItemId': 500, 'standardItemName': '智能胶囊内窥镜检测', 'standardItemNotice': '1.医生评估能否适合做该项检查。\n2.消化道不通畅的患者，进行胶囊内镜检查时要慎重，如经检查证实或怀疑患有消化道畸形、胃肠道梗阻、消化道穿孔、消化道狭窄或瘘管者禁做；对高分子材料过敏者禁做以及其他医生诊断不建议做者禁做。\n', 'standardItemPurpose': '消化道疾病尤其是小肠疾病诊断的首选方法顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶踩踩踩踩踩踩踩踩踩', 'stationId': 'HL99998', 'tagName': '胃部疾病检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '总胆固醇、甘油三酯、高密度脂蛋白胆固醇、低密度脂蛋白胆固醇、测定血清中血脂含量，它们的增高或降低与动脉粥样硬化的形成有很大的关系。', 'discount': 0.1, 'gender': 0, 'id': 102932, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'WK0001', 'itemTagId': 7, 'name': '外科检查', 'notice': '1.一般最合适的时间是在当月月经结束后的3-7天内。2.妇科常规检查当日应穿着便于检查的衣服，长度适中的裙子是最好的选择。3.妇科常规检查的前一天晚上洗澡要选择淋浴，检查前24小时内不能洗阴道内部。4.检查前一晚避免性生活，不使用任何阴道药物', 'optimisticLockId': '102932', 'optimisticLockVersion': 1600760522000, 'orderNum': None, 'originalPrice': 111.0, 'price': 500, 'purpose': '检查子宫大小位置有无异常，看阴道黏膜表面是否光滑，白带是否异常有无病原体，宫颈上有没有肿物、溃疡、糜烂、息肉等', 'reason': '推荐理由', 'salePrice': 100.0, 'specialRemark': None, 'standardItemDesc': '总胆固醇、甘油三酯、高密度脂蛋白胆固醇、低密度脂蛋白胆固醇、测定血清中血脂含量，它们的增高或降低与动脉粥样硬化的形成有很大的关系。', 'standardItemId': 37, 'standardItemName': '血脂四项', 'standardItemNotice': '1.一般最合适的时间是在当月月经结束后的3-7天内。2.妇科常规检查当日应穿着便于检查的衣服，长度适中的裙子是最好的选择。3.妇科常规检查的前一天晚上洗澡要选择淋浴，检查前24小时内不能洗阴道内部。4.检查前一晚避免性生活，不使用任何阴道药物', 'standardItemPurpose': '检查子宫大小位置有无异常，看阴道黏膜表面是否光滑，白带是否异常有无病原体，宫颈上有没有肿物、溃疡、糜烂、息肉等', 'stationId': 'HL99998', 'tagName': '肿瘤生化'}, {'addFrom': 0, 'canAdd': 1, 'desc': '肾功能评价，测定肾功能损害程度及估计预后；血尿酸增高对高尿酸血症、痛风有诊断意义。肾功能不全出现肌酐升高', 'discount': None, 'gender': 0, 'id': 102934, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'WG0002', 'itemTagId': 3, 'name': '耳鼻喉科检查', 'notice': '1.有相关疾病提前告知，检查时积极配合医生完成检查时操作；2.避免精神紧张与压力', 'optimisticLockId': '102934', 'optimisticLockVersion': 1599546857000, 'orderNum': None, 'originalPrice': None, 'price': 800, 'purpose': '对耳、鼻、喉、咽的常规性检查', 'reason': '推荐理由', 'salePrice': 0.01, 'specialRemark': None, 'standardItemDesc': '肾功能评价，测定肾功能损害程度及估计预后；血尿酸增高对高尿酸血症、痛风有诊断意义。肾功能不全出现肌酐升高', 'standardItemId': 33, 'standardItemName': '尿素氮(BUN)、肌酐(Cr)、尿酸(UA)', 'standardItemNotice': '1.有相关疾病提前告知，检查时积极配合医生完成检查时操作；2.避免精神紧张与压力', 'standardItemPurpose': '对耳、鼻、喉、咽的常规性检查', 'stationId': 'HL99998', 'tagName': '心胸肺及腰椎'}, {'addFrom': 0, 'canAdd': 1, 'desc': '', 'discount': 0.9, 'gender': 0, 'id': 102935, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0039', 'itemTagId': 12, 'name': '血HCG', 'notice': '检前几天清淡饮食，空腹检查，采血前禁食12小时', 'optimisticLockId': '102935', 'optimisticLockVersion': 1605852490000, 'orderNum': None, 'originalPrice': 0.0, 'price': 3300, 'purpose': '早孕诊断以及与HCG相关性疾病的诊断', 'reason': '早孕的血液学诊断，也是某些疾病的辅助判断项目。', 'salePrice': 0.02, 'specialRemark': None, 'standardItemDesc': '', 'standardItemId': 772, 'standardItemName': '血HCG', 'standardItemNotice': '检前几天清淡饮食，空腹检查，采血前禁食12小时', 'standardItemPurpose': '早孕诊断以及与HCG相关性疾病的诊断', 'stationId': 'HL99998', 'tagName': '女性检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '妇科的常见病原体有细菌、病毒、真菌、寄生虫等广泛的存在于泌尿生殖道中，感染引起阴道炎症。常见的感染病原体：真菌（白色念珠菌）、毛滴虫、HPV等，阴道炎还有可能是其他的病原体如支原体感染所致，如解脲支原体、沙眼衣原体、抗生殖支原体等。', 'discount': None, 'gender': 2, 'id': 102936, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'FK00001', 'itemTagId': 12, 'name': '妇科检查', 'notice': '1.检查前一天要避免性生活，避免影响检查结果；2.必检经期进行检查，并选择最佳的检查时间；3.计划检查前24～48小时内不要冲洗阴道或使用置入阴道的栓剂，也不要进行阴道内诊检查。', 'optimisticLockId': '102936', 'optimisticLockVersion': 1601193171000, 'orderNum': None, 'originalPrice': 99.0, 'price': 2000, 'purpose': '妇科疾病是否由病原体感染。', 'reason': '妇科疾病严重者会引起不孕不育，重视妇科检查，行早发现早治疗原则。', 'salePrice': 0.01, 'specialRemark': None, 'standardItemDesc': '妇科的常见病原体有细菌、病毒、真菌、寄生虫等广泛的存在于泌尿生殖道中，感染引起阴道炎症。常见的感染病原体：真菌（白色念珠菌）、毛滴虫、HPV等，阴道炎还有可能是其他的病原体如支原体感染所致，如解脲支原体、沙眼衣原体、抗生殖支原体等。', 'standardItemId': 863, 'standardItemName': '妇科病原体检查', 'standardItemNotice': '1.检查前一天要避免性生活，避免影响检查结果；2.必检经期进行检查，并选择最佳的检查时间；3.计划检查前24～48小时内不要冲洗阴道或使用置入阴道的栓剂，也不要进行阴道内诊检查。', 'standardItemPurpose': '妇科疾病是否由病原体感染。', 'stationId': 'HL99998', 'tagName': '女性检查'}], 'total': 175}, 'success': True}
2020-12-28 09:47:18,491-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609117876000,时间戳id:102926
2020-12-28 09:47:18,492-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:47:18,643-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.346801s
2020-12-28 09:47:18,644-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:47:18,645-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.346801, 'data': None, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:47:19,583-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:19,584-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:19,585-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:19,587-[INFO]-logger.py-Unit_test-日志信息:正在执行第32条用例:【项目管理】3-时间戳不一致-医院体检项目-编辑医院体检项-用户a页面2时间戳1保存-失败
2020-12-28 09:47:19,588-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/item/examHospital/update；method：POST；data：{"name":"尿常规","standardItemName":"尿常规","tcLoading":'false',"standardItemId":106,"canAdd":1,"desc":"尿常规是医学检验“三大常规”项目之一，通过对尿液成分、形状等进行分析，用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能，还可用于协助检查其他系统疾病，如糖尿病、高血压、肝炎等。","purpose":"用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等","notice":"1.尽量留取晨尿，留取时需选择中段尿（10ml以上)\n2.女性月经期及其前后3-5天一般不宜留取尿液送检，以免经血混入小便，造成血尿的假象；\n3.尿液留取后需尽快送实验室检查；\n4.检测前一天应当避免同房、剧烈运动等；前一天晚上8点后避免大量进食、饮水。\n5. 检测前不要使用抗菌药物，以免影响检查结果的准确性。","isAdd":1,"salePrice":6,"originalPrice":'',"price":600,"discount":1,"id":102926,"itemId":"HY0002","reason":"检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等","stationId":"HL99998","gender":0,"specialRemark":"尿常规尿常规尿常规尿常规eeeee11111111","addFrom":0,"isHospitalIntroUsed":1,"isLimosis":'false',"isUrine":'false',"itemTagId":18,"orderNum":'',"standardItemDesc":"尿常规是医学检验“三大常规”项目之一，通过对尿液成分、形状等进行分析，用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能，还可用于协助检查其他系统疾病，如糖尿病、高血压、肝炎等。","standardItemNotice":"1.尽量留取晨尿，留取时需选择中段尿（10ml以上)\n2.女性月经期及其前后3-5天一般不宜留取尿液送检，以免经血混入小便，造成血尿的假象；\n3.尿液留取后需尽快送实验室检查；\n4.检测前一天应当避免同房、剧烈运动等；前一天晚上8点后避免大量进食、饮水。\n5. 检测前不要使用抗菌药物，以免影响检查结果的准确性。","standardItemPurpose":"用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等","tagName":"必选检查","selected":'false'}；sql：{}
2020-12-28 09:47:19,590-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:19,642-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:19,643-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:19,681-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:19,683-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:19,720-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:19,722-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:19,752-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:19,753-[INFO]-logger.py-all_method-日志信息:体检列表详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/item/examHospital/list/HL99998/1/10
2020-12-28 09:47:19,806-[INFO]-logger.py-all_method-日志信息:体检列表详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'list': [{'addFrom': 0, 'canAdd': 1, 'desc': '尿常规是医学检验“三大常规”项目之一，通过对尿液成分、形状等进行分析，用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能，还可用于协助检查其他系统疾病，如糖尿病、高血压、肝炎等。', 'discount': 1.0, 'gender': 0, 'id': 102926, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0002', 'itemTagId': 18, 'name': '尿常规', 'notice': '1.尽量留取晨尿，留取时需选择中段尿（10ml以上)\n2.女性月经期及其前后3-5天一般不宜留取尿液送检，以免经血混入小便，造成血尿的假象；\n3.尿液留取后需尽快送实验室检查；\n4.检测前一天应当避免同房、剧烈运动等；前一天晚上8点后避免大量进食、饮水。\n5. 检测前不要使用抗菌药物，以免影响检查结果的准确性。', 'optimisticLockId': '102926', 'optimisticLockVersion': 1609120038000, 'orderNum': None, 'originalPrice': None, 'price': 600, 'purpose': '用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'reason': '检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'salePrice': 6.0, 'specialRemark': '尿常规尿常规尿常规尿常规eeeee11111111', 'standardItemDesc': '尿常规是医学检验“三大常规”项目之一，通过对尿液成分、形状等进行分析，用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能，还可用于协助检查其他系统疾病，如糖尿病、高血压、肝炎等。', 'standardItemId': 106, 'standardItemName': '尿常规', 'standardItemNotice': '1.尽量留取晨尿，留取时需选择中段尿（10ml以上)\n2.女性月经期及其前后3-5天一般不宜留取尿液送检，以免经血混入小便，造成血尿的假象；\n3.尿液留取后需尽快送实验室检查；\n4.检测前一天应当避免同房、剧烈运动等；前一天晚上8点后避免大量进食、饮水。\n5. 检测前不要使用抗菌药物，以免影响检查结果的准确性。', 'standardItemPurpose': '用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'stationId': 'HL99998', 'tagName': '必选检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '生化全套检查内容包括：肝功能；血脂；空腹血糖；肾功能；尿酸等', 'discount': None, 'gender': 0, 'id': 102927, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0022', 'itemTagId': 18, 'name': '生化全项', 'notice': '1.抽血检查前避免劳累、运动、喝酒、情绪激动，饮食宜清淡； 2.抽血前一天不吃过于油腻、高蛋白食物，避免大量饮酒，抽血前禁食12小时； 3.检查前保证足够的睡眠时间，避免熬夜； 4.检查前若患有感冒并服用药物，建议感冒痊愈且停药后1周做检查', 'optimisticLockId': '102927', 'optimisticLockVersion': 1605591291000, 'orderNum': None, 'originalPrice': 100.0, 'price': 27800, 'purpose': '常规体检普查；用于疾病的筛查和确证试验', 'reason': '比普通的单项的生化检查查的更全、性价比更高，检查的项目多', 'salePrice': 0.02, 'specialRemark': '这是特殊说明，这个会有不一样哦，哈哈哈哈，看看怎么现实的额吧，一定要显示正常哦\n但是大家时间了洛杉矶大家都是家里都是垃圾的时间是多久的积极的角度', 'standardItemDesc': '生化全套检查内容包括：肝功能；血脂；空腹血糖；肾功能；尿酸等', 'standardItemId': 696, 'standardItemName': '体检生化全套', 'standardItemNotice': '1.抽血检查前避免劳累、运动、喝酒、情绪激动，饮食宜清淡； 2.抽血前一天不吃过于油腻、高蛋白食物，避免大量饮酒，抽血前禁食12小时； 3.检查前保证足够的睡眠时间，避免熬夜； 4.检查前若患有感冒并服用药物，建议感冒痊愈且停药后1周做检查', 'standardItemPurpose': '常规体检普查；用于疾病的筛查和确证试验', 'stationId': 'HL99998', 'tagName': '必选检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '阴道或尿道分泌物中查解尿支原体，其不仅可引起阴道、宫颈等生殖器感染，而且与流产、不育及胎儿宫内发育迟缓有密切关系。', 'discount': None, 'gender': 2, 'id': 102928, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'JK0002', 'itemTagId': 12, 'name': '一次性材料费', 'notice': '女性月经干净后１周后检查，检查前避免同房，一旦阳性，需要男女同治，治疗期间避免同房。', 'optimisticLockId': '102928', 'optimisticLockVersion': 1605687610000, 'orderNum': None, 'originalPrice': None, 'price': 2000, 'purpose': '了解是否感染了解尿支原体', 'reason': '早发现早治疗', 'salePrice': 0.01, 'specialRemark': '一次性材料费', 'standardItemDesc': '阴道或尿道分泌物中查解尿支原体，其不仅可引起阴道、宫颈等生殖器感染，而且与流产、不育及胎儿宫内发育迟缓有密切关系。', 'standardItemId': 823, 'standardItemName': '解尿支原体', 'standardItemNotice': '女性月经干净后１周后检查，检查前避免同房，一旦阳性，需要男女同治，治疗期间避免同房。', 'standardItemPurpose': '了解是否感染了解尿支原体', 'stationId': 'HL99998', 'tagName': '女性检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '', 'discount': None, 'gender': 2, 'id': 102929, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0037', 'itemTagId': 12, 'name': '血脂全项', 'notice': '1.做TCT检查前24小时避免性生活。2.在做TCT检查前3天内不要冲洗阴道或使用阴道栓剂，也不要做阴道内诊。3.如有炎症先治疗，然后再做TCT检查，以免影响诊断结果。4.TCT检查最好安排在月经结束后的3-7天。', 'optimisticLockId': '102929', 'optimisticLockVersion': 1601276410000, 'orderNum': None, 'originalPrice': None, 'price': 6600, 'purpose': '宫颈癌的筛查', 'reason': '面对女性的宫颈癌高发，妇科检查+液基细胞学检查都应该定期检查，TCT技术是应用于妇女宫颈癌筛查的一项先进的技术。', 'salePrice': 66.0, 'specialRemark': None, 'standardItemDesc': '', 'standardItemId': 745, 'standardItemName': '妇科检查+液基细胞学检查', 'standardItemNotice': '1.做TCT检查前24小时避免性生活。2.在做TCT检查前3天内不要冲洗阴道或使用阴道栓剂，也不要做阴道内诊。3.如有炎症先治疗，然后再做TCT检查，以免影响诊断结果。4.TCT检查最好安排在月经结束后的3-7天。', 'standardItemPurpose': '宫颈癌的筛查', 'stationId': 'HL99998', 'tagName': '女性检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '', 'discount': 1.0, 'gender': 1, 'id': 102930, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'DR0001', 'itemTagId': 16, 'name': '颈椎DR三位片', 'notice': '不带任何项链，裸露检查部位，勿要携带金属物品置于身检查；避免紧张积极配合医生检查；备孕或者孕妇不适宜X线类的检查。', 'optimisticLockId': '102930', 'optimisticLockVersion': 1600699015000, 'orderNum': None, 'originalPrice': None, 'price': 26000, 'purpose': '对颈椎进行较为全面的检查', 'reason': '越来越多的人受到颈椎病的困扰，及时早期治疗有较大意义，更加重视颈椎健康。', 'salePrice': 0.01, 'specialRemark': None, 'standardItemDesc': '', 'standardItemId': 746, 'standardItemName': '颈椎正侧双斜位（颈椎四位片）', 'standardItemNotice': '不带任何项链，裸露检查部位，勿要携带金属物品置于身检查；避免紧张积极配合医生检查；备孕或者孕妇不适宜X线类的检查。', 'standardItemPurpose': '对颈椎进行较为全面的检查', 'stationId': 'HL99998', 'tagName': '腰颈椎检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '哇哇哇哇哇哇哇哇哇哇哇哇下踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'discount': None, 'gender': 0, 'id': 102931, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'NK0001', 'itemTagId': 11, 'name': '内科检查(必检）', 'notice': '1.医生评估能否适合做该项检查。\n2.消化道不通畅的患者，进行胶囊内镜检查时要慎重，如经检查证实或怀疑患有消化道畸形、胃肠道梗阻、消化道穿孔、消化道狭窄或瘘管者禁做；对高分子材料过敏者禁做以及其他医生诊断不建议做者禁做。\n', 'optimisticLockId': '102931', 'optimisticLockVersion': 1600847799000, 'orderNum': None, 'originalPrice': None, 'price': 800, 'purpose': '消化道疾病尤其是小肠疾病诊断的首选方法顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶踩踩踩踩踩踩踩踩踩', 'reason': '检查过程中无需麻醉、不需住院，行动自如，不耽误正常的工作和生活；舒适检查手段无痛无创，满足耐受性较差的人群查病，提高诊断胃肠道疾病准确率，对小肠都能进行检查。', 'salePrice': 2.0, 'specialRemark': None, 'standardItemDesc': '哇哇哇哇哇哇哇哇哇哇哇哇下踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'standardItemId': 500, 'standardItemName': '智能胶囊内窥镜检测', 'standardItemNotice': '1.医生评估能否适合做该项检查。\n2.消化道不通畅的患者，进行胶囊内镜检查时要慎重，如经检查证实或怀疑患有消化道畸形、胃肠道梗阻、消化道穿孔、消化道狭窄或瘘管者禁做；对高分子材料过敏者禁做以及其他医生诊断不建议做者禁做。\n', 'standardItemPurpose': '消化道疾病尤其是小肠疾病诊断的首选方法顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶踩踩踩踩踩踩踩踩踩', 'stationId': 'HL99998', 'tagName': '胃部疾病检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '总胆固醇、甘油三酯、高密度脂蛋白胆固醇、低密度脂蛋白胆固醇、测定血清中血脂含量，它们的增高或降低与动脉粥样硬化的形成有很大的关系。', 'discount': 0.1, 'gender': 0, 'id': 102932, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'WK0001', 'itemTagId': 7, 'name': '外科检查', 'notice': '1.一般最合适的时间是在当月月经结束后的3-7天内。2.妇科常规检查当日应穿着便于检查的衣服，长度适中的裙子是最好的选择。3.妇科常规检查的前一天晚上洗澡要选择淋浴，检查前24小时内不能洗阴道内部。4.检查前一晚避免性生活，不使用任何阴道药物', 'optimisticLockId': '102932', 'optimisticLockVersion': 1600760522000, 'orderNum': None, 'originalPrice': 111.0, 'price': 500, 'purpose': '检查子宫大小位置有无异常，看阴道黏膜表面是否光滑，白带是否异常有无病原体，宫颈上有没有肿物、溃疡、糜烂、息肉等', 'reason': '推荐理由', 'salePrice': 100.0, 'specialRemark': None, 'standardItemDesc': '总胆固醇、甘油三酯、高密度脂蛋白胆固醇、低密度脂蛋白胆固醇、测定血清中血脂含量，它们的增高或降低与动脉粥样硬化的形成有很大的关系。', 'standardItemId': 37, 'standardItemName': '血脂四项', 'standardItemNotice': '1.一般最合适的时间是在当月月经结束后的3-7天内。2.妇科常规检查当日应穿着便于检查的衣服，长度适中的裙子是最好的选择。3.妇科常规检查的前一天晚上洗澡要选择淋浴，检查前24小时内不能洗阴道内部。4.检查前一晚避免性生活，不使用任何阴道药物', 'standardItemPurpose': '检查子宫大小位置有无异常，看阴道黏膜表面是否光滑，白带是否异常有无病原体，宫颈上有没有肿物、溃疡、糜烂、息肉等', 'stationId': 'HL99998', 'tagName': '肿瘤生化'}, {'addFrom': 0, 'canAdd': 1, 'desc': '肾功能评价，测定肾功能损害程度及估计预后；血尿酸增高对高尿酸血症、痛风有诊断意义。肾功能不全出现肌酐升高', 'discount': None, 'gender': 0, 'id': 102934, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'WG0002', 'itemTagId': 3, 'name': '耳鼻喉科检查', 'notice': '1.有相关疾病提前告知，检查时积极配合医生完成检查时操作；2.避免精神紧张与压力', 'optimisticLockId': '102934', 'optimisticLockVersion': 1599546857000, 'orderNum': None, 'originalPrice': None, 'price': 800, 'purpose': '对耳、鼻、喉、咽的常规性检查', 'reason': '推荐理由', 'salePrice': 0.01, 'specialRemark': None, 'standardItemDesc': '肾功能评价，测定肾功能损害程度及估计预后；血尿酸增高对高尿酸血症、痛风有诊断意义。肾功能不全出现肌酐升高', 'standardItemId': 33, 'standardItemName': '尿素氮(BUN)、肌酐(Cr)、尿酸(UA)', 'standardItemNotice': '1.有相关疾病提前告知，检查时积极配合医生完成检查时操作；2.避免精神紧张与压力', 'standardItemPurpose': '对耳、鼻、喉、咽的常规性检查', 'stationId': 'HL99998', 'tagName': '心胸肺及腰椎'}, {'addFrom': 0, 'canAdd': 1, 'desc': '', 'discount': 0.9, 'gender': 0, 'id': 102935, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0039', 'itemTagId': 12, 'name': '血HCG', 'notice': '检前几天清淡饮食，空腹检查，采血前禁食12小时', 'optimisticLockId': '102935', 'optimisticLockVersion': 1605852490000, 'orderNum': None, 'originalPrice': 0.0, 'price': 3300, 'purpose': '早孕诊断以及与HCG相关性疾病的诊断', 'reason': '早孕的血液学诊断，也是某些疾病的辅助判断项目。', 'salePrice': 0.02, 'specialRemark': None, 'standardItemDesc': '', 'standardItemId': 772, 'standardItemName': '血HCG', 'standardItemNotice': '检前几天清淡饮食，空腹检查，采血前禁食12小时', 'standardItemPurpose': '早孕诊断以及与HCG相关性疾病的诊断', 'stationId': 'HL99998', 'tagName': '女性检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '妇科的常见病原体有细菌、病毒、真菌、寄生虫等广泛的存在于泌尿生殖道中，感染引起阴道炎症。常见的感染病原体：真菌（白色念珠菌）、毛滴虫、HPV等，阴道炎还有可能是其他的病原体如支原体感染所致，如解脲支原体、沙眼衣原体、抗生殖支原体等。', 'discount': None, 'gender': 2, 'id': 102936, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'FK00001', 'itemTagId': 12, 'name': '妇科检查', 'notice': '1.检查前一天要避免性生活，避免影响检查结果；2.必检经期进行检查，并选择最佳的检查时间；3.计划检查前24～48小时内不要冲洗阴道或使用置入阴道的栓剂，也不要进行阴道内诊检查。', 'optimisticLockId': '102936', 'optimisticLockVersion': 1601193171000, 'orderNum': None, 'originalPrice': 99.0, 'price': 2000, 'purpose': '妇科疾病是否由病原体感染。', 'reason': '妇科疾病严重者会引起不孕不育，重视妇科检查，行早发现早治疗原则。', 'salePrice': 0.01, 'specialRemark': None, 'standardItemDesc': '妇科的常见病原体有细菌、病毒、真菌、寄生虫等广泛的存在于泌尿生殖道中，感染引起阴道炎症。常见的感染病原体：真菌（白色念珠菌）、毛滴虫、HPV等，阴道炎还有可能是其他的病原体如支原体感染所致，如解脲支原体、沙眼衣原体、抗生殖支原体等。', 'standardItemId': 863, 'standardItemName': '妇科病原体检查', 'standardItemNotice': '1.检查前一天要避免性生活，避免影响检查结果；2.必检经期进行检查，并选择最佳的检查时间；3.计划检查前24～48小时内不要冲洗阴道或使用置入阴道的栓剂，也不要进行阴道内诊检查。', 'standardItemPurpose': '妇科疾病是否由病原体感染。', 'stationId': 'HL99998', 'tagName': '女性检查'}], 'total': 175}, 'success': True}
2020-12-28 09:47:19,810-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120038000,时间戳id:102926
2020-12-28 09:47:19,811-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:47:19,963-[INFO]-logger.py-httpRequest-日志信息:第一次保存headers：{'optimisticLockVersion': '1609120038000', 'optimisticLockId': '102926', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '0', 'errorMsg': '', 'result': None, 'success': True}
2020-12-28 09:47:20,070-[INFO]-logger.py-httpRequest-日志信息:第二次保存headers：{'optimisticLockVersion': '1609120038000', 'optimisticLockId': '102926', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '20289', 'errorMsg': '该项数据已被修改，请刷新后重试！', 'result': None, 'success': False}
2020-12-28 09:47:20,071-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.480784s
2020-12-28 09:47:20,072-[INFO]-logger.py-Unit_test-日志信息:接口返回message:该项数据已被修改，请刷新后重试！
2020-12-28 09:47:20,073-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20289
2020-12-28 09:47:20,074-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.480784, 'data': '该项数据已被修改，请刷新后重试！', 'code': '20289', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:47:20,995-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:20,996-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:20,998-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:20,999-[INFO]-logger.py-Unit_test-日志信息:正在执行第33条用例:【项目管理】4-时间戳不一致-医院体检项目-编辑医院体检项-用户b页面2时间戳1保存-失败
2020-12-28 09:47:21,000-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/item/examHospital/update；method：POST；data：{"name":"尿常规","standardItemName":"尿常规","tcLoading":'false',"standardItemId":106,"canAdd":1,"desc":"尿常规是医学检验“三大常规”项目之一，通过对尿液成分、形状等进行分析，用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能，还可用于协助检查其他系统疾病，如糖尿病、高血压、肝炎等。","purpose":"用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等","notice":"1.尽量留取晨尿，留取时需选择中段尿（10ml以上)\n2.女性月经期及其前后3-5天一般不宜留取尿液送检，以免经血混入小便，造成血尿的假象；\n3.尿液留取后需尽快送实验室检查；\n4.检测前一天应当避免同房、剧烈运动等；前一天晚上8点后避免大量进食、饮水。\n5. 检测前不要使用抗菌药物，以免影响检查结果的准确性。","isAdd":1,"salePrice":6,"originalPrice":'',"price":600,"discount":1,"id":102926,"itemId":"HY0002","reason":"检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等","stationId":"HL99998","gender":0,"specialRemark":"尿常规尿常规尿常规尿常规eeeee11111111","addFrom":0,"isHospitalIntroUsed":1,"isLimosis":'false',"isUrine":'false',"itemTagId":18,"orderNum":'',"standardItemDesc":"尿常规是医学检验“三大常规”项目之一，通过对尿液成分、形状等进行分析，用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能，还可用于协助检查其他系统疾病，如糖尿病、高血压、肝炎等。","standardItemNotice":"1.尽量留取晨尿，留取时需选择中段尿（10ml以上)\n2.女性月经期及其前后3-5天一般不宜留取尿液送检，以免经血混入小便，造成血尿的假象；\n3.尿液留取后需尽快送实验室检查；\n4.检测前一天应当避免同房、剧烈运动等；前一天晚上8点后避免大量进食、饮水。\n5. 检测前不要使用抗菌药物，以免影响检查结果的准确性。","standardItemPurpose":"用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等","tagName":"必选检查","selected":'false'}；sql：{}
2020-12-28 09:47:21,002-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:21,053-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:21,055-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:21,094-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:21,097-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:21,150-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:21,152-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:21,171-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:21,175-[INFO]-logger.py-all_method-日志信息:体检列表详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/item/examHospital/list/HL99998/1/10
2020-12-28 09:47:21,230-[INFO]-logger.py-all_method-日志信息:体检列表详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'list': [{'addFrom': 0, 'canAdd': 1, 'desc': '尿常规是医学检验“三大常规”项目之一，通过对尿液成分、形状等进行分析，用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能，还可用于协助检查其他系统疾病，如糖尿病、高血压、肝炎等。', 'discount': 1.0, 'gender': 0, 'id': 102926, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0002', 'itemTagId': 18, 'name': '尿常规', 'notice': '1.尽量留取晨尿，留取时需选择中段尿（10ml以上)\n2.女性月经期及其前后3-5天一般不宜留取尿液送检，以免经血混入小便，造成血尿的假象；\n3.尿液留取后需尽快送实验室检查；\n4.检测前一天应当避免同房、剧烈运动等；前一天晚上8点后避免大量进食、饮水。\n5. 检测前不要使用抗菌药物，以免影响检查结果的准确性。', 'optimisticLockId': '102926', 'optimisticLockVersion': 1609120040000, 'orderNum': None, 'originalPrice': None, 'price': 600, 'purpose': '用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'reason': '检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'salePrice': 6.0, 'specialRemark': '尿常规尿常规尿常规尿常规eeeee11111111', 'standardItemDesc': '尿常规是医学检验“三大常规”项目之一，通过对尿液成分、形状等进行分析，用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能，还可用于协助检查其他系统疾病，如糖尿病、高血压、肝炎等。', 'standardItemId': 106, 'standardItemName': '尿常规', 'standardItemNotice': '1.尽量留取晨尿，留取时需选择中段尿（10ml以上)\n2.女性月经期及其前后3-5天一般不宜留取尿液送检，以免经血混入小便，造成血尿的假象；\n3.尿液留取后需尽快送实验室检查；\n4.检测前一天应当避免同房、剧烈运动等；前一天晚上8点后避免大量进食、饮水。\n5. 检测前不要使用抗菌药物，以免影响检查结果的准确性。', 'standardItemPurpose': '用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'stationId': 'HL99998', 'tagName': '必选检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '生化全套检查内容包括：肝功能；血脂；空腹血糖；肾功能；尿酸等', 'discount': None, 'gender': 0, 'id': 102927, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0022', 'itemTagId': 18, 'name': '生化全项', 'notice': '1.抽血检查前避免劳累、运动、喝酒、情绪激动，饮食宜清淡； 2.抽血前一天不吃过于油腻、高蛋白食物，避免大量饮酒，抽血前禁食12小时； 3.检查前保证足够的睡眠时间，避免熬夜； 4.检查前若患有感冒并服用药物，建议感冒痊愈且停药后1周做检查', 'optimisticLockId': '102927', 'optimisticLockVersion': 1605591291000, 'orderNum': None, 'originalPrice': 100.0, 'price': 27800, 'purpose': '常规体检普查；用于疾病的筛查和确证试验', 'reason': '比普通的单项的生化检查查的更全、性价比更高，检查的项目多', 'salePrice': 0.02, 'specialRemark': '这是特殊说明，这个会有不一样哦，哈哈哈哈，看看怎么现实的额吧，一定要显示正常哦\n但是大家时间了洛杉矶大家都是家里都是垃圾的时间是多久的积极的角度', 'standardItemDesc': '生化全套检查内容包括：肝功能；血脂；空腹血糖；肾功能；尿酸等', 'standardItemId': 696, 'standardItemName': '体检生化全套', 'standardItemNotice': '1.抽血检查前避免劳累、运动、喝酒、情绪激动，饮食宜清淡； 2.抽血前一天不吃过于油腻、高蛋白食物，避免大量饮酒，抽血前禁食12小时； 3.检查前保证足够的睡眠时间，避免熬夜； 4.检查前若患有感冒并服用药物，建议感冒痊愈且停药后1周做检查', 'standardItemPurpose': '常规体检普查；用于疾病的筛查和确证试验', 'stationId': 'HL99998', 'tagName': '必选检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '阴道或尿道分泌物中查解尿支原体，其不仅可引起阴道、宫颈等生殖器感染，而且与流产、不育及胎儿宫内发育迟缓有密切关系。', 'discount': None, 'gender': 2, 'id': 102928, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'JK0002', 'itemTagId': 12, 'name': '一次性材料费', 'notice': '女性月经干净后１周后检查，检查前避免同房，一旦阳性，需要男女同治，治疗期间避免同房。', 'optimisticLockId': '102928', 'optimisticLockVersion': 1605687610000, 'orderNum': None, 'originalPrice': None, 'price': 2000, 'purpose': '了解是否感染了解尿支原体', 'reason': '早发现早治疗', 'salePrice': 0.01, 'specialRemark': '一次性材料费', 'standardItemDesc': '阴道或尿道分泌物中查解尿支原体，其不仅可引起阴道、宫颈等生殖器感染，而且与流产、不育及胎儿宫内发育迟缓有密切关系。', 'standardItemId': 823, 'standardItemName': '解尿支原体', 'standardItemNotice': '女性月经干净后１周后检查，检查前避免同房，一旦阳性，需要男女同治，治疗期间避免同房。', 'standardItemPurpose': '了解是否感染了解尿支原体', 'stationId': 'HL99998', 'tagName': '女性检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '', 'discount': None, 'gender': 2, 'id': 102929, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0037', 'itemTagId': 12, 'name': '血脂全项', 'notice': '1.做TCT检查前24小时避免性生活。2.在做TCT检查前3天内不要冲洗阴道或使用阴道栓剂，也不要做阴道内诊。3.如有炎症先治疗，然后再做TCT检查，以免影响诊断结果。4.TCT检查最好安排在月经结束后的3-7天。', 'optimisticLockId': '102929', 'optimisticLockVersion': 1601276410000, 'orderNum': None, 'originalPrice': None, 'price': 6600, 'purpose': '宫颈癌的筛查', 'reason': '面对女性的宫颈癌高发，妇科检查+液基细胞学检查都应该定期检查，TCT技术是应用于妇女宫颈癌筛查的一项先进的技术。', 'salePrice': 66.0, 'specialRemark': None, 'standardItemDesc': '', 'standardItemId': 745, 'standardItemName': '妇科检查+液基细胞学检查', 'standardItemNotice': '1.做TCT检查前24小时避免性生活。2.在做TCT检查前3天内不要冲洗阴道或使用阴道栓剂，也不要做阴道内诊。3.如有炎症先治疗，然后再做TCT检查，以免影响诊断结果。4.TCT检查最好安排在月经结束后的3-7天。', 'standardItemPurpose': '宫颈癌的筛查', 'stationId': 'HL99998', 'tagName': '女性检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '', 'discount': 1.0, 'gender': 1, 'id': 102930, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'DR0001', 'itemTagId': 16, 'name': '颈椎DR三位片', 'notice': '不带任何项链，裸露检查部位，勿要携带金属物品置于身检查；避免紧张积极配合医生检查；备孕或者孕妇不适宜X线类的检查。', 'optimisticLockId': '102930', 'optimisticLockVersion': 1600699015000, 'orderNum': None, 'originalPrice': None, 'price': 26000, 'purpose': '对颈椎进行较为全面的检查', 'reason': '越来越多的人受到颈椎病的困扰，及时早期治疗有较大意义，更加重视颈椎健康。', 'salePrice': 0.01, 'specialRemark': None, 'standardItemDesc': '', 'standardItemId': 746, 'standardItemName': '颈椎正侧双斜位（颈椎四位片）', 'standardItemNotice': '不带任何项链，裸露检查部位，勿要携带金属物品置于身检查；避免紧张积极配合医生检查；备孕或者孕妇不适宜X线类的检查。', 'standardItemPurpose': '对颈椎进行较为全面的检查', 'stationId': 'HL99998', 'tagName': '腰颈椎检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '哇哇哇哇哇哇哇哇哇哇哇哇下踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'discount': None, 'gender': 0, 'id': 102931, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'NK0001', 'itemTagId': 11, 'name': '内科检查(必检）', 'notice': '1.医生评估能否适合做该项检查。\n2.消化道不通畅的患者，进行胶囊内镜检查时要慎重，如经检查证实或怀疑患有消化道畸形、胃肠道梗阻、消化道穿孔、消化道狭窄或瘘管者禁做；对高分子材料过敏者禁做以及其他医生诊断不建议做者禁做。\n', 'optimisticLockId': '102931', 'optimisticLockVersion': 1600847799000, 'orderNum': None, 'originalPrice': None, 'price': 800, 'purpose': '消化道疾病尤其是小肠疾病诊断的首选方法顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶踩踩踩踩踩踩踩踩踩', 'reason': '检查过程中无需麻醉、不需住院，行动自如，不耽误正常的工作和生活；舒适检查手段无痛无创，满足耐受性较差的人群查病，提高诊断胃肠道疾病准确率，对小肠都能进行检查。', 'salePrice': 2.0, 'specialRemark': None, 'standardItemDesc': '哇哇哇哇哇哇哇哇哇哇哇哇下踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'standardItemId': 500, 'standardItemName': '智能胶囊内窥镜检测', 'standardItemNotice': '1.医生评估能否适合做该项检查。\n2.消化道不通畅的患者，进行胶囊内镜检查时要慎重，如经检查证实或怀疑患有消化道畸形、胃肠道梗阻、消化道穿孔、消化道狭窄或瘘管者禁做；对高分子材料过敏者禁做以及其他医生诊断不建议做者禁做。\n', 'standardItemPurpose': '消化道疾病尤其是小肠疾病诊断的首选方法顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶踩踩踩踩踩踩踩踩踩', 'stationId': 'HL99998', 'tagName': '胃部疾病检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '总胆固醇、甘油三酯、高密度脂蛋白胆固醇、低密度脂蛋白胆固醇、测定血清中血脂含量，它们的增高或降低与动脉粥样硬化的形成有很大的关系。', 'discount': 0.1, 'gender': 0, 'id': 102932, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'WK0001', 'itemTagId': 7, 'name': '外科检查', 'notice': '1.一般最合适的时间是在当月月经结束后的3-7天内。2.妇科常规检查当日应穿着便于检查的衣服，长度适中的裙子是最好的选择。3.妇科常规检查的前一天晚上洗澡要选择淋浴，检查前24小时内不能洗阴道内部。4.检查前一晚避免性生活，不使用任何阴道药物', 'optimisticLockId': '102932', 'optimisticLockVersion': 1600760522000, 'orderNum': None, 'originalPrice': 111.0, 'price': 500, 'purpose': '检查子宫大小位置有无异常，看阴道黏膜表面是否光滑，白带是否异常有无病原体，宫颈上有没有肿物、溃疡、糜烂、息肉等', 'reason': '推荐理由', 'salePrice': 100.0, 'specialRemark': None, 'standardItemDesc': '总胆固醇、甘油三酯、高密度脂蛋白胆固醇、低密度脂蛋白胆固醇、测定血清中血脂含量，它们的增高或降低与动脉粥样硬化的形成有很大的关系。', 'standardItemId': 37, 'standardItemName': '血脂四项', 'standardItemNotice': '1.一般最合适的时间是在当月月经结束后的3-7天内。2.妇科常规检查当日应穿着便于检查的衣服，长度适中的裙子是最好的选择。3.妇科常规检查的前一天晚上洗澡要选择淋浴，检查前24小时内不能洗阴道内部。4.检查前一晚避免性生活，不使用任何阴道药物', 'standardItemPurpose': '检查子宫大小位置有无异常，看阴道黏膜表面是否光滑，白带是否异常有无病原体，宫颈上有没有肿物、溃疡、糜烂、息肉等', 'stationId': 'HL99998', 'tagName': '肿瘤生化'}, {'addFrom': 0, 'canAdd': 1, 'desc': '肾功能评价，测定肾功能损害程度及估计预后；血尿酸增高对高尿酸血症、痛风有诊断意义。肾功能不全出现肌酐升高', 'discount': None, 'gender': 0, 'id': 102934, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'WG0002', 'itemTagId': 3, 'name': '耳鼻喉科检查', 'notice': '1.有相关疾病提前告知，检查时积极配合医生完成检查时操作；2.避免精神紧张与压力', 'optimisticLockId': '102934', 'optimisticLockVersion': 1599546857000, 'orderNum': None, 'originalPrice': None, 'price': 800, 'purpose': '对耳、鼻、喉、咽的常规性检查', 'reason': '推荐理由', 'salePrice': 0.01, 'specialRemark': None, 'standardItemDesc': '肾功能评价，测定肾功能损害程度及估计预后；血尿酸增高对高尿酸血症、痛风有诊断意义。肾功能不全出现肌酐升高', 'standardItemId': 33, 'standardItemName': '尿素氮(BUN)、肌酐(Cr)、尿酸(UA)', 'standardItemNotice': '1.有相关疾病提前告知，检查时积极配合医生完成检查时操作；2.避免精神紧张与压力', 'standardItemPurpose': '对耳、鼻、喉、咽的常规性检查', 'stationId': 'HL99998', 'tagName': '心胸肺及腰椎'}, {'addFrom': 0, 'canAdd': 1, 'desc': '', 'discount': 0.9, 'gender': 0, 'id': 102935, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0039', 'itemTagId': 12, 'name': '血HCG', 'notice': '检前几天清淡饮食，空腹检查，采血前禁食12小时', 'optimisticLockId': '102935', 'optimisticLockVersion': 1605852490000, 'orderNum': None, 'originalPrice': 0.0, 'price': 3300, 'purpose': '早孕诊断以及与HCG相关性疾病的诊断', 'reason': '早孕的血液学诊断，也是某些疾病的辅助判断项目。', 'salePrice': 0.02, 'specialRemark': None, 'standardItemDesc': '', 'standardItemId': 772, 'standardItemName': '血HCG', 'standardItemNotice': '检前几天清淡饮食，空腹检查，采血前禁食12小时', 'standardItemPurpose': '早孕诊断以及与HCG相关性疾病的诊断', 'stationId': 'HL99998', 'tagName': '女性检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '妇科的常见病原体有细菌、病毒、真菌、寄生虫等广泛的存在于泌尿生殖道中，感染引起阴道炎症。常见的感染病原体：真菌（白色念珠菌）、毛滴虫、HPV等，阴道炎还有可能是其他的病原体如支原体感染所致，如解脲支原体、沙眼衣原体、抗生殖支原体等。', 'discount': None, 'gender': 2, 'id': 102936, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'FK00001', 'itemTagId': 12, 'name': '妇科检查', 'notice': '1.检查前一天要避免性生活，避免影响检查结果；2.必检经期进行检查，并选择最佳的检查时间；3.计划检查前24～48小时内不要冲洗阴道或使用置入阴道的栓剂，也不要进行阴道内诊检查。', 'optimisticLockId': '102936', 'optimisticLockVersion': 1601193171000, 'orderNum': None, 'originalPrice': 99.0, 'price': 2000, 'purpose': '妇科疾病是否由病原体感染。', 'reason': '妇科疾病严重者会引起不孕不育，重视妇科检查，行早发现早治疗原则。', 'salePrice': 0.01, 'specialRemark': None, 'standardItemDesc': '妇科的常见病原体有细菌、病毒、真菌、寄生虫等广泛的存在于泌尿生殖道中，感染引起阴道炎症。常见的感染病原体：真菌（白色念珠菌）、毛滴虫、HPV等，阴道炎还有可能是其他的病原体如支原体感染所致，如解脲支原体、沙眼衣原体、抗生殖支原体等。', 'standardItemId': 863, 'standardItemName': '妇科病原体检查', 'standardItemNotice': '1.检查前一天要避免性生活，避免影响检查结果；2.必检经期进行检查，并选择最佳的检查时间；3.计划检查前24～48小时内不要冲洗阴道或使用置入阴道的栓剂，也不要进行阴道内诊检查。', 'standardItemPurpose': '妇科疾病是否由病原体感染。', 'stationId': 'HL99998', 'tagName': '女性检查'}], 'total': 175}, 'success': True}
2020-12-28 09:47:21,234-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120040000,时间戳id:102926
2020-12-28 09:47:21,236-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:21,272-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(804,)
2020-12-28 09:47:21,274-[INFO]-logger.py-all_method-日志信息:手机15990106283:id获取成功返回:804
2020-12-28 09:47:21,299-[INFO]-logger.py-all_method-日志信息:手机15990106283:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '804', 'stationId': 'HL99998', 'token': 'ee999cd0bc8f5838fd28448a5f67fb14'}
2020-12-28 09:47:21,300-[INFO]-logger.py-all_method-日志信息:体检列表详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/item/examHospital/list/HL99998/1/10
2020-12-28 09:47:21,364-[INFO]-logger.py-all_method-日志信息:体检列表详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'list': [{'addFrom': 0, 'canAdd': 1, 'desc': '尿常规是医学检验“三大常规”项目之一，通过对尿液成分、形状等进行分析，用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能，还可用于协助检查其他系统疾病，如糖尿病、高血压、肝炎等。', 'discount': 1.0, 'gender': 0, 'id': 102926, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0002', 'itemTagId': 18, 'name': '尿常规', 'notice': '1.尽量留取晨尿，留取时需选择中段尿（10ml以上)\n2.女性月经期及其前后3-5天一般不宜留取尿液送检，以免经血混入小便，造成血尿的假象；\n3.尿液留取后需尽快送实验室检查；\n4.检测前一天应当避免同房、剧烈运动等；前一天晚上8点后避免大量进食、饮水。\n5. 检测前不要使用抗菌药物，以免影响检查结果的准确性。', 'optimisticLockId': '102926', 'optimisticLockVersion': 1609120040000, 'orderNum': None, 'originalPrice': None, 'price': 600, 'purpose': '用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'reason': '检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'salePrice': 6.0, 'specialRemark': '尿常规尿常规尿常规尿常规eeeee11111111', 'standardItemDesc': '尿常规是医学检验“三大常规”项目之一，通过对尿液成分、形状等进行分析，用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能，还可用于协助检查其他系统疾病，如糖尿病、高血压、肝炎等。', 'standardItemId': 106, 'standardItemName': '尿常规', 'standardItemNotice': '1.尽量留取晨尿，留取时需选择中段尿（10ml以上)\n2.女性月经期及其前后3-5天一般不宜留取尿液送检，以免经血混入小便，造成血尿的假象；\n3.尿液留取后需尽快送实验室检查；\n4.检测前一天应当避免同房、剧烈运动等；前一天晚上8点后避免大量进食、饮水。\n5. 检测前不要使用抗菌药物，以免影响检查结果的准确性。', 'standardItemPurpose': '用于检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'stationId': 'HL99998', 'tagName': '必选检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '生化全套检查内容包括：肝功能；血脂；空腹血糖；肾功能；尿酸等', 'discount': None, 'gender': 0, 'id': 102927, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0022', 'itemTagId': 18, 'name': '生化全项', 'notice': '1.抽血检查前避免劳累、运动、喝酒、情绪激动，饮食宜清淡； 2.抽血前一天不吃过于油腻、高蛋白食物，避免大量饮酒，抽血前禁食12小时； 3.检查前保证足够的睡眠时间，避免熬夜； 4.检查前若患有感冒并服用药物，建议感冒痊愈且停药后1周做检查', 'optimisticLockId': '102927', 'optimisticLockVersion': 1605591291000, 'orderNum': None, 'originalPrice': 100.0, 'price': 27800, 'purpose': '常规体检普查；用于疾病的筛查和确证试验', 'reason': '比普通的单项的生化检查查的更全、性价比更高，检查的项目多', 'salePrice': 0.02, 'specialRemark': '这是特殊说明，这个会有不一样哦，哈哈哈哈，看看怎么现实的额吧，一定要显示正常哦\n但是大家时间了洛杉矶大家都是家里都是垃圾的时间是多久的积极的角度', 'standardItemDesc': '生化全套检查内容包括：肝功能；血脂；空腹血糖；肾功能；尿酸等', 'standardItemId': 696, 'standardItemName': '体检生化全套', 'standardItemNotice': '1.抽血检查前避免劳累、运动、喝酒、情绪激动，饮食宜清淡； 2.抽血前一天不吃过于油腻、高蛋白食物，避免大量饮酒，抽血前禁食12小时； 3.检查前保证足够的睡眠时间，避免熬夜； 4.检查前若患有感冒并服用药物，建议感冒痊愈且停药后1周做检查', 'standardItemPurpose': '常规体检普查；用于疾病的筛查和确证试验', 'stationId': 'HL99998', 'tagName': '必选检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '阴道或尿道分泌物中查解尿支原体，其不仅可引起阴道、宫颈等生殖器感染，而且与流产、不育及胎儿宫内发育迟缓有密切关系。', 'discount': None, 'gender': 2, 'id': 102928, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'JK0002', 'itemTagId': 12, 'name': '一次性材料费', 'notice': '女性月经干净后１周后检查，检查前避免同房，一旦阳性，需要男女同治，治疗期间避免同房。', 'optimisticLockId': '102928', 'optimisticLockVersion': 1605687610000, 'orderNum': None, 'originalPrice': None, 'price': 2000, 'purpose': '了解是否感染了解尿支原体', 'reason': '早发现早治疗', 'salePrice': 0.01, 'specialRemark': '一次性材料费', 'standardItemDesc': '阴道或尿道分泌物中查解尿支原体，其不仅可引起阴道、宫颈等生殖器感染，而且与流产、不育及胎儿宫内发育迟缓有密切关系。', 'standardItemId': 823, 'standardItemName': '解尿支原体', 'standardItemNotice': '女性月经干净后１周后检查，检查前避免同房，一旦阳性，需要男女同治，治疗期间避免同房。', 'standardItemPurpose': '了解是否感染了解尿支原体', 'stationId': 'HL99998', 'tagName': '女性检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '', 'discount': None, 'gender': 2, 'id': 102929, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0037', 'itemTagId': 12, 'name': '血脂全项', 'notice': '1.做TCT检查前24小时避免性生活。2.在做TCT检查前3天内不要冲洗阴道或使用阴道栓剂，也不要做阴道内诊。3.如有炎症先治疗，然后再做TCT检查，以免影响诊断结果。4.TCT检查最好安排在月经结束后的3-7天。', 'optimisticLockId': '102929', 'optimisticLockVersion': 1601276410000, 'orderNum': None, 'originalPrice': None, 'price': 6600, 'purpose': '宫颈癌的筛查', 'reason': '面对女性的宫颈癌高发，妇科检查+液基细胞学检查都应该定期检查，TCT技术是应用于妇女宫颈癌筛查的一项先进的技术。', 'salePrice': 66.0, 'specialRemark': None, 'standardItemDesc': '', 'standardItemId': 745, 'standardItemName': '妇科检查+液基细胞学检查', 'standardItemNotice': '1.做TCT检查前24小时避免性生活。2.在做TCT检查前3天内不要冲洗阴道或使用阴道栓剂，也不要做阴道内诊。3.如有炎症先治疗，然后再做TCT检查，以免影响诊断结果。4.TCT检查最好安排在月经结束后的3-7天。', 'standardItemPurpose': '宫颈癌的筛查', 'stationId': 'HL99998', 'tagName': '女性检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '', 'discount': 1.0, 'gender': 1, 'id': 102930, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'DR0001', 'itemTagId': 16, 'name': '颈椎DR三位片', 'notice': '不带任何项链，裸露检查部位，勿要携带金属物品置于身检查；避免紧张积极配合医生检查；备孕或者孕妇不适宜X线类的检查。', 'optimisticLockId': '102930', 'optimisticLockVersion': 1600699015000, 'orderNum': None, 'originalPrice': None, 'price': 26000, 'purpose': '对颈椎进行较为全面的检查', 'reason': '越来越多的人受到颈椎病的困扰，及时早期治疗有较大意义，更加重视颈椎健康。', 'salePrice': 0.01, 'specialRemark': None, 'standardItemDesc': '', 'standardItemId': 746, 'standardItemName': '颈椎正侧双斜位（颈椎四位片）', 'standardItemNotice': '不带任何项链，裸露检查部位，勿要携带金属物品置于身检查；避免紧张积极配合医生检查；备孕或者孕妇不适宜X线类的检查。', 'standardItemPurpose': '对颈椎进行较为全面的检查', 'stationId': 'HL99998', 'tagName': '腰颈椎检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '哇哇哇哇哇哇哇哇哇哇哇哇下踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'discount': None, 'gender': 0, 'id': 102931, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'NK0001', 'itemTagId': 11, 'name': '内科检查(必检）', 'notice': '1.医生评估能否适合做该项检查。\n2.消化道不通畅的患者，进行胶囊内镜检查时要慎重，如经检查证实或怀疑患有消化道畸形、胃肠道梗阻、消化道穿孔、消化道狭窄或瘘管者禁做；对高分子材料过敏者禁做以及其他医生诊断不建议做者禁做。\n', 'optimisticLockId': '102931', 'optimisticLockVersion': 1600847799000, 'orderNum': None, 'originalPrice': None, 'price': 800, 'purpose': '消化道疾病尤其是小肠疾病诊断的首选方法顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶踩踩踩踩踩踩踩踩踩', 'reason': '检查过程中无需麻醉、不需住院，行动自如，不耽误正常的工作和生活；舒适检查手段无痛无创，满足耐受性较差的人群查病，提高诊断胃肠道疾病准确率，对小肠都能进行检查。', 'salePrice': 2.0, 'specialRemark': None, 'standardItemDesc': '哇哇哇哇哇哇哇哇哇哇哇哇下踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩踩顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶', 'standardItemId': 500, 'standardItemName': '智能胶囊内窥镜检测', 'standardItemNotice': '1.医生评估能否适合做该项检查。\n2.消化道不通畅的患者，进行胶囊内镜检查时要慎重，如经检查证实或怀疑患有消化道畸形、胃肠道梗阻、消化道穿孔、消化道狭窄或瘘管者禁做；对高分子材料过敏者禁做以及其他医生诊断不建议做者禁做。\n', 'standardItemPurpose': '消化道疾病尤其是小肠疾病诊断的首选方法顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶顶踩踩踩踩踩踩踩踩踩', 'stationId': 'HL99998', 'tagName': '胃部疾病检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '总胆固醇、甘油三酯、高密度脂蛋白胆固醇、低密度脂蛋白胆固醇、测定血清中血脂含量，它们的增高或降低与动脉粥样硬化的形成有很大的关系。', 'discount': 0.1, 'gender': 0, 'id': 102932, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'WK0001', 'itemTagId': 7, 'name': '外科检查', 'notice': '1.一般最合适的时间是在当月月经结束后的3-7天内。2.妇科常规检查当日应穿着便于检查的衣服，长度适中的裙子是最好的选择。3.妇科常规检查的前一天晚上洗澡要选择淋浴，检查前24小时内不能洗阴道内部。4.检查前一晚避免性生活，不使用任何阴道药物', 'optimisticLockId': '102932', 'optimisticLockVersion': 1600760522000, 'orderNum': None, 'originalPrice': 111.0, 'price': 500, 'purpose': '检查子宫大小位置有无异常，看阴道黏膜表面是否光滑，白带是否异常有无病原体，宫颈上有没有肿物、溃疡、糜烂、息肉等', 'reason': '推荐理由', 'salePrice': 100.0, 'specialRemark': None, 'standardItemDesc': '总胆固醇、甘油三酯、高密度脂蛋白胆固醇、低密度脂蛋白胆固醇、测定血清中血脂含量，它们的增高或降低与动脉粥样硬化的形成有很大的关系。', 'standardItemId': 37, 'standardItemName': '血脂四项', 'standardItemNotice': '1.一般最合适的时间是在当月月经结束后的3-7天内。2.妇科常规检查当日应穿着便于检查的衣服，长度适中的裙子是最好的选择。3.妇科常规检查的前一天晚上洗澡要选择淋浴，检查前24小时内不能洗阴道内部。4.检查前一晚避免性生活，不使用任何阴道药物', 'standardItemPurpose': '检查子宫大小位置有无异常，看阴道黏膜表面是否光滑，白带是否异常有无病原体，宫颈上有没有肿物、溃疡、糜烂、息肉等', 'stationId': 'HL99998', 'tagName': '肿瘤生化'}, {'addFrom': 0, 'canAdd': 1, 'desc': '肾功能评价，测定肾功能损害程度及估计预后；血尿酸增高对高尿酸血症、痛风有诊断意义。肾功能不全出现肌酐升高', 'discount': None, 'gender': 0, 'id': 102934, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'WG0002', 'itemTagId': 3, 'name': '耳鼻喉科检查', 'notice': '1.有相关疾病提前告知，检查时积极配合医生完成检查时操作；2.避免精神紧张与压力', 'optimisticLockId': '102934', 'optimisticLockVersion': 1599546857000, 'orderNum': None, 'originalPrice': None, 'price': 800, 'purpose': '对耳、鼻、喉、咽的常规性检查', 'reason': '推荐理由', 'salePrice': 0.01, 'specialRemark': None, 'standardItemDesc': '肾功能评价，测定肾功能损害程度及估计预后；血尿酸增高对高尿酸血症、痛风有诊断意义。肾功能不全出现肌酐升高', 'standardItemId': 33, 'standardItemName': '尿素氮(BUN)、肌酐(Cr)、尿酸(UA)', 'standardItemNotice': '1.有相关疾病提前告知，检查时积极配合医生完成检查时操作；2.避免精神紧张与压力', 'standardItemPurpose': '对耳、鼻、喉、咽的常规性检查', 'stationId': 'HL99998', 'tagName': '心胸肺及腰椎'}, {'addFrom': 0, 'canAdd': 1, 'desc': '', 'discount': 0.9, 'gender': 0, 'id': 102935, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'HY0039', 'itemTagId': 12, 'name': '血HCG', 'notice': '检前几天清淡饮食，空腹检查，采血前禁食12小时', 'optimisticLockId': '102935', 'optimisticLockVersion': 1605852490000, 'orderNum': None, 'originalPrice': 0.0, 'price': 3300, 'purpose': '早孕诊断以及与HCG相关性疾病的诊断', 'reason': '早孕的血液学诊断，也是某些疾病的辅助判断项目。', 'salePrice': 0.02, 'specialRemark': None, 'standardItemDesc': '', 'standardItemId': 772, 'standardItemName': '血HCG', 'standardItemNotice': '检前几天清淡饮食，空腹检查，采血前禁食12小时', 'standardItemPurpose': '早孕诊断以及与HCG相关性疾病的诊断', 'stationId': 'HL99998', 'tagName': '女性检查'}, {'addFrom': 0, 'canAdd': 1, 'desc': '妇科的常见病原体有细菌、病毒、真菌、寄生虫等广泛的存在于泌尿生殖道中，感染引起阴道炎症。常见的感染病原体：真菌（白色念珠菌）、毛滴虫、HPV等，阴道炎还有可能是其他的病原体如支原体感染所致，如解脲支原体、沙眼衣原体、抗生殖支原体等。', 'discount': None, 'gender': 2, 'id': 102936, 'isAdd': 1, 'isHospitalIntroUsed': 1, 'isLimosis': False, 'isUrine': False, 'itemId': 'FK00001', 'itemTagId': 12, 'name': '妇科检查', 'notice': '1.检查前一天要避免性生活，避免影响检查结果；2.必检经期进行检查，并选择最佳的检查时间；3.计划检查前24～48小时内不要冲洗阴道或使用置入阴道的栓剂，也不要进行阴道内诊检查。', 'optimisticLockId': '102936', 'optimisticLockVersion': 1601193171000, 'orderNum': None, 'originalPrice': 99.0, 'price': 2000, 'purpose': '妇科疾病是否由病原体感染。', 'reason': '妇科疾病严重者会引起不孕不育，重视妇科检查，行早发现早治疗原则。', 'salePrice': 0.01, 'specialRemark': None, 'standardItemDesc': '妇科的常见病原体有细菌、病毒、真菌、寄生虫等广泛的存在于泌尿生殖道中，感染引起阴道炎症。常见的感染病原体：真菌（白色念珠菌）、毛滴虫、HPV等，阴道炎还有可能是其他的病原体如支原体感染所致，如解脲支原体、沙眼衣原体、抗生殖支原体等。', 'standardItemId': 863, 'standardItemName': '妇科病原体检查', 'standardItemNotice': '1.检查前一天要避免性生活，避免影响检查结果；2.必检经期进行检查，并选择最佳的检查时间；3.计划检查前24～48小时内不要冲洗阴道或使用置入阴道的栓剂，也不要进行阴道内诊检查。', 'standardItemPurpose': '妇科疾病是否由病原体感染。', 'stationId': 'HL99998', 'tagName': '女性检查'}], 'total': 175}, 'success': True}
2020-12-28 09:47:21,382-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120040000,时间戳id:102926
2020-12-28 09:47:21,385-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:47:21,544-[INFO]-logger.py-httpRequest-日志信息:第一次保存headers：{'optimisticLockVersion': '1609120040000', 'optimisticLockId': '102926', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '0', 'errorMsg': '', 'result': None, 'success': True}
2020-12-28 09:47:21,644-[INFO]-logger.py-httpRequest-日志信息:第二次保存headers：{'optimisticLockVersion': '1609120040000', 'optimisticLockId': '102926', 'adminId': '804', 'stationId': 'HL99998', 'token': 'ee999cd0bc8f5838fd28448a5f67fb14'},返回：{'code': '20289', 'errorMsg': '该项数据已被修改，请刷新后重试！', 'result': None, 'success': False}
2020-12-28 09:47:21,645-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.643385s
2020-12-28 09:47:21,646-[INFO]-logger.py-Unit_test-日志信息:接口返回message:该项数据已被修改，请刷新后重试！
2020-12-28 09:47:21,647-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20289
2020-12-28 09:47:21,649-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.643385, 'data': '该项数据已被修改，请刷新后重试！', 'code': '20289', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:47:22,583-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:22,584-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:22,586-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:22,587-[INFO]-logger.py-Unit_test-日志信息:正在执行第34条用例:【订单管理】1-正常-收款订单-对账后台信息-成功
2020-12-28 09:47:22,588-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/behalf/detail；method：GET；data：{'orderId':'HjkBehalf20201116161217719'}；sql：{}
2020-12-28 09:47:22,590-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:22,650-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:22,651-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:22,678-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:22,679-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:47:22,717-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '0', 'errorMsg': '', 'result': {'optimisticLockId': 'HjkBehalf20201116161217719', 'optimisticLockVersion': 1609117888000, 'orderId': 'HjkBehalf20201116161217719', 'payType': 1, 'restRefundMoney': '29.03'}, 'success': True}
2020-12-28 09:47:22,720-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.128932s
2020-12-28 09:47:22,722-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:47:22,725-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.128932, 'data': {'optimisticLockId': 'HjkBehalf20201116161217719', 'optimisticLockVersion': 1609117888000, 'orderId': 'HjkBehalf20201116161217719', 'payType': 1, 'restRefundMoney': '29.03'}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:47:23,682-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:23,683-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:23,685-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:23,686-[INFO]-logger.py-Unit_test-日志信息:正在执行第35条用例:【订单管理】2-时间戳一致-收款订单-代收付退款-用户a页面1保存-成功
2020-12-28 09:47:23,687-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/behalf/refund；method：POST；data：{"adminId":"801","money":"0.01","orderId":"HjkBehalf20201116161217719","refundReason":"体检项目多买、错买，不想要"}；sql：{}
2020-12-28 09:47:23,688-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:23,719-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:23,720-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:23,743-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:23,745-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:23,791-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:23,792-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:23,813-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:23,815-[INFO]-logger.py-all_method-日志信息:对账后台详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/behalf/detail?orderId=HjkBehalf20201116161217719
2020-12-28 09:47:23,857-[INFO]-logger.py-all_method-日志信息:对账后台详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'optimisticLockId': 'HjkBehalf20201116161217719', 'optimisticLockVersion': 1609117888000, 'orderId': 'HjkBehalf20201116161217719', 'payType': 1, 'restRefundMoney': '29.03'}, 'success': True}
2020-12-28 09:47:23,858-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609117888000,时间戳id:HjkBehalf20201116161217719
2020-12-28 09:47:23,859-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:47:25,964-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 2.27455s
2020-12-28 09:47:25,965-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:47:25,966-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 2.27455, 'data': None, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:47:26,884-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:26,885-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:26,887-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:26,888-[INFO]-logger.py-Unit_test-日志信息:正在执行第36条用例:【订单管理】3-时间戳不一致-收款订单-代收付退款-用户a页面2时间戳1保存-失败
2020-12-28 09:47:26,889-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/behalf/refund；method：POST；data：{"adminId":"801","money":"0.01","orderId":"HjkBehalf20201116161217719","refundReason":"体检项目多买、错买，不想要"}；sql：{}
2020-12-28 09:47:26,891-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:26,950-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:26,951-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:26,975-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:26,977-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:27,024-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:27,025-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:27,061-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:27,062-[INFO]-logger.py-all_method-日志信息:对账后台详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/behalf/detail?orderId=HjkBehalf20201116161217719
2020-12-28 09:47:27,106-[INFO]-logger.py-all_method-日志信息:对账后台详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'optimisticLockId': 'HjkBehalf20201116161217719', 'optimisticLockVersion': 1609120046000, 'orderId': 'HjkBehalf20201116161217719', 'payType': 1, 'restRefundMoney': '29.02'}, 'success': True}
2020-12-28 09:47:27,108-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120046000,时间戳id:HjkBehalf20201116161217719
2020-12-28 09:47:27,109-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:47:29,194-[INFO]-logger.py-httpRequest-日志信息:第一次保存headers：{'optimisticLockVersion': '1609120046000', 'optimisticLockId': 'HjkBehalf20201116161217719', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '0', 'errorMsg': '', 'result': None, 'success': True}
2020-12-28 09:47:29,290-[INFO]-logger.py-httpRequest-日志信息:第二次保存headers：{'optimisticLockVersion': '1609120046000', 'optimisticLockId': 'HjkBehalf20201116161217719', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '20289', 'errorMsg': '该项数据已被修改，请刷新后重试！', 'result': None, 'success': False}
2020-12-28 09:47:29,292-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 2.400413s
2020-12-28 09:47:29,294-[INFO]-logger.py-Unit_test-日志信息:接口返回message:该项数据已被修改，请刷新后重试！
2020-12-28 09:47:29,295-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20289
2020-12-28 09:47:29,297-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 2.400413, 'data': '该项数据已被修改，请刷新后重试！', 'code': '20289', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:47:30,271-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:30,272-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:47:30,273-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:47:30,274-[INFO]-logger.py-Unit_test-日志信息:正在执行第37条用例:【订单管理】1-时间戳不一致-收款订单-代收付退款-用户b页面2时间戳1保存-失败
2020-12-28 09:47:30,276-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/behalf/refund；method：POST；data：{"adminId":"801","money":"0.01","orderId":"HjkBehalf20201116161217719","refundReason":"体检项目多买、错买，不想要"}；sql：{}
2020-12-28 09:47:30,277-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:30,329-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:30,330-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:30,353-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:30,355-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:30,413-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:47:30,416-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:47:30,445-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:47:30,448-[INFO]-logger.py-all_method-日志信息:对账后台详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/behalf/detail?orderId=HjkBehalf20201116161217719
2020-12-28 09:47:30,490-[INFO]-logger.py-all_method-日志信息:对账后台详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'optimisticLockId': 'HjkBehalf20201116161217719', 'optimisticLockVersion': 1609120049000, 'orderId': 'HjkBehalf20201116161217719', 'payType': 1, 'restRefundMoney': '29.01'}, 'success': True}
2020-12-28 09:47:30,493-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120049000,时间戳id:HjkBehalf20201116161217719
2020-12-28 09:47:30,498-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:47:30,547-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(804,)
2020-12-28 09:47:30,549-[INFO]-logger.py-all_method-日志信息:手机15990106283:id获取成功返回:804
2020-12-28 09:47:30,575-[INFO]-logger.py-all_method-日志信息:手机15990106283:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '804', 'stationId': 'HL99998', 'token': 'ee999cd0bc8f5838fd28448a5f67fb14'}
2020-12-28 09:47:30,576-[INFO]-logger.py-all_method-日志信息:对账后台详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/behalf/detail?orderId=HjkBehalf20201116161217719
2020-12-28 09:47:30,613-[INFO]-logger.py-all_method-日志信息:对账后台详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'optimisticLockId': 'HjkBehalf20201116161217719', 'optimisticLockVersion': 1609120049000, 'orderId': 'HjkBehalf20201116161217719', 'payType': 1, 'restRefundMoney': '29.01'}, 'success': True}
2020-12-28 09:47:30,614-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120049000,时间戳id:HjkBehalf20201116161217719
2020-12-28 09:47:30,616-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:47:32,461-[INFO]-logger.py-httpRequest-日志信息:第一次保存headers：{'optimisticLockVersion': '1609120049000', 'optimisticLockId': 'HjkBehalf20201116161217719', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '0', 'errorMsg': '', 'result': None, 'success': True}
2020-12-28 09:47:32,555-[INFO]-logger.py-httpRequest-日志信息:第二次保存headers：{'optimisticLockVersion': '1609120049000', 'optimisticLockId': 'HjkBehalf20201116161217719', 'adminId': '804', 'stationId': 'HL99998', 'token': 'ee999cd0bc8f5838fd28448a5f67fb14'},返回：{'code': '10001', 'errorMsg': 'No provider available from registry nacos:8848 for service com.helian.healthmanage.mallbiz.service.HospitalBehalfRecordBizService:1.0.0 on consumer 10.42.3.78 use dubbo version 2.7.4.1, please check status of providers(disabled, not registered or in blacklist).', 'result': None, 'success': False}
2020-12-28 09:47:32,558-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 2.281019s
2020-12-28 09:47:32,561-[INFO]-logger.py-Unit_test-日志信息:接口返回message:No provider available from registry nacos:8848 for service com.helian.healthmanage.mallbiz.service.HospitalBehalfRecordBizService:1.0.0 on consumer 10.42.3.78 use dubbo version 2.7.4.1, please check status of providers(disabled, not registered or in blacklist).
2020-12-28 09:47:32,564-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：10001
2020-12-28 09:47:33,526-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:47:33,528-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:59:24,897-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 09:59:24,899-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 09:59:25,206-[INFO]-logger.py-Unit_test-日志信息:当前使用的用例表单：Sheet2
2020-12-28 09:59:25,586-[INFO]-logger.py-readExcel-日志信息:获取表单成功：<Worksheet "Sheet2">
2020-12-28 09:59:25,591-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:59:25,592-[INFO]-logger.py-Unit_test-日志信息:正在执行第34条用例:【订单管理】1-正常-收款订单-对账后台信息-成功
2020-12-28 09:59:25,593-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/behalf/detail；method：GET；data：{'orderId':'HjkBehalf20201116161217719'}；sql：{}
2020-12-28 09:59:25,595-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:59:25,641-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:59:25,642-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:59:25,677-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:59:25,678-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:59:25,753-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '0', 'errorMsg': '', 'result': {'optimisticLockId': 'HjkBehalf20201116161217719', 'optimisticLockVersion': 1609120053000, 'orderId': 'HjkBehalf20201116161217719', 'payType': 1, 'restRefundMoney': '29'}, 'success': True}
2020-12-28 09:59:25,755-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.159905s
2020-12-28 09:59:25,756-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:59:25,757-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.159905, 'data': {'optimisticLockId': 'HjkBehalf20201116161217719', 'optimisticLockVersion': 1609120053000, 'orderId': 'HjkBehalf20201116161217719', 'payType': 1, 'restRefundMoney': '29'}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:59:26,575-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:59:26,577-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:59:26,578-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:59:26,580-[INFO]-logger.py-Unit_test-日志信息:正在执行第35条用例:【订单管理】2-时间戳一致-收款订单-代收付退款-用户a页面1保存-成功
2020-12-28 09:59:26,581-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/behalf/refund；method：POST；data：{"adminId":"801","money":"0.01","orderId":"HjkBehalf20201116161217719","refundReason":"体检项目多买、错买，不想要"}；sql：{}
2020-12-28 09:59:26,583-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:59:26,626-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:59:26,627-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:59:26,646-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:59:26,648-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:59:26,710-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:59:26,712-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:59:26,741-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:59:26,743-[INFO]-logger.py-all_method-日志信息:对账后台详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/behalf/detail?orderId=HjkBehalf20201116161217719
2020-12-28 09:59:26,794-[INFO]-logger.py-all_method-日志信息:对账后台详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'optimisticLockId': 'HjkBehalf20201116161217719', 'optimisticLockVersion': 1609120053000, 'orderId': 'HjkBehalf20201116161217719', 'payType': 1, 'restRefundMoney': '29'}, 'success': True}
2020-12-28 09:59:26,797-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120053000,时间戳id:HjkBehalf20201116161217719
2020-12-28 09:59:26,799-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:59:28,807-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 2.223714s
2020-12-28 09:59:28,810-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:59:28,813-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 2.223714, 'data': None, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:59:29,804-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:59:29,805-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:59:29,807-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:59:29,809-[INFO]-logger.py-Unit_test-日志信息:正在执行第36条用例:【订单管理】3-时间戳不一致-收款订单-代收付退款-用户a页面2时间戳1保存-失败
2020-12-28 09:59:29,810-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/behalf/refund；method：POST；data：{"adminId":"801","money":"0.01","orderId":"HjkBehalf20201116161217719","refundReason":"体检项目多买、错买，不想要"}；sql：{}
2020-12-28 09:59:29,812-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:59:29,861-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:59:29,862-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:59:29,893-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:59:29,895-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:59:29,954-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:59:29,955-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:59:29,974-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:59:29,975-[INFO]-logger.py-all_method-日志信息:对账后台详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/behalf/detail?orderId=HjkBehalf20201116161217719
2020-12-28 09:59:30,017-[INFO]-logger.py-all_method-日志信息:对账后台详情获取成功返回:{'code': '0', 'errorMsg': '', 'result': {'optimisticLockId': 'HjkBehalf20201116161217719', 'optimisticLockVersion': 1609120769000, 'orderId': 'HjkBehalf20201116161217719', 'payType': 1, 'restRefundMoney': '28.99'}, 'success': True}
2020-12-28 09:59:30,018-[INFO]-logger.py-all_method-日志信息:成功返回时间戳获取:1609120769000,时间戳id:HjkBehalf20201116161217719
2020-12-28 09:59:30,019-[INFO]-logger.py-httpRequest-日志信息:现在开始进行时间戳版本长效方案post,body格式请求
2020-12-28 09:59:31,859-[INFO]-logger.py-httpRequest-日志信息:第一次保存headers：{'optimisticLockVersion': '1609120769000', 'optimisticLockId': 'HjkBehalf20201116161217719', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '0', 'errorMsg': '', 'result': None, 'success': True}
2020-12-28 09:59:31,959-[INFO]-logger.py-httpRequest-日志信息:第二次保存headers：{'optimisticLockVersion': '1609120769000', 'optimisticLockId': 'HjkBehalf20201116161217719', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'},返回：{'code': '10001', 'errorMsg': 'No provider available from registry nacos:8848 for service com.helian.healthmanage.mallbiz.service.HospitalBehalfRecordBizService:1.0.0 on consumer 10.42.3.78 use dubbo version 2.7.4.1, please check status of providers(disabled, not registered or in blacklist).', 'result': None, 'success': False}
2020-12-28 09:59:31,962-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 2.149687s
2020-12-28 09:59:31,964-[INFO]-logger.py-Unit_test-日志信息:接口返回message:No provider available from registry nacos:8848 for service com.helian.healthmanage.mallbiz.service.HospitalBehalfRecordBizService:1.0.0 on consumer 10.42.3.78 use dubbo version 2.7.4.1, please check status of providers(disabled, not registered or in blacklist).
2020-12-28 09:59:31,967-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：10001
2020-12-28 09:59:32,880-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:59:32,881-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:59:32,887-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:59:32,888-[INFO]-logger.py-Unit_test-日志信息:正在执行第37条用例:【订单管理】1-时间戳不一致-收款订单-代收付退款-用户b页面2时间戳1保存-失败
2020-12-28 09:59:32,890-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://h2btest.helianhealth.com/healthmanage-hospital/admin/behalf/refund；method：POST；data：{"adminId":"801","money":"0.01","orderId":"HjkBehalf20201116161217719","refundReason":"体检项目多买、错买，不想要"}；sql：{}
2020-12-28 09:59:32,891-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:59:32,937-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:59:32,938-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:59:32,964-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:59:32,966-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:59:33,014-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(726,)
2020-12-28 09:59:33,015-[INFO]-logger.py-all_method-日志信息:手机15258814180:id获取成功返回:726
2020-12-28 09:59:33,047-[INFO]-logger.py-all_method-日志信息:手机15258814180:header获取返回:{'optimisticLockVersion': '', 'optimisticLockId': '', 'adminId': '726', 'stationId': 'HL99998', 'token': 'ee5c9f64a2569bb88f8aa23d38afc16f'}
2020-12-28 09:59:33,049-[INFO]-logger.py-all_method-日志信息:对账后台详情请求连接:http://h2btest.helianhealth.com/healthmanage-hospital/admin/behalf/detail?orderId=HjkBehalf20201116161217719
2020-12-28 09:59:33,095-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:59:33,111-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:59:33,113-[INFO]-logger.py-Unit_test-日志信息:正在执行第38条用例:【体检预约】1-性别不限个检套餐-科学体检选择性别男-重点关注项目推荐-成功
2020-12-28 09:59:33,115-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：https://management-fed-gray.helianhealth.com/envk8s/healthmanage-web/wx/api/examination/addition/cohortRecommendItems；method：POST；data：{"age":"30","cardNo":"","sex":1,"married":1,"mobile":"","useType":0,"userCardId":"","userId":17200000090,"pkgId":2560,"itemIds":[]}；sql：{}
2020-12-28 09:59:33,329-[INFO]-logger.py-all_method-日志信息:登录请求返回：{'code': '0', 'errorMsg': '', 'result': {'card_id': None, 'cellnumber': '15258814180', 'img_url': 'https://file.helianhealth.com/userPic/2020/09/23/de1780bd71fb4026b3542f30b1c5713b.jpeg', 'nick_name': '羊4180', 'real_name': '羊', 'reg_company': None, 'reg_user_type': 0, 'sex': None, 'token': '4ab1df5b4789b2887aed83479082e55e', 'user_level': None, 'userid': '17200000090'}, 'success': True}
2020-12-28 09:59:33,330-[INFO]-logger.py-all_method-日志信息:请求获取公共header返回：{'deviceId': 'Android-3806ba3c-be48-409e-b1d2-76d517348a64', 'os': '1', 'version': '8.1.3', 'imei': '864551031854596', 'from': '1', 'mac': 'f4:70:ab:60:1e:ea', 'openId': 'oh02_51tYh6ybCZJgQ0LYtbb35bI', 'token': '4ab1df5b4789b2887aed83479082e55e', 'uid': '17200000090'}
2020-12-28 09:59:33,332-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 09:59:33,568-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '0', 'errorMsg': '', 'result': {'enablePkgUpgradeTxtShow': 1, 'enableSurveyQuestion': 1, 'examItemList': [{'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'MR0012', 'itemName': '1.0盆腔核磁', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '0.01', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.01, 'reason': '一般常规性检查，对血压、体重等进行评估。', 'recommend': None, 'recommendIndex': 1, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.01', 'skuId': 3444, 'spuId': 3415, 'standardItemId': 2, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'HY0036', 'itemName': '静脉采血', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '4', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 4.0, 'reason': '经济方便，结合影像学和血液检查，可提高疾病检出率。', 'recommend': None, 'recommendIndex': 2, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '4', 'skuId': 10397, 'spuId': 10360, 'standardItemId': 6, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 1, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'XZ0002', 'itemName': '426新增项目2', 'itemTagId': 21, 'itemTagName': '传染病检查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '0.01', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.01, 'reason': '检查肝功能的目的在于探测肝脏有无疾病，肝脏损害程度以及查明肝病原因', 'recommend': None, 'recommendIndex': 3, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.01', 'skuId': 10518, 'spuId': 10481, 'standardItemId': 672, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'MR0011', 'itemName': '1.0上腹部核磁+MRCP', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '0.01', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.01, 'reason': '系统的外科检查可以早期发现一些病症：如甲状腺结节、骨质增生、前列腺肥大、乳腺增生及腺瘤、直肠息肉等', 'recommend': None, 'recommendIndex': 4, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.01', 'skuId': 3429, 'spuId': 3400, 'standardItemId': 7, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 1, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'CS00012', 'itemName': '泌尿系彩超（男性）中心', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '0.01', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.01, 'reason': '泌尿系是人体的排泄系统，对维持人体内环境具有重要的作用。', 'recommend': None, 'recommendIndex': 5, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.01', 'skuId': 3415, 'spuId': 3386, 'standardItemId': 112, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 1, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'CT0009', 'itemName': '双排胸部CT', 'itemTagId': 20, 'itemTagName': 'X线/CT/核磁检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '0.2', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.2, 'reason': '观察心 、肺 、气管是否存在异常，早发现早治疗。', 'recommend': None, 'recommendIndex': 6, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.2', 'skuId': 3422, 'spuId': 3393, 'standardItemId': 244, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'ZL0002', 'itemName': '癌胚抗原CEA', 'itemTagId': 14, 'itemTagName': '心脑血管疾病筛查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '1.02', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 1.02, 'reason': '同型半胱氨酸是一项重要的人体健康指标，心脑血管发病风险的检测', 'recommend': None, 'recommendIndex': 7, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '1.02', 'skuId': 10416, 'spuId': 10379, 'standardItemId': 675, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'FM0005', 'itemName': '糖化血红蛋白（放免）', 'itemTagId': 14, 'itemTagName': '心脑血管疾病筛查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '0.01', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.01, 'reason': '能对这段时间的血糖的平均水平进行评价', 'recommend': None, 'recommendIndex': 8, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.01', 'skuId': 10754, 'spuId': 10717, 'standardItemId': 685, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'CS00011', 'itemName': '颈部血管彩超（中心）1', 'itemTagId': 14, 'itemTagName': '心脑血管疾病筛查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '222', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 222.0, 'reason': '冠心病、高血压病、脑卒中、脑出血、糖尿病等疾病年轻化，通过颈动脉彩超可以了解大脑供血情况，同时可以间接了解脑动脉及心脏的冠状动脉的血管条件，早预防早治疗，降低猝死率', 'recommend': None, 'recommendIndex': 9, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '222', 'skuId': 10776, 'spuId': 10739, 'standardItemId': 472, 'stationId': 'HL99998'}], 'percent': 12, 'pkgUpgradeTxt': '30岁人群工作压力大，熬夜、饮食不规律等，患病风险逐渐年轻化，需要重点关注“颈椎疾病”、“胃部疾病”和“甲状腺疾病”及女性“宫颈癌”筛查。', 'policy': '4'}, 'success': True}
2020-12-28 09:59:33,574-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.456718s
2020-12-28 09:59:33,575-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:59:33,576-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.456718, 'data': {'enablePkgUpgradeTxtShow': 1, 'enableSurveyQuestion': 1, 'examItemList': [{'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'MR0012', 'itemName': '1.0盆腔核磁', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '0.01', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.01, 'reason': '一般常规性检查，对血压、体重等进行评估。', 'recommend': None, 'recommendIndex': 1, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.01', 'skuId': 3444, 'spuId': 3415, 'standardItemId': 2, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'HY0036', 'itemName': '静脉采血', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '4', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 4.0, 'reason': '经济方便，结合影像学和血液检查，可提高疾病检出率。', 'recommend': None, 'recommendIndex': 2, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '4', 'skuId': 10397, 'spuId': 10360, 'standardItemId': 6, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 1, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'XZ0002', 'itemName': '426新增项目2', 'itemTagId': 21, 'itemTagName': '传染病检查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '0.01', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.01, 'reason': '检查肝功能的目的在于探测肝脏有无疾病，肝脏损害程度以及查明肝病原因', 'recommend': None, 'recommendIndex': 3, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.01', 'skuId': 10518, 'spuId': 10481, 'standardItemId': 672, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'MR0011', 'itemName': '1.0上腹部核磁+MRCP', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '0.01', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.01, 'reason': '系统的外科检查可以早期发现一些病症：如甲状腺结节、骨质增生、前列腺肥大、乳腺增生及腺瘤、直肠息肉等', 'recommend': None, 'recommendIndex': 4, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.01', 'skuId': 3429, 'spuId': 3400, 'standardItemId': 7, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 1, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'CS00012', 'itemName': '泌尿系彩超（男性）中心', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '0.01', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.01, 'reason': '泌尿系是人体的排泄系统，对维持人体内环境具有重要的作用。', 'recommend': None, 'recommendIndex': 5, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.01', 'skuId': 3415, 'spuId': 3386, 'standardItemId': 112, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 1, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'CT0009', 'itemName': '双排胸部CT', 'itemTagId': 20, 'itemTagName': 'X线/CT/核磁检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '0.2', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.2, 'reason': '观察心 、肺 、气管是否存在异常，早发现早治疗。', 'recommend': None, 'recommendIndex': 6, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.2', 'skuId': 3422, 'spuId': 3393, 'standardItemId': 244, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'ZL0002', 'itemName': '癌胚抗原CEA', 'itemTagId': 14, 'itemTagName': '心脑血管疾病筛查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '1.02', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 1.02, 'reason': '同型半胱氨酸是一项重要的人体健康指标，心脑血管发病风险的检测', 'recommend': None, 'recommendIndex': 7, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '1.02', 'skuId': 10416, 'spuId': 10379, 'standardItemId': 675, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'FM0005', 'itemName': '糖化血红蛋白（放免）', 'itemTagId': 14, 'itemTagName': '心脑血管疾病筛查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '0.01', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.01, 'reason': '能对这段时间的血糖的平均水平进行评价', 'recommend': None, 'recommendIndex': 8, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.01', 'skuId': 10754, 'spuId': 10717, 'standardItemId': 685, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'CS00011', 'itemName': '颈部血管彩超（中心）1', 'itemTagId': 14, 'itemTagName': '心脑血管疾病筛查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '222', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 222.0, 'reason': '冠心病、高血压病、脑卒中、脑出血、糖尿病等疾病年轻化，通过颈动脉彩超可以了解大脑供血情况，同时可以间接了解脑动脉及心脏的冠状动脉的血管条件，早预防早治疗，降低猝死率', 'recommend': None, 'recommendIndex': 9, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '222', 'skuId': 10776, 'spuId': 10739, 'standardItemId': 472, 'stationId': 'HL99998'}], 'percent': 12, 'pkgUpgradeTxt': '30岁人群工作压力大，熬夜、饮食不规律等，患病风险逐渐年轻化，需要重点关注“颈椎疾病”、“胃部疾病”和“甲状腺疾病”及女性“宫颈癌”筛查。', 'policy': '4'}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:59:34,525-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:59:34,526-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:59:34,527-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:59:34,528-[INFO]-logger.py-Unit_test-日志信息:正在执行第39条用例:【体检预约】2-性别不限个检套餐-科学体检选择性别男-订单支付前计算金额-成功
2020-12-28 09:59:34,530-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：https://management-fed-gray.helianhealth.com/envk8s/healthmanage-web/app/market/trade/compute；method：POST；data：{"exampackagePkgId":"","userCouponId":"0","hostTradeId":"","itemDpList":[{"goodsSkuId":14626,"count":1},{"goodsSkuId":10335,"count":1},{"goodsSkuId":14676,"count":1}],"packDpList":[],"tradeGroupCardBindType":"0","userCardId":"","tradeType":200}；sql：{}
2020-12-28 09:59:34,741-[INFO]-logger.py-all_method-日志信息:登录请求返回：{'code': '0', 'errorMsg': '', 'result': {'card_id': None, 'cellnumber': '15258814180', 'img_url': 'https://file.helianhealth.com/userPic/2020/09/23/de1780bd71fb4026b3542f30b1c5713b.jpeg', 'nick_name': '羊4180', 'real_name': '羊', 'reg_company': None, 'reg_user_type': 0, 'sex': None, 'token': '4ab1df5b4789b2887aed83479082e55e', 'user_level': None, 'userid': '17200000090'}, 'success': True}
2020-12-28 09:59:34,743-[INFO]-logger.py-all_method-日志信息:请求获取公共header返回：{'deviceId': 'Android-3806ba3c-be48-409e-b1d2-76d517348a64', 'os': '1', 'version': '8.1.3', 'imei': '864551031854596', 'from': '1', 'mac': 'f4:70:ab:60:1e:ea', 'openId': 'oh02_51tYh6ybCZJgQ0LYtbb35bI', 'token': '4ab1df5b4789b2887aed83479082e55e', 'uid': '17200000090'}
2020-12-28 09:59:34,744-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 09:59:35,014-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '0', 'errorMsg': '', 'result': {'addFeeitemDiscountStr': None, 'couponAmountStr': '10.02', 'groupCardAmountStr': '0', 'hostTradeInfoBo': None, 'items': [{'discountStr': '', 'goodsCount': 1, 'goodsName': '血型', 'goodsPriceStr': '10', 'skuId': 14626, 'subType': 201, 'suitType': 0}, {'discountStr': '', 'goodsCount': 1, 'goodsName': '泌尿系彩超（男性）', 'goodsPriceStr': '0.01', 'skuId': 10335, 'subType': 201, 'suitType': 0}, {'discountStr': '', 'goodsCount': 1, 'goodsName': '自动化性别不限（勿动）', 'goodsPriceStr': '0.01', 'skuId': 14676, 'subType': 200, 'suitType': 0}], 'optimalBo': {'couponSelectStatus': 1, 'deductValue': 10.02, 'deductValueStr': '10.02', 'marginDeductValueStr': None, 'marginMinValueStr': None, 'marginUserCouponId': None, 'userCouponId': 4691}, 'payAmount': '0', 'payAmountStr': '0', 'selfDiscountAmountStr': '0', 'selfDiscountStr': None, 'totalAmountStr': '10.02', 'tradeCalculateGroupCardBo': None, 'tradeResult': 'TRADE_CALCULATE_SUCCESS', 'tradeTitle': '自动化性别不限（勿动）等3项商品', 'tradeType': 200}, 'success': True}
2020-12-28 09:59:35,016-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.484384s
2020-12-28 09:59:35,018-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:59:35,019-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.484384, 'data': {'addFeeitemDiscountStr': None, 'couponAmountStr': '10.02', 'groupCardAmountStr': '0', 'hostTradeInfoBo': None, 'items': [{'discountStr': '', 'goodsCount': 1, 'goodsName': '血型', 'goodsPriceStr': '10', 'skuId': 14626, 'subType': 201, 'suitType': 0}, {'discountStr': '', 'goodsCount': 1, 'goodsName': '泌尿系彩超（男性）', 'goodsPriceStr': '0.01', 'skuId': 10335, 'subType': 201, 'suitType': 0}, {'discountStr': '', 'goodsCount': 1, 'goodsName': '自动化性别不限（勿动）', 'goodsPriceStr': '0.01', 'skuId': 14676, 'subType': 200, 'suitType': 0}], 'optimalBo': {'couponSelectStatus': 1, 'deductValue': 10.02, 'deductValueStr': '10.02', 'marginDeductValueStr': None, 'marginMinValueStr': None, 'marginUserCouponId': None, 'userCouponId': 4691}, 'payAmount': '0', 'payAmountStr': '0', 'selfDiscountAmountStr': '0', 'selfDiscountStr': None, 'totalAmountStr': '10.02', 'tradeCalculateGroupCardBo': None, 'tradeResult': 'TRADE_CALCULATE_SUCCESS', 'tradeTitle': '自动化性别不限（勿动）等3项商品', 'tradeType': 200}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:59:35,935-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:59:35,936-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:59:35,938-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:59:35,939-[INFO]-logger.py-Unit_test-日志信息:正在执行第40条用例:【体检预约】3-性别不限个检套餐-科学体检选择性别男-预约女身份证提交订单-失败
2020-12-28 09:59:35,940-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：https://management-fed-gray.helianhealth.com/envk8s/healthmanage-web/app/market/reserve/genderMatch；method：GET；data：{'gender':1, 'cardNo':110101199003072623, "skuId": 14676, "optionalItemSkuIds":10335}；sql：{'my_sql': 'select user_id,reserve_id from trade_examination_reserve where  user_id=%s ORDER BY create_time desc;', 'condition': '17200000090', 'code': 0, 'result': 17200000090, 'sql': 1}
2020-12-28 09:59:36,164-[INFO]-logger.py-all_method-日志信息:登录请求返回：{'code': '0', 'errorMsg': '', 'result': {'card_id': None, 'cellnumber': '15258814180', 'img_url': 'https://file.helianhealth.com/userPic/2020/09/23/de1780bd71fb4026b3542f30b1c5713b.jpeg', 'nick_name': '羊4180', 'real_name': '羊', 'reg_company': None, 'reg_user_type': 0, 'sex': None, 'token': '4ab1df5b4789b2887aed83479082e55e', 'user_level': None, 'userid': '17200000090'}, 'success': True}
2020-12-28 09:59:36,167-[INFO]-logger.py-all_method-日志信息:请求获取公共header返回：{'deviceId': 'Android-3806ba3c-be48-409e-b1d2-76d517348a64', 'os': '1', 'version': '8.1.3', 'imei': '864551031854596', 'from': '1', 'mac': 'f4:70:ab:60:1e:ea', 'openId': 'oh02_51tYh6ybCZJgQ0LYtbb35bI', 'token': '4ab1df5b4789b2887aed83479082e55e', 'uid': '17200000090'}
2020-12-28 09:59:36,171-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:59:36,174-[INFO]-logger.py-httpRequest-日志信息:现在开始进行get请求
2020-12-28 09:59:36,177-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:59:36,275-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(17200000090, 14778)
2020-12-28 09:59:36,276-[INFO]-logger.py-httpRequest-日志信息:get中数据库返回：(17200000090, 14778)
2020-12-28 09:59:36,277-[INFO]-logger.py-httpRequest-日志信息:现在开始进行【reserveId替换】get,参数格式请求
2020-12-28 09:59:36,494-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '0', 'errorMsg': '', 'result': False, 'success': True}
2020-12-28 09:59:36,495-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.552687s
2020-12-28 09:59:36,496-[INFO]-logger.py-Unit_test-日志信息:接口返回message:
2020-12-28 09:59:36,498-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:False
2020-12-28 09:59:36,500-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:59:36,602-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(17200000090, 14778)
2020-12-28 09:59:36,603-[INFO]-logger.py-Unit_test-日志信息:用例sql比对执行成功！实际返回：17200000090
2020-12-28 09:59:36,604-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.552687, 'data': '', 'code': 'False', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:59:37,472-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:59:37,473-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:59:37,475-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:59:37,476-[INFO]-logger.py-Unit_test-日志信息:正在执行第41条用例:【体检预约】4-性别不限个检套餐-科学体检选择性别男-预约男身份证提交订单-成功
2020-12-28 09:59:37,478-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：https://management-fed-gray.helianhealth.com/envk8s/healthmanage-web/wx/api/market/trade/v2/create；method：POST；data：{"itemDpList":[{"goodsSkuId":14626,"count":1},{"goodsSkuId":10335,"count":1},{"goodsSkuId":14676,"count":1}],"packDpList":[],"payAmount":"10.02","tradeChannel":2,"ext":"{\"groupUserCardId\":\"\",\"tradeGroupCardBindType\":\"0\",\"hostTradeId\":\"\",\"examinationReservePo\":{\"branchId\":\"\",\"cardNo\":\"110101199003075314\",\"married\":1,\"mobile\":\"15258814180\",\"age\":\"30\",\"gender\":1,\"realName\":\"自动化连连\",\"reserveTime\":1637251200000,\"examSuitPkgId\":'',\"intervalId\":1041,\"userId\":17200000090},\"selfSelectedItems\":[]}","userCouponId":"","tradeType":"200","tradeOS":2,"tradeSource":""}；sql：{}
2020-12-28 09:59:37,686-[INFO]-logger.py-all_method-日志信息:登录请求返回：{'code': '0', 'errorMsg': '', 'result': {'card_id': None, 'cellnumber': '15258814180', 'img_url': 'https://file.helianhealth.com/userPic/2020/09/23/de1780bd71fb4026b3542f30b1c5713b.jpeg', 'nick_name': '羊4180', 'real_name': '羊', 'reg_company': None, 'reg_user_type': 0, 'sex': None, 'token': '4ab1df5b4789b2887aed83479082e55e', 'user_level': None, 'userid': '17200000090'}, 'success': True}
2020-12-28 09:59:37,688-[INFO]-logger.py-all_method-日志信息:请求获取公共header返回：{'deviceId': 'Android-3806ba3c-be48-409e-b1d2-76d517348a64', 'os': '1', 'version': '8.1.3', 'imei': '864551031854596', 'from': '1', 'mac': 'f4:70:ab:60:1e:ea', 'openId': 'oh02_51tYh6ybCZJgQ0LYtbb35bI', 'token': '4ab1df5b4789b2887aed83479082e55e', 'uid': '17200000090'}
2020-12-28 09:59:37,689-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 09:59:38,084-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '0', 'errorMsg': '', 'result': {'errorGoods': None, 'inquiryReserveTime': None, 'inquiryUrl': None, 'needPay': 1, 'reportReserveTime': None, 'reserveId': 14779, 'reserveType': None, 'reserveUrl': None, 'selfSelectedItemName': None, 'tradeId': 'TJTC2020122809593807821', 'tradeResult': 'CREATE_TRADE_SUCCESS'}, 'success': True}
2020-12-28 09:59:38,087-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.607393s
2020-12-28 09:59:38,090-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:59:38,092-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.607393, 'data': {'errorGoods': None, 'inquiryReserveTime': None, 'inquiryUrl': None, 'needPay': 1, 'reportReserveTime': None, 'reserveId': 14779, 'reserveType': None, 'reserveUrl': None, 'selfSelectedItemName': None, 'tradeId': 'TJTC2020122809593807821', 'tradeResult': 'CREATE_TRADE_SUCCESS'}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:59:39,018-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:59:39,019-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:59:39,021-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:59:39,022-[INFO]-logger.py-Unit_test-日志信息:正在执行第42条用例:【体检预约】5-性别不限个检套餐-科学体检选择性别男-订单支付-成功
2020-12-28 09:59:39,023-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：https://management-fed-gray.helianhealth.com/envk8s/healthmanage-web/app/market/trade/test/notifySuccess；method：POST；data：{'tradeId':'TJTC2020111916140946146','payType':0,"thirdpartTradeId":"SUB2020111916140946581"}；sql：{'my_sql': 'select user_id,trade_id,sub_trade_id from trade_examination_reserve where  user_id=%s ORDER BY create_time desc;', 'condition': '17200000090', 'code': 0, 'result': 17200000090, 'sql': 3}
2020-12-28 09:59:39,220-[INFO]-logger.py-all_method-日志信息:登录请求返回：{'code': '0', 'errorMsg': '', 'result': {'card_id': None, 'cellnumber': '15258814180', 'img_url': 'https://file.helianhealth.com/userPic/2020/09/23/de1780bd71fb4026b3542f30b1c5713b.jpeg', 'nick_name': '羊4180', 'real_name': '羊', 'reg_company': None, 'reg_user_type': 0, 'sex': None, 'token': '4ab1df5b4789b2887aed83479082e55e', 'user_level': None, 'userid': '17200000090'}, 'success': True}
2020-12-28 09:59:39,221-[INFO]-logger.py-all_method-日志信息:请求获取公共header返回：{'deviceId': 'Android-3806ba3c-be48-409e-b1d2-76d517348a64', 'os': '1', 'version': '8.1.3', 'imei': '864551031854596', 'from': '1', 'mac': 'f4:70:ab:60:1e:ea', 'openId': 'oh02_51tYh6ybCZJgQ0LYtbb35bI', 'token': '4ab1df5b4789b2887aed83479082e55e', 'uid': '17200000090'}
2020-12-28 09:59:39,222-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post请求
2020-12-28 09:59:39,224-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:59:39,433-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(17200000090, 'TJTC2020122809593807821', 'SUB2020122809593808434')
2020-12-28 09:59:39,435-[INFO]-logger.py-httpRequest-日志信息:post中数据库返回：(17200000090, 'TJTC2020122809593807821', 'SUB2020122809593808434')
2020-12-28 09:59:39,437-[INFO]-logger.py-httpRequest-日志信息:现在开始进行【模拟支付tradeId，thirdpartTradeId替换】post,参数格式请求
2020-12-28 09:59:40,472-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '0', 'errorMsg': '', 'result': None, 'success': True}
2020-12-28 09:59:40,475-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 1.449008s
2020-12-28 09:59:40,480-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:59:40,486-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:59:40,584-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(17200000090, 'TJTC2020122809593807821', 'SUB2020122809593808434')
2020-12-28 09:59:40,586-[INFO]-logger.py-Unit_test-日志信息:用例sql比对执行成功！实际返回：17200000090
2020-12-28 09:59:40,587-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 1.449008, 'data': None, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:59:41,519-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:59:41,521-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:59:41,522-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:59:41,523-[INFO]-logger.py-Unit_test-日志信息:正在执行第43条用例:【体检预约】6-性别不限个检套餐-科学体检选择性别男-修改预约女身份证提交订单-失败
2020-12-28 09:59:41,525-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：https://management-fed-gray.helianhealth.com/envk8s/healthmanage-web/app/market/reserve/isCardNoMatchSupportInfo；method：GET；data：{'gender':1, 'cardNo':110101199003072623, "reserveId": 12578}；sql：{'my_sql': 'select user_id,reserve_id from trade_examination_reserve where  user_id=%s ORDER BY create_time desc;', 'condition': '17200000090', 'code': 0, 'result': 17200000090, 'sql': 1}
2020-12-28 09:59:41,724-[INFO]-logger.py-all_method-日志信息:登录请求返回：{'code': '0', 'errorMsg': '', 'result': {'card_id': None, 'cellnumber': '15258814180', 'img_url': 'https://file.helianhealth.com/userPic/2020/09/23/de1780bd71fb4026b3542f30b1c5713b.jpeg', 'nick_name': '羊4180', 'real_name': '羊', 'reg_company': None, 'reg_user_type': 0, 'sex': None, 'token': '4ab1df5b4789b2887aed83479082e55e', 'user_level': None, 'userid': '17200000090'}, 'success': True}
2020-12-28 09:59:41,725-[INFO]-logger.py-all_method-日志信息:请求获取公共header返回：{'deviceId': 'Android-3806ba3c-be48-409e-b1d2-76d517348a64', 'os': '1', 'version': '8.1.3', 'imei': '864551031854596', 'from': '1', 'mac': 'f4:70:ab:60:1e:ea', 'openId': 'oh02_51tYh6ybCZJgQ0LYtbb35bI', 'token': '4ab1df5b4789b2887aed83479082e55e', 'uid': '17200000090'}
2020-12-28 09:59:41,726-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:59:41,727-[INFO]-logger.py-httpRequest-日志信息:现在开始进行get请求
2020-12-28 09:59:41,729-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:59:41,819-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(17200000090, 14779)
2020-12-28 09:59:41,821-[INFO]-logger.py-httpRequest-日志信息:get中数据库返回：(17200000090, 14779)
2020-12-28 09:59:41,822-[INFO]-logger.py-httpRequest-日志信息:现在开始进行【reserveId替换】get,参数格式请求
2020-12-28 09:59:42,040-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '0', 'errorMsg': '', 'result': False, 'success': True}
2020-12-28 09:59:42,042-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.516292s
2020-12-28 09:59:42,044-[INFO]-logger.py-Unit_test-日志信息:接口返回message:
2020-12-28 09:59:42,045-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:False
2020-12-28 09:59:42,048-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:59:42,132-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(17200000090, 14779)
2020-12-28 09:59:42,133-[INFO]-logger.py-Unit_test-日志信息:用例sql比对执行成功！实际返回：17200000090
2020-12-28 09:59:42,134-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.516292, 'data': '', 'code': 'False', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:59:43,057-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:59:43,058-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:59:43,060-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:59:43,061-[INFO]-logger.py-Unit_test-日志信息:正在执行第44条用例:【体检预约】7-性别不限个检套餐-科学体检选择性别男-修改预约男身份证提交订单-成功
2020-12-28 09:59:43,062-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：https://management-fed-gray.helianhealth.com/envk8s/healthmanage-web/app/market/reserve/isCardNoMatchSupportInfo；method：GET；data：{'gender':1, 'cardNo':110101199003075314, "reserveId": 12578}；sql：{'my_sql': 'select user_id,reserve_id from trade_examination_reserve where  user_id=%s ORDER BY create_time desc;', 'condition': '17200000090', 'code': 0, 'result': 17200000090, 'sql': 1}
2020-12-28 09:59:43,278-[INFO]-logger.py-all_method-日志信息:登录请求返回：{'code': '0', 'errorMsg': '', 'result': {'card_id': None, 'cellnumber': '15258814180', 'img_url': 'https://file.helianhealth.com/userPic/2020/09/23/de1780bd71fb4026b3542f30b1c5713b.jpeg', 'nick_name': '羊4180', 'real_name': '羊', 'reg_company': None, 'reg_user_type': 0, 'sex': None, 'token': '4ab1df5b4789b2887aed83479082e55e', 'user_level': None, 'userid': '17200000090'}, 'success': True}
2020-12-28 09:59:43,281-[INFO]-logger.py-all_method-日志信息:请求获取公共header返回：{'deviceId': 'Android-3806ba3c-be48-409e-b1d2-76d517348a64', 'os': '1', 'version': '8.1.3', 'imei': '864551031854596', 'from': '1', 'mac': 'f4:70:ab:60:1e:ea', 'openId': 'oh02_51tYh6ybCZJgQ0LYtbb35bI', 'token': '4ab1df5b4789b2887aed83479082e55e', 'uid': '17200000090'}
2020-12-28 09:59:43,283-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 09:59:43,285-[INFO]-logger.py-httpRequest-日志信息:现在开始进行get请求
2020-12-28 09:59:43,287-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:59:43,360-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(17200000090, 14779)
2020-12-28 09:59:43,361-[INFO]-logger.py-httpRequest-日志信息:get中数据库返回：(17200000090, 14779)
2020-12-28 09:59:43,362-[INFO]-logger.py-httpRequest-日志信息:现在开始进行【reserveId替换】get,参数格式请求
2020-12-28 09:59:43,581-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '0', 'errorMsg': '', 'result': True, 'success': True}
2020-12-28 09:59:43,582-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.519405s
2020-12-28 09:59:43,584-[INFO]-logger.py-Unit_test-日志信息:接口返回message:
2020-12-28 09:59:43,585-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:True
2020-12-28 09:59:43,587-[INFO]-logger.py-get_mysql_info-日志信息:本次数据库调用配置成功！
2020-12-28 09:59:43,707-[INFO]-logger.py-get_mysql_info-日志信息:查询数据库调用成功！(17200000090, 14779)
2020-12-28 09:59:43,708-[INFO]-logger.py-Unit_test-日志信息:用例sql比对执行成功！实际返回：17200000090
2020-12-28 09:59:43,710-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.519405, 'data': '', 'code': 'True', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:59:44,620-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:59:44,621-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:59:44,623-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:59:44,624-[INFO]-logger.py-Unit_test-日志信息:正在执行第45条用例:【体检预约】1-性别不限个检套餐-科学体检选择性别女-重点关注项目推荐-成功
2020-12-28 09:59:44,625-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：https://management-fed-gray.helianhealth.com/envk8s/healthmanage-web/wx/api/examination/addition/cohortRecommendItems；method：POST；data：{"age":"30","cardNo":"","sex":2,"married":1,"mobile":"","useType":0,"userCardId":"","userId":17200000090,"pkgId":2612,"itemIds":[]}；sql：{}
2020-12-28 09:59:44,833-[INFO]-logger.py-all_method-日志信息:登录请求返回：{'code': '0', 'errorMsg': '', 'result': {'card_id': None, 'cellnumber': '15258814180', 'img_url': 'https://file.helianhealth.com/userPic/2020/09/23/de1780bd71fb4026b3542f30b1c5713b.jpeg', 'nick_name': '羊4180', 'real_name': '羊', 'reg_company': None, 'reg_user_type': 0, 'sex': None, 'token': '4ab1df5b4789b2887aed83479082e55e', 'user_level': None, 'userid': '17200000090'}, 'success': True}
2020-12-28 09:59:44,834-[INFO]-logger.py-all_method-日志信息:请求获取公共header返回：{'deviceId': 'Android-3806ba3c-be48-409e-b1d2-76d517348a64', 'os': '1', 'version': '8.1.3', 'imei': '864551031854596', 'from': '1', 'mac': 'f4:70:ab:60:1e:ea', 'openId': 'oh02_51tYh6ybCZJgQ0LYtbb35bI', 'token': '4ab1df5b4789b2887aed83479082e55e', 'uid': '17200000090'}
2020-12-28 09:59:44,836-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 09:59:45,072-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '0', 'errorMsg': '', 'result': {'enablePkgUpgradeTxtShow': 1, 'enableSurveyQuestion': 1, 'examItemList': [{'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'MR0012', 'itemName': '1.0盆腔核磁', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '0.01', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.01, 'reason': '一般常规性检查，对血压、体重等进行评估。', 'recommend': None, 'recommendIndex': 1, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.01', 'skuId': 3444, 'spuId': 3415, 'standardItemId': 2, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'MR0011', 'itemName': '1.0上腹部核磁+MRCP', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '0.01', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.01, 'reason': '系统的外科检查可以早期发现一些病症：如甲状腺结节、骨质增生、前列腺肥大、乳腺增生及腺瘤、直肠息肉等', 'recommend': None, 'recommendIndex': 2, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.01', 'skuId': 3429, 'spuId': 3400, 'standardItemId': 7, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 2, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'HY0018', 'itemName': '乙肝三系统', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '33', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 33.0, 'reason': '现在患鼻炎、咽炎的人越来越多，影响正常的日常生活，如果任由疾病的发展，也有恶变的可能性，早发现早进行干预，提高生活质量。', 'recommend': None, 'recommendIndex': 3, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '33', 'skuId': 10928, 'spuId': 10891, 'standardItemId': 16, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'HY0002', 'itemName': '尿常规', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '6', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 6.0, 'reason': '检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'recommend': None, 'recommendIndex': 4, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '6', 'skuId': 11076, 'spuId': 11039, 'standardItemId': 106, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 2, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'HY0047', 'itemName': '低密度脂蛋白胆固醇', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '0.2', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.2, 'reason': '肾功能检查指标的异常，在临床诊断和治疗上具有重要的意义。', 'recommend': None, 'recommendIndex': 5, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.2', 'skuId': 10524, 'spuId': 10487, 'standardItemId': 112, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'XD0001', 'itemName': '心电图', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '2', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 2.0, 'reason': '在极短的时间内，快速判断心脏相关疾病', 'recommend': None, 'recommendIndex': 6, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '2', 'skuId': 3405, 'spuId': 3376, 'standardItemId': 433, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 2, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'FK00001', 'itemName': '妇科检查', 'itemTagId': 12, 'itemTagName': '女性检查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '0.01', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.01, 'reason': '妇科疾病严重者会引起不孕不育，重视妇科检查，行早发现早治疗原则。', 'recommend': None, 'recommendIndex': 7, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.01', 'skuId': 3381, 'spuId': 3352, 'standardItemId': 863, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'CT0013', 'itemName': '双源上腹部CT（平扫）', 'itemTagId': 20, 'itemTagName': 'X线/CT/核磁检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '2', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 2.0, 'reason': '早孕的血液学诊断，也是某些疾病的辅助判断项目。', 'recommend': None, 'recommendIndex': 8, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '2', 'skuId': 3426, 'spuId': 3397, 'standardItemId': 244, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'MR0002', 'itemName': '1.0颈椎核磁', 'itemTagId': 16, 'itemTagName': '腰颈椎检查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '44', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 44.0, 'reason': '越来越多人被颈椎困扰，早发现早治疗，引起对颈椎健康的重视。', 'recommend': None, 'recommendIndex': 9, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '44', 'skuId': 10779, 'spuId': 10742, 'standardItemId': 267, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'ZL0002', 'itemName': '癌胚抗原CEA', 'itemTagId': 14, 'itemTagName': '心脑血管疾病筛查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '1.02', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 1.02, 'reason': '同型半胱氨酸是一项重要的人体健康指标，心脑血管发病风险的检测', 'recommend': None, 'recommendIndex': 10, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '1.02', 'skuId': 10416, 'spuId': 10379, 'standardItemId': 675, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'FM0005', 'itemName': '糖化血红蛋白（放免）', 'itemTagId': 14, 'itemTagName': '心脑血管疾病筛查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '0.01', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.01, 'reason': '能对这段时间的血糖的平均水平进行评价', 'recommend': None, 'recommendIndex': 11, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.01', 'skuId': 10754, 'spuId': 10717, 'standardItemId': 685, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'CS00011', 'itemName': '颈部血管彩超（中心）1', 'itemTagId': 14, 'itemTagName': '心脑血管疾病筛查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '222', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 222.0, 'reason': '冠心病、高血压病、脑卒中、脑出血、糖尿病等疾病年轻化，通过颈动脉彩超可以了解大脑供血情况，同时可以间接了解脑动脉及心脏的冠状动脉的血管条件，早预防早治疗，降低猝死率', 'recommend': None, 'recommendIndex': 12, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '222', 'skuId': 10776, 'spuId': 10739, 'standardItemId': 472, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 2, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'CS00006', 'itemName': '双侧乳腺彩超', 'itemTagId': 19, 'itemTagName': 'B超检查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '100', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 100.0, 'reason': '筛查乳腺疾病，如乳腺癌、乳腺增生、乳腺结节等，女性必查。', 'recommend': None, 'recommendIndex': 13, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '100', 'skuId': 14629, 'spuId': 14586, 'standardItemId': 61, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'ZL0011', 'itemName': 'CA724（胃癌抗原）', 'itemTagId': 15, 'itemTagName': '癌症筛查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '11', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 11.0, 'reason': '广谱肿瘤标志物，如：结直肠癌、肺癌、胃癌等筛查，早筛早防。', 'recommend': None, 'recommendIndex': 14, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '11', 'skuId': 14751, 'spuId': 14708, 'standardItemId': 1023, 'stationId': 'HL99998'}], 'percent': 0, 'pkgUpgradeTxt': '30岁人群工作压力大，熬夜、饮食不规律等，患病风险逐渐年轻化，需要重点关注“颈椎疾病”、“胃部疾病”和“甲状腺疾病”及女性“宫颈癌”筛查。', 'policy': '4'}, 'success': True}
2020-12-28 09:59:45,082-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.455843s
2020-12-28 09:59:45,085-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:59:45,088-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.455843, 'data': {'enablePkgUpgradeTxtShow': 1, 'enableSurveyQuestion': 1, 'examItemList': [{'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'MR0012', 'itemName': '1.0盆腔核磁', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '0.01', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.01, 'reason': '一般常规性检查，对血压、体重等进行评估。', 'recommend': None, 'recommendIndex': 1, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.01', 'skuId': 3444, 'spuId': 3415, 'standardItemId': 2, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'MR0011', 'itemName': '1.0上腹部核磁+MRCP', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '0.01', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.01, 'reason': '系统的外科检查可以早期发现一些病症：如甲状腺结节、骨质增生、前列腺肥大、乳腺增生及腺瘤、直肠息肉等', 'recommend': None, 'recommendIndex': 2, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.01', 'skuId': 3429, 'spuId': 3400, 'standardItemId': 7, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 2, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'HY0018', 'itemName': '乙肝三系统', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '33', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 33.0, 'reason': '现在患鼻炎、咽炎的人越来越多，影响正常的日常生活，如果任由疾病的发展，也有恶变的可能性，早发现早进行干预，提高生活质量。', 'recommend': None, 'recommendIndex': 3, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '33', 'skuId': 10928, 'spuId': 10891, 'standardItemId': 16, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'HY0002', 'itemName': '尿常规', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '6', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 6.0, 'reason': '检查泌尿系统疾病，如泌尿系统感染、肿瘤、结石及了解肾功能等', 'recommend': None, 'recommendIndex': 4, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '6', 'skuId': 11076, 'spuId': 11039, 'standardItemId': 106, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 2, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'HY0047', 'itemName': '低密度脂蛋白胆固醇', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '0.2', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.2, 'reason': '肾功能检查指标的异常，在临床诊断和治疗上具有重要的意义。', 'recommend': None, 'recommendIndex': 5, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.2', 'skuId': 10524, 'spuId': 10487, 'standardItemId': 112, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'XD0001', 'itemName': '心电图', 'itemTagId': 18, 'itemTagName': '必选检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '2', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 2.0, 'reason': '在极短的时间内，快速判断心脏相关疾病', 'recommend': None, 'recommendIndex': 6, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '2', 'skuId': 3405, 'spuId': 3376, 'standardItemId': 433, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 2, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'FK00001', 'itemName': '妇科检查', 'itemTagId': 12, 'itemTagName': '女性检查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '0.01', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.01, 'reason': '妇科疾病严重者会引起不孕不育，重视妇科检查，行早发现早治疗原则。', 'recommend': None, 'recommendIndex': 7, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.01', 'skuId': 3381, 'spuId': 3352, 'standardItemId': 863, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'CT0013', 'itemName': '双源上腹部CT（平扫）', 'itemTagId': 20, 'itemTagName': 'X线/CT/核磁检查', 'itemTags': None, 'label': ['必检'], 'notice': None, 'optionType': None, 'originalPrice': '2', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 2.0, 'reason': '早孕的血液学诊断，也是某些疾病的辅助判断项目。', 'recommend': None, 'recommendIndex': 8, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '2', 'skuId': 3426, 'spuId': 3397, 'standardItemId': 244, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'MR0002', 'itemName': '1.0颈椎核磁', 'itemTagId': 16, 'itemTagName': '腰颈椎检查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '44', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 44.0, 'reason': '越来越多人被颈椎困扰，早发现早治疗，引起对颈椎健康的重视。', 'recommend': None, 'recommendIndex': 9, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '44', 'skuId': 10779, 'spuId': 10742, 'standardItemId': 267, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'ZL0002', 'itemName': '癌胚抗原CEA', 'itemTagId': 14, 'itemTagName': '心脑血管疾病筛查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '1.02', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 1.02, 'reason': '同型半胱氨酸是一项重要的人体健康指标，心脑血管发病风险的检测', 'recommend': None, 'recommendIndex': 10, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '1.02', 'skuId': 10416, 'spuId': 10379, 'standardItemId': 675, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'FM0005', 'itemName': '糖化血红蛋白（放免）', 'itemTagId': 14, 'itemTagName': '心脑血管疾病筛查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '0.01', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 0.01, 'reason': '能对这段时间的血糖的平均水平进行评价', 'recommend': None, 'recommendIndex': 11, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '0.01', 'skuId': 10754, 'spuId': 10717, 'standardItemId': 685, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'CS00011', 'itemName': '颈部血管彩超（中心）1', 'itemTagId': 14, 'itemTagName': '心脑血管疾病筛查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '222', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 222.0, 'reason': '冠心病、高血压病、脑卒中、脑出血、糖尿病等疾病年轻化，通过颈动脉彩超可以了解大脑供血情况，同时可以间接了解脑动脉及心脏的冠状动脉的血管条件，早预防早治疗，降低猝死率', 'recommend': None, 'recommendIndex': 12, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '222', 'skuId': 10776, 'spuId': 10739, 'standardItemId': 472, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 2, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'CS00006', 'itemName': '双侧乳腺彩超', 'itemTagId': 19, 'itemTagName': 'B超检查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '100', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 100.0, 'reason': '筛查乳腺疾病，如乳腺癌、乳腺增生、乳腺结节等，女性必查。', 'recommend': None, 'recommendIndex': 13, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '100', 'skuId': 14629, 'spuId': 14586, 'standardItemId': 61, 'stationId': 'HL99998'}, {'cohort': None, 'contraindication': None, 'desc': None, 'discount': '1', 'disease': None, 'excludeIds': None, 'gender': 0, 'inPkgItem': False, 'isDiscount': False, 'isLimosis': None, 'isUrine': None, 'itemDiscount': None, 'itemId': 'ZL0011', 'itemName': 'CA724（胃癌抗原）', 'itemTagId': 15, 'itemTagName': '癌症筛查', 'itemTags': None, 'label': None, 'notice': None, 'optionType': None, 'originalPrice': '11', 'price': None, 'purchaseNum': None, 'purpose': None, 'realPrice': 11.0, 'reason': '广谱肿瘤标志物，如：结直肠癌、肺癌、胃癌等筛查，早筛早防。', 'recommend': None, 'recommendIndex': 14, 'recommendTag': 0, 'recommendType': 16, 'reservePersonalId': None, 'salePrice': '11', 'skuId': 14751, 'spuId': 14708, 'standardItemId': 1023, 'stationId': 'HL99998'}], 'percent': 0, 'pkgUpgradeTxt': '30岁人群工作压力大，熬夜、饮食不规律等，患病风险逐渐年轻化，需要重点关注“颈椎疾病”、“胃部疾病”和“甲状腺疾病”及女性“宫颈癌”筛查。', 'policy': '4'}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:59:46,030-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:59:46,032-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:59:46,033-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:59:46,034-[INFO]-logger.py-Unit_test-日志信息:正在执行第46条用例:【体检预约】2-性别不限个检套餐-科学体检选择性别女-订单支付前计算金额-成功
2020-12-28 09:59:46,035-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：https://management-fed-gray.helianhealth.com/envk8s/healthmanage-web/app/market/trade/compute；method：POST；data：{"exampackagePkgId":"","userCouponId":"0","hostTradeId":"","itemDpList":[{"goodsSkuId":14626,"count":1},{"goodsSkuId":10957,"count":1},{"goodsSkuId":14676,"count":1}],"packDpList":[],"tradeGroupCardBindType":"0","userCardId":"","tradeType":200}；sql：{}
2020-12-28 09:59:46,228-[INFO]-logger.py-all_method-日志信息:登录请求返回：{'code': '0', 'errorMsg': '', 'result': {'card_id': None, 'cellnumber': '15258814180', 'img_url': 'https://file.helianhealth.com/userPic/2020/09/23/de1780bd71fb4026b3542f30b1c5713b.jpeg', 'nick_name': '羊4180', 'real_name': '羊', 'reg_company': None, 'reg_user_type': 0, 'sex': None, 'token': '4ab1df5b4789b2887aed83479082e55e', 'user_level': None, 'userid': '17200000090'}, 'success': True}
2020-12-28 09:59:46,231-[INFO]-logger.py-all_method-日志信息:请求获取公共header返回：{'deviceId': 'Android-3806ba3c-be48-409e-b1d2-76d517348a64', 'os': '1', 'version': '8.1.3', 'imei': '864551031854596', 'from': '1', 'mac': 'f4:70:ab:60:1e:ea', 'openId': 'oh02_51tYh6ybCZJgQ0LYtbb35bI', 'token': '4ab1df5b4789b2887aed83479082e55e', 'uid': '17200000090'}
2020-12-28 09:59:46,233-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 09:59:46,522-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '0', 'errorMsg': '', 'result': {'addFeeitemDiscountStr': None, 'couponAmountStr': '16.51', 'groupCardAmountStr': '0', 'hostTradeInfoBo': None, 'items': [{'discountStr': '', 'goodsCount': 1, 'goodsName': '血型', 'goodsPriceStr': '10', 'skuId': 14626, 'subType': 201, 'suitType': 0}, {'discountStr': '', 'goodsCount': 1, 'goodsName': '泌尿系彩超（女性）中心', 'goodsPriceStr': '6.5', 'skuId': 10957, 'subType': 201, 'suitType': 0}, {'discountStr': '', 'goodsCount': 1, 'goodsName': '自动化性别不限（勿动）', 'goodsPriceStr': '0.01', 'skuId': 14676, 'subType': 200, 'suitType': 0}], 'optimalBo': {'couponSelectStatus': 1, 'deductValue': 16.51, 'deductValueStr': '16.51', 'marginDeductValueStr': None, 'marginMinValueStr': None, 'marginUserCouponId': None, 'userCouponId': 4691}, 'payAmount': '0', 'payAmountStr': '0', 'selfDiscountAmountStr': '0', 'selfDiscountStr': None, 'totalAmountStr': '16.51', 'tradeCalculateGroupCardBo': None, 'tradeResult': 'TRADE_CALCULATE_SUCCESS', 'tradeTitle': '自动化性别不限（勿动）等3项商品', 'tradeType': 200}, 'success': True}
2020-12-28 09:59:46,524-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.486883s
2020-12-28 09:59:46,525-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:59:46,526-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.486883, 'data': {'addFeeitemDiscountStr': None, 'couponAmountStr': '16.51', 'groupCardAmountStr': '0', 'hostTradeInfoBo': None, 'items': [{'discountStr': '', 'goodsCount': 1, 'goodsName': '血型', 'goodsPriceStr': '10', 'skuId': 14626, 'subType': 201, 'suitType': 0}, {'discountStr': '', 'goodsCount': 1, 'goodsName': '泌尿系彩超（女性）中心', 'goodsPriceStr': '6.5', 'skuId': 10957, 'subType': 201, 'suitType': 0}, {'discountStr': '', 'goodsCount': 1, 'goodsName': '自动化性别不限（勿动）', 'goodsPriceStr': '0.01', 'skuId': 14676, 'subType': 200, 'suitType': 0}], 'optimalBo': {'couponSelectStatus': 1, 'deductValue': 16.51, 'deductValueStr': '16.51', 'marginDeductValueStr': None, 'marginMinValueStr': None, 'marginUserCouponId': None, 'userCouponId': 4691}, 'payAmount': '0', 'payAmountStr': '0', 'selfDiscountAmountStr': '0', 'selfDiscountStr': None, 'totalAmountStr': '16.51', 'tradeCalculateGroupCardBo': None, 'tradeResult': 'TRADE_CALCULATE_SUCCESS', 'tradeTitle': '自动化性别不限（勿动）等3项商品', 'tradeType': 200}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:59:47,433-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:59:47,434-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 09:59:47,436-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 09:59:47,437-[INFO]-logger.py-Unit_test-日志信息:正在执行第47条用例:【体检预约】3-性别不限个检套餐-科学体检选择性别女-预约女身份证提交订单-成功
2020-12-28 09:59:47,438-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：https://management-fed-gray.helianhealth.com/envk8s/healthmanage-web/wx/api/market/trade/v2/create；method：POST；data：{"itemDpList":[{"goodsSkuId":14626,"count":1},{"goodsSkuId":10957,"count":1},{"goodsSkuId":14676,"count":1}],"packDpList":[],"payAmount":"16.51","tradeChannel":2,"ext":"{\"groupUserCardId\":\"\",\"tradeGroupCardBindType\":\"0\",\"hostTradeId\":\"\",\"examinationReservePo\":{\"branchId\":\"\",\"cardNo\":\"110101199003072623\",\"married\":1,\"mobile\":\"15258814180\",\"age\":\"30\",\"gender\":2,\"realName\":\"接口自动化连连女\",\"reserveTime\":1637251200000,\"examSuitPkgId\":'',\"intervalId\":1041,\"userId\":17200000090},\"selfSelectedItems\":[]}","userCouponId":"","tradeType":"200","tradeOS":2,"tradeSource":""}；sql：{}
2020-12-28 09:59:47,634-[INFO]-logger.py-all_method-日志信息:登录请求返回：{'code': '0', 'errorMsg': '', 'result': {'card_id': None, 'cellnumber': '15258814180', 'img_url': 'https://file.helianhealth.com/userPic/2020/09/23/de1780bd71fb4026b3542f30b1c5713b.jpeg', 'nick_name': '羊4180', 'real_name': '羊', 'reg_company': None, 'reg_user_type': 0, 'sex': None, 'token': '4ab1df5b4789b2887aed83479082e55e', 'user_level': None, 'userid': '17200000090'}, 'success': True}
2020-12-28 09:59:47,635-[INFO]-logger.py-all_method-日志信息:请求获取公共header返回：{'deviceId': 'Android-3806ba3c-be48-409e-b1d2-76d517348a64', 'os': '1', 'version': '8.1.3', 'imei': '864551031854596', 'from': '1', 'mac': 'f4:70:ab:60:1e:ea', 'openId': 'oh02_51tYh6ybCZJgQ0LYtbb35bI', 'token': '4ab1df5b4789b2887aed83479082e55e', 'uid': '17200000090'}
2020-12-28 09:59:47,637-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 09:59:48,006-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '0', 'errorMsg': '', 'result': {'errorGoods': None, 'inquiryReserveTime': None, 'inquiryUrl': None, 'needPay': 1, 'reportReserveTime': None, 'reserveId': 14780, 'reserveType': None, 'reserveUrl': None, 'selfSelectedItemName': None, 'tradeId': 'TJTC2020122809594800779', 'tradeResult': 'CREATE_TRADE_SUCCESS'}, 'success': True}
2020-12-28 09:59:48,009-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.568183s
2020-12-28 09:59:48,012-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 09:59:48,015-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.568183, 'data': {'errorGoods': None, 'inquiryReserveTime': None, 'inquiryUrl': None, 'needPay': 1, 'reportReserveTime': None, 'reserveId': 14780, 'reserveType': None, 'reserveUrl': None, 'selfSelectedItemName': None, 'tradeId': 'TJTC2020122809594800779', 'tradeResult': 'CREATE_TRADE_SUCCESS'}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 09:59:48,940-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 09:59:48,941-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:00:34,681-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 10:00:34,682-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 10:00:34,995-[INFO]-logger.py-Unit_test-日志信息:当前使用的用例表单：Sheet4
2020-12-28 10:00:35,518-[INFO]-logger.py-readExcel-日志信息:获取表单成功：<Worksheet "Sheet4">
2020-12-28 10:00:35,522-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:00:35,523-[INFO]-logger.py-Unit_test-日志信息:正在执行第34条用例:【腾讯健康】1-查询套餐标签-成功
2020-12-28 10:00:35,525-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/tag；method：GET；data：{"orgId":"HL00001"}；sql：{}
2020-12-28 10:00:35,530-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:00:35,568-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:00:35,570-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:00:35,668-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [{'code': 'tagGender', 'options': [{'code': '00', 'text': '通用'}, {'code': '20', 'text': '女'}, {'code': '10', 'text': '男'}], 'text': '性别'}, {'code': 'tagGroup', 'options': [{'code': 'settag001', 'text': '入职体检'}, {'code': 'settag002', 'text': '青年女性'}, {'code': 'settag003', 'text': '青年男性'}, {'code': 'settag004', 'text': '父母体检'}, {'code': 'settag005', 'text': '白领体检'}], 'text': '人群'}, {'code': 'tagItem', 'options': [{'code': '34', 'text': '关节炎'}, {'code': '28', 'text': '肠胃病'}, {'code': '29', 'text': '肺部疾病'}, {'code': '30', 'text': '妇科疾病'}], 'text': '项目'}], 'message': '成功'}
2020-12-28 10:00:35,670-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.143929s
2020-12-28 10:00:35,671-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 10:00:35,672-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.143929, 'data': [{'code': 'tagGender', 'options': [{'code': '00', 'text': '通用'}, {'code': '20', 'text': '女'}, {'code': '10', 'text': '男'}], 'text': '性别'}, {'code': 'tagGroup', 'options': [{'code': 'settag001', 'text': '入职体检'}, {'code': 'settag002', 'text': '青年女性'}, {'code': 'settag003', 'text': '青年男性'}, {'code': 'settag004', 'text': '父母体检'}, {'code': 'settag005', 'text': '白领体检'}], 'text': '人群'}, {'code': 'tagItem', 'options': [{'code': '34', 'text': '关节炎'}, {'code': '28', 'text': '肠胃病'}, {'code': '29', 'text': '肺部疾病'}, {'code': '30', 'text': '妇科疾病'}], 'text': '项目'}], 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:00:36,633-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:00:36,634-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:00:36,635-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:00:36,637-[INFO]-logger.py-Unit_test-日志信息:正在执行第35条用例:【腾讯健康】2-查询套餐标签-必填机构ID为空-失败
2020-12-28 10:00:36,638-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/tag；method：GET；data：{"orgId":""}；sql：{}
2020-12-28 10:00:36,639-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:00:36,675-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:00:36,676-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:00:36,706-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [], 'message': '成功'}
2020-12-28 10:00:36,707-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.067976s
2020-12-28 10:00:36,708-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 10:00:37,646-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:00:37,647-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:00:37,653-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:00:37,654-[INFO]-logger.py-Unit_test-日志信息:正在执行第36条用例:【腾讯健康】3-查询套餐标签-机构ID字段缺少-失败
2020-12-28 10:00:37,655-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/tag；method：GET；data：{}；sql：{}
2020-12-28 10:00:37,656-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:00:37,693-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:00:37,695-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:00:37,722-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为orgId', 'result': None, 'success': False}
2020-12-28 10:00:37,723-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.066961s
2020-12-28 10:00:37,724-[INFO]-logger.py-Unit_test-日志信息:接口返回message:缺少必要参数,参数名称为orgId
2020-12-28 10:00:37,725-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 10:00:37,726-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.066961, 'data': '缺少必要参数,参数名称为orgId', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:00:38,744-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:00:38,745-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:00:38,746-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:00:38,747-[INFO]-logger.py-Unit_test-日志信息:正在执行第37条用例:【腾讯健康】4-查询套餐标签-srt机构ID为int-失败
2020-12-28 10:00:38,749-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/tag；method：GET；data：{"orgId":9999}；sql：{}
2020-12-28 10:00:38,750-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:00:38,773-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:00:38,775-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:00:38,817-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [], 'message': '成功'}
2020-12-28 10:00:38,818-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.06899s
2020-12-28 10:00:38,819-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 10:00:39,787-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:00:39,788-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:00:39,793-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:00:39,794-[INFO]-logger.py-Unit_test-日志信息:正在执行第38条用例:【腾讯健康】5-查询套餐标签-必填无效机构ID-失败
2020-12-28 10:00:39,795-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/tag；method：GET；data：{"orgId":"HL95685"}；sql：{}
2020-12-28 10:00:39,797-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:00:39,854-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:00:39,855-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:00:39,880-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [], 'message': '成功'}
2020-12-28 10:00:39,881-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.085006s
2020-12-28 10:00:39,883-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 10:00:40,829-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:00:40,831-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:00:40,835-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:00:40,836-[INFO]-logger.py-Unit_test-日志信息:正在执行第39条用例:【腾讯健康】1-查询是否能变更体检日期-成功
2020-12-28 10:00:40,838-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/changeDate；method：GET；data：{"packageId":5,"orgId":"HL00001"}；sql：{}
2020-12-28 10:00:40,840-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:00:40,890-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:00:40,891-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:00:40,918-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'changeDate': True, 'days': 1, 'times': 5}, 'message': '成功'}
2020-12-28 10:00:40,919-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.080968s
2020-12-28 10:00:40,921-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 10:00:40,922-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.080968, 'data': {'changeDate': True, 'days': 1, 'times': 5}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:00:41,828-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:00:41,829-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:00:41,830-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:00:41,831-[INFO]-logger.py-Unit_test-日志信息:正在执行第40条用例:【腾讯健康】2-查询是否能变更体检日期-必填套餐ID为空-失败
2020-12-28 10:00:41,832-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/schedule；method：GET；data：{"packageId":"","orgId":"HL00001"}；sql：{}
2020-12-28 10:00:41,834-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:00:41,868-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:00:41,870-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:00:42,132-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [{'date': '2020-12-30', 'leftNum': '999', 'period': []}, {'date': '2020-12-31', 'leftNum': '999', 'period': []}, {'date': '2021-01-01', 'leftNum': '999', 'period': []}, {'date': '2021-01-02', 'leftNum': '999', 'period': []}, {'date': '2021-01-05', 'leftNum': '999', 'period': []}, {'date': '2021-01-06', 'leftNum': '999', 'period': []}, {'date': '2021-01-07', 'leftNum': '999', 'period': []}, {'date': '2021-01-08', 'leftNum': '999', 'period': []}, {'date': '2021-01-09', 'leftNum': '999', 'period': []}, {'date': '2021-01-12', 'leftNum': '999', 'period': []}, {'date': '2021-01-13', 'leftNum': '999', 'period': []}, {'date': '2021-01-14', 'leftNum': '999', 'period': []}, {'date': '2021-01-15', 'leftNum': '999', 'period': []}, {'date': '2021-01-16', 'leftNum': '999', 'period': []}, {'date': '2021-01-19', 'leftNum': '999', 'period': []}, {'date': '2021-01-20', 'leftNum': '999', 'period': []}, {'date': '2021-01-21', 'leftNum': '999', 'period': []}, {'date': '2021-01-22', 'leftNum': '999', 'period': []}, {'date': '2021-01-23', 'leftNum': '999', 'period': []}, {'date': '2021-01-26', 'leftNum': '999', 'period': []}, {'date': '2021-01-27', 'leftNum': '999', 'period': []}, {'date': '2021-01-28', 'leftNum': '999', 'period': []}, {'date': '2021-01-29', 'leftNum': '999', 'period': []}, {'date': '2021-01-30', 'leftNum': '999', 'period': []}, {'date': '2021-02-02', 'leftNum': '999', 'period': []}, {'date': '2021-02-03', 'leftNum': '999', 'period': []}, {'date': '2021-02-04', 'leftNum': '999', 'period': []}, {'date': '2021-02-05', 'leftNum': '999', 'period': []}, {'date': '2021-02-06', 'leftNum': '999', 'period': []}, {'date': '2021-02-09', 'leftNum': '999', 'period': []}, {'date': '2021-02-10', 'leftNum': '999', 'period': []}, {'date': '2021-02-11', 'leftNum': '999', 'period': []}, {'date': '2021-02-12', 'leftNum': '999', 'period': []}, {'date': '2021-02-13', 'leftNum': '999', 'period': []}, {'date': '2021-02-16', 'leftNum': '999', 'period': []}, {'date': '2021-02-17', 'leftNum': '999', 'period': []}, {'date': '2021-02-18', 'leftNum': '999', 'period': []}, {'date': '2021-02-19', 'leftNum': '999', 'period': []}, {'date': '2021-02-20', 'leftNum': '999', 'period': []}, {'date': '2021-02-23', 'leftNum': '999', 'period': []}, {'date': '2021-02-24', 'leftNum': '999', 'period': []}, {'date': '2021-02-25', 'leftNum': '999', 'period': []}, {'date': '2021-02-26', 'leftNum': '999', 'period': []}, {'date': '2021-02-27', 'leftNum': '999', 'period': []}], 'message': '成功'}
2020-12-28 10:00:42,135-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.300841s
2020-12-28 10:00:42,137-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 10:00:43,123-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:00:43,125-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:00:43,129-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:00:43,130-[INFO]-logger.py-Unit_test-日志信息:正在执行第41条用例:【腾讯健康】3-查询是否能变更体检日期-str套餐ID为int-失败
2020-12-28 10:00:43,131-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/schedule；method：GET；data：{"packageId":5,"orgId":"HL00001"}；sql：{}
2020-12-28 10:00:43,133-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:00:43,178-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:00:43,179-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:00:43,431-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [{'date': '2020-12-30', 'leftNum': '999', 'period': []}, {'date': '2020-12-31', 'leftNum': '999', 'period': []}, {'date': '2021-01-01', 'leftNum': '999', 'period': []}, {'date': '2021-01-02', 'leftNum': '999', 'period': []}, {'date': '2021-01-05', 'leftNum': '999', 'period': []}, {'date': '2021-01-06', 'leftNum': '999', 'period': []}, {'date': '2021-01-07', 'leftNum': '999', 'period': []}, {'date': '2021-01-08', 'leftNum': '999', 'period': []}, {'date': '2021-01-09', 'leftNum': '999', 'period': []}, {'date': '2021-01-12', 'leftNum': '999', 'period': []}, {'date': '2021-01-13', 'leftNum': '999', 'period': []}, {'date': '2021-01-14', 'leftNum': '999', 'period': []}, {'date': '2021-01-15', 'leftNum': '999', 'period': []}, {'date': '2021-01-16', 'leftNum': '999', 'period': []}, {'date': '2021-01-19', 'leftNum': '999', 'period': []}, {'date': '2021-01-20', 'leftNum': '999', 'period': []}, {'date': '2021-01-21', 'leftNum': '999', 'period': []}, {'date': '2021-01-22', 'leftNum': '999', 'period': []}, {'date': '2021-01-23', 'leftNum': '999', 'period': []}, {'date': '2021-01-26', 'leftNum': '999', 'period': []}, {'date': '2021-01-27', 'leftNum': '999', 'period': []}, {'date': '2021-01-28', 'leftNum': '999', 'period': []}, {'date': '2021-01-29', 'leftNum': '999', 'period': []}, {'date': '2021-01-30', 'leftNum': '999', 'period': []}, {'date': '2021-02-02', 'leftNum': '999', 'period': []}, {'date': '2021-02-03', 'leftNum': '999', 'period': []}, {'date': '2021-02-04', 'leftNum': '999', 'period': []}, {'date': '2021-02-05', 'leftNum': '999', 'period': []}, {'date': '2021-02-06', 'leftNum': '999', 'period': []}, {'date': '2021-02-09', 'leftNum': '999', 'period': []}, {'date': '2021-02-10', 'leftNum': '999', 'period': []}, {'date': '2021-02-11', 'leftNum': '999', 'period': []}, {'date': '2021-02-12', 'leftNum': '999', 'period': []}, {'date': '2021-02-13', 'leftNum': '999', 'period': []}, {'date': '2021-02-16', 'leftNum': '999', 'period': []}, {'date': '2021-02-17', 'leftNum': '999', 'period': []}, {'date': '2021-02-18', 'leftNum': '999', 'period': []}, {'date': '2021-02-19', 'leftNum': '999', 'period': []}, {'date': '2021-02-20', 'leftNum': '999', 'period': []}, {'date': '2021-02-23', 'leftNum': '999', 'period': []}, {'date': '2021-02-24', 'leftNum': '999', 'period': []}, {'date': '2021-02-25', 'leftNum': '999', 'period': []}, {'date': '2021-02-26', 'leftNum': '999', 'period': []}, {'date': '2021-02-27', 'leftNum': '999', 'period': []}], 'message': '成功'}
2020-12-28 10:00:43,432-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.300897s
2020-12-28 10:00:43,436-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 10:00:44,363-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:00:44,364-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:00:44,368-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:00:44,369-[INFO]-logger.py-Unit_test-日志信息:正在执行第42条用例:【腾讯健康】4-查询是否能变更体检日期-必填无效的套餐ID-失败
2020-12-28 10:00:44,371-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/schedule；method：GET；data：{"packageId":"999","orgId":"HL00001"}；sql：{}
2020-12-28 10:00:44,372-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:00:44,409-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:00:44,411-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:00:44,663-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [{'date': '2020-12-30', 'leftNum': '999', 'period': []}, {'date': '2020-12-31', 'leftNum': '999', 'period': []}, {'date': '2021-01-01', 'leftNum': '999', 'period': []}, {'date': '2021-01-02', 'leftNum': '999', 'period': []}, {'date': '2021-01-05', 'leftNum': '999', 'period': []}, {'date': '2021-01-06', 'leftNum': '999', 'period': []}, {'date': '2021-01-07', 'leftNum': '999', 'period': []}, {'date': '2021-01-08', 'leftNum': '999', 'period': []}, {'date': '2021-01-09', 'leftNum': '999', 'period': []}, {'date': '2021-01-12', 'leftNum': '999', 'period': []}, {'date': '2021-01-13', 'leftNum': '999', 'period': []}, {'date': '2021-01-14', 'leftNum': '999', 'period': []}, {'date': '2021-01-15', 'leftNum': '999', 'period': []}, {'date': '2021-01-16', 'leftNum': '999', 'period': []}, {'date': '2021-01-19', 'leftNum': '999', 'period': []}, {'date': '2021-01-20', 'leftNum': '999', 'period': []}, {'date': '2021-01-21', 'leftNum': '999', 'period': []}, {'date': '2021-01-22', 'leftNum': '999', 'period': []}, {'date': '2021-01-23', 'leftNum': '999', 'period': []}, {'date': '2021-01-26', 'leftNum': '999', 'period': []}, {'date': '2021-01-27', 'leftNum': '999', 'period': []}, {'date': '2021-01-28', 'leftNum': '999', 'period': []}, {'date': '2021-01-29', 'leftNum': '999', 'period': []}, {'date': '2021-01-30', 'leftNum': '999', 'period': []}, {'date': '2021-02-02', 'leftNum': '999', 'period': []}, {'date': '2021-02-03', 'leftNum': '999', 'period': []}, {'date': '2021-02-04', 'leftNum': '999', 'period': []}, {'date': '2021-02-05', 'leftNum': '999', 'period': []}, {'date': '2021-02-06', 'leftNum': '999', 'period': []}, {'date': '2021-02-09', 'leftNum': '999', 'period': []}, {'date': '2021-02-10', 'leftNum': '999', 'period': []}, {'date': '2021-02-11', 'leftNum': '999', 'period': []}, {'date': '2021-02-12', 'leftNum': '999', 'period': []}, {'date': '2021-02-13', 'leftNum': '999', 'period': []}, {'date': '2021-02-16', 'leftNum': '999', 'period': []}, {'date': '2021-02-17', 'leftNum': '999', 'period': []}, {'date': '2021-02-18', 'leftNum': '999', 'period': []}, {'date': '2021-02-19', 'leftNum': '999', 'period': []}, {'date': '2021-02-20', 'leftNum': '999', 'period': []}, {'date': '2021-02-23', 'leftNum': '999', 'period': []}, {'date': '2021-02-24', 'leftNum': '999', 'period': []}, {'date': '2021-02-25', 'leftNum': '999', 'period': []}, {'date': '2021-02-26', 'leftNum': '999', 'period': []}, {'date': '2021-02-27', 'leftNum': '999', 'period': []}], 'message': '成功'}
2020-12-28 10:00:44,665-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.293419s
2020-12-28 10:00:44,669-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 10:00:45,570-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:00:45,572-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:00:45,576-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:00:45,577-[INFO]-logger.py-Unit_test-日志信息:正在执行第43条用例:【腾讯健康】5-查询是否能变更体检日期-必填套餐ID字段缺失-失败
2020-12-28 10:00:45,578-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/schedule；method：GET；data：{"orgId":"HL00001"}；sql：{}
2020-12-28 10:00:45,580-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:00:45,616-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:00:45,618-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:00:45,652-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为packageId', 'result': None, 'success': False}
2020-12-28 10:00:45,655-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.073962s
2020-12-28 10:00:45,658-[INFO]-logger.py-Unit_test-日志信息:接口返回message:缺少必要参数,参数名称为packageId
2020-12-28 10:00:45,661-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 10:00:45,663-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.073962, 'data': '缺少必要参数,参数名称为packageId', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:00:46,654-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:00:46,656-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:00:46,657-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:00:46,658-[INFO]-logger.py-Unit_test-日志信息:正在执行第44条用例:【腾讯健康】6-查询是否能变更体检日期-非必填机构ID字段缺失-失败
2020-12-28 10:00:46,659-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/schedule；method：GET；data：{"packageId":"5"}；sql：{}
2020-12-28 10:00:46,661-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:00:46,708-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:00:46,709-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:00:46,745-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为orgId', 'result': None, 'success': False}
2020-12-28 10:00:46,746-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.085938s
2020-12-28 10:00:46,747-[INFO]-logger.py-Unit_test-日志信息:接口返回message:缺少必要参数,参数名称为orgId
2020-12-28 10:00:46,748-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 10:00:46,749-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.085938, 'data': '缺少必要参数,参数名称为orgId', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:00:47,696-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:00:47,698-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:00:47,699-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:00:47,700-[INFO]-logger.py-Unit_test-日志信息:正在执行第45条用例:【腾讯健康】7-查询是否能变更体检日期-非必填机构ID为空-成功
2020-12-28 10:00:47,702-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/schedule；method：GET；data：{"packageId":"5","orgId":""}；sql：{}
2020-12-28 10:00:47,704-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:00:47,745-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:00:47,746-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:00:48,002-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [{'date': '2020-12-30', 'leftNum': '999', 'period': []}, {'date': '2020-12-31', 'leftNum': '999', 'period': []}, {'date': '2021-01-01', 'leftNum': '999', 'period': []}, {'date': '2021-01-02', 'leftNum': '999', 'period': []}, {'date': '2021-01-05', 'leftNum': '999', 'period': []}, {'date': '2021-01-06', 'leftNum': '999', 'period': []}, {'date': '2021-01-07', 'leftNum': '999', 'period': []}, {'date': '2021-01-08', 'leftNum': '999', 'period': []}, {'date': '2021-01-09', 'leftNum': '999', 'period': []}, {'date': '2021-01-12', 'leftNum': '999', 'period': []}, {'date': '2021-01-13', 'leftNum': '999', 'period': []}, {'date': '2021-01-14', 'leftNum': '999', 'period': []}, {'date': '2021-01-15', 'leftNum': '999', 'period': []}, {'date': '2021-01-16', 'leftNum': '999', 'period': []}, {'date': '2021-01-19', 'leftNum': '999', 'period': []}, {'date': '2021-01-20', 'leftNum': '999', 'period': []}, {'date': '2021-01-21', 'leftNum': '999', 'period': []}, {'date': '2021-01-22', 'leftNum': '999', 'period': []}, {'date': '2021-01-23', 'leftNum': '999', 'period': []}, {'date': '2021-01-26', 'leftNum': '999', 'period': []}, {'date': '2021-01-27', 'leftNum': '999', 'period': []}, {'date': '2021-01-28', 'leftNum': '999', 'period': []}, {'date': '2021-01-29', 'leftNum': '999', 'period': []}, {'date': '2021-01-30', 'leftNum': '999', 'period': []}, {'date': '2021-02-02', 'leftNum': '999', 'period': []}, {'date': '2021-02-03', 'leftNum': '999', 'period': []}, {'date': '2021-02-04', 'leftNum': '999', 'period': []}, {'date': '2021-02-05', 'leftNum': '999', 'period': []}, {'date': '2021-02-06', 'leftNum': '999', 'period': []}, {'date': '2021-02-09', 'leftNum': '999', 'period': []}, {'date': '2021-02-10', 'leftNum': '999', 'period': []}, {'date': '2021-02-11', 'leftNum': '999', 'period': []}, {'date': '2021-02-12', 'leftNum': '999', 'period': []}, {'date': '2021-02-13', 'leftNum': '999', 'period': []}, {'date': '2021-02-16', 'leftNum': '999', 'period': []}, {'date': '2021-02-17', 'leftNum': '999', 'period': []}, {'date': '2021-02-18', 'leftNum': '999', 'period': []}, {'date': '2021-02-19', 'leftNum': '999', 'period': []}, {'date': '2021-02-20', 'leftNum': '999', 'period': []}, {'date': '2021-02-23', 'leftNum': '999', 'period': []}, {'date': '2021-02-24', 'leftNum': '999', 'period': []}, {'date': '2021-02-25', 'leftNum': '999', 'period': []}, {'date': '2021-02-26', 'leftNum': '999', 'period': []}, {'date': '2021-02-27', 'leftNum': '999', 'period': []}], 'message': '成功'}
2020-12-28 10:00:48,005-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.301395s
2020-12-28 10:00:48,007-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 10:00:48,009-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.301395, 'data': [{'date': '2020-12-30', 'leftNum': '999', 'period': []}, {'date': '2020-12-31', 'leftNum': '999', 'period': []}, {'date': '2021-01-01', 'leftNum': '999', 'period': []}, {'date': '2021-01-02', 'leftNum': '999', 'period': []}, {'date': '2021-01-05', 'leftNum': '999', 'period': []}, {'date': '2021-01-06', 'leftNum': '999', 'period': []}, {'date': '2021-01-07', 'leftNum': '999', 'period': []}, {'date': '2021-01-08', 'leftNum': '999', 'period': []}, {'date': '2021-01-09', 'leftNum': '999', 'period': []}, {'date': '2021-01-12', 'leftNum': '999', 'period': []}, {'date': '2021-01-13', 'leftNum': '999', 'period': []}, {'date': '2021-01-14', 'leftNum': '999', 'period': []}, {'date': '2021-01-15', 'leftNum': '999', 'period': []}, {'date': '2021-01-16', 'leftNum': '999', 'period': []}, {'date': '2021-01-19', 'leftNum': '999', 'period': []}, {'date': '2021-01-20', 'leftNum': '999', 'period': []}, {'date': '2021-01-21', 'leftNum': '999', 'period': []}, {'date': '2021-01-22', 'leftNum': '999', 'period': []}, {'date': '2021-01-23', 'leftNum': '999', 'period': []}, {'date': '2021-01-26', 'leftNum': '999', 'period': []}, {'date': '2021-01-27', 'leftNum': '999', 'period': []}, {'date': '2021-01-28', 'leftNum': '999', 'period': []}, {'date': '2021-01-29', 'leftNum': '999', 'period': []}, {'date': '2021-01-30', 'leftNum': '999', 'period': []}, {'date': '2021-02-02', 'leftNum': '999', 'period': []}, {'date': '2021-02-03', 'leftNum': '999', 'period': []}, {'date': '2021-02-04', 'leftNum': '999', 'period': []}, {'date': '2021-02-05', 'leftNum': '999', 'period': []}, {'date': '2021-02-06', 'leftNum': '999', 'period': []}, {'date': '2021-02-09', 'leftNum': '999', 'period': []}, {'date': '2021-02-10', 'leftNum': '999', 'period': []}, {'date': '2021-02-11', 'leftNum': '999', 'period': []}, {'date': '2021-02-12', 'leftNum': '999', 'period': []}, {'date': '2021-02-13', 'leftNum': '999', 'period': []}, {'date': '2021-02-16', 'leftNum': '999', 'period': []}, {'date': '2021-02-17', 'leftNum': '999', 'period': []}, {'date': '2021-02-18', 'leftNum': '999', 'period': []}, {'date': '2021-02-19', 'leftNum': '999', 'period': []}, {'date': '2021-02-20', 'leftNum': '999', 'period': []}, {'date': '2021-02-23', 'leftNum': '999', 'period': []}, {'date': '2021-02-24', 'leftNum': '999', 'period': []}, {'date': '2021-02-25', 'leftNum': '999', 'period': []}, {'date': '2021-02-26', 'leftNum': '999', 'period': []}, {'date': '2021-02-27', 'leftNum': '999', 'period': []}], 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:00:48,899-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:00:48,900-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:00:48,901-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:00:48,904-[INFO]-logger.py-Unit_test-日志信息:正在执行第46条用例:【腾讯健康】8-查询是否能变更体检日期-str机构ID为int-失败
2020-12-28 10:00:48,905-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/schedule；method：GET；data：{"packageId":"5","orgId":9999}；sql：{}
2020-12-28 10:00:48,906-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:00:48,940-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:00:48,942-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:00:48,968-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [], 'message': '成功'}
2020-12-28 10:00:48,969-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.063966s
2020-12-28 10:00:48,970-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 10:00:49,947-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:00:49,948-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:00:49,953-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:00:49,954-[INFO]-logger.py-Unit_test-日志信息:正在执行第47条用例:【腾讯健康】9-查询是否能变更体检日期-无参数-失败
2020-12-28 10:00:49,955-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/schedule；method：GET；data：{}；sql：{}
2020-12-28 10:00:49,959-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:00:50,008-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:00:50,009-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:00:50,036-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为packageId', 'result': None, 'success': False}
2020-12-28 10:00:50,037-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.077924s
2020-12-28 10:00:50,038-[INFO]-logger.py-Unit_test-日志信息:接口返回message:缺少必要参数,参数名称为packageId
2020-12-28 10:00:50,040-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 10:00:50,041-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.077924, 'data': '缺少必要参数,参数名称为packageId', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:00:51,074-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:00:51,075-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:16:13,397-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 10:16:13,399-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 10:16:13,710-[INFO]-logger.py-Unit_test-日志信息:当前使用的用例表单：Sheet4
2020-12-28 10:16:14,066-[INFO]-logger.py-readExcel-日志信息:获取表单成功：<Worksheet "Sheet4">
2020-12-28 10:16:14,071-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:16:14,072-[INFO]-logger.py-Unit_test-日志信息:正在执行第34条用例:【腾讯健康】1-查询套餐标签-成功
2020-12-28 10:16:14,074-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/tag；method：GET；data：{"orgId":"HL00001"}；sql：{}
2020-12-28 10:16:14,079-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:16:14,134-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:16:14,136-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:16:14,284-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [{'code': 'tagGender', 'options': [{'code': '00', 'text': '通用'}, {'code': '20', 'text': '女'}, {'code': '10', 'text': '男'}], 'text': '性别'}, {'code': 'tagGroup', 'options': [{'code': 'settag001', 'text': '入职体检'}, {'code': 'settag002', 'text': '青年女性'}, {'code': 'settag003', 'text': '青年男性'}, {'code': 'settag004', 'text': '父母体检'}, {'code': 'settag005', 'text': '白领体检'}], 'text': '人群'}, {'code': 'tagItem', 'options': [{'code': '34', 'text': '关节炎'}, {'code': '28', 'text': '肠胃病'}, {'code': '29', 'text': '肺部疾病'}, {'code': '30', 'text': '妇科疾病'}], 'text': '项目'}], 'message': '成功'}
2020-12-28 10:16:14,286-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.210932s
2020-12-28 10:16:14,288-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 10:16:14,290-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.210932, 'data': [{'code': 'tagGender', 'options': [{'code': '00', 'text': '通用'}, {'code': '20', 'text': '女'}, {'code': '10', 'text': '男'}], 'text': '性别'}, {'code': 'tagGroup', 'options': [{'code': 'settag001', 'text': '入职体检'}, {'code': 'settag002', 'text': '青年女性'}, {'code': 'settag003', 'text': '青年男性'}, {'code': 'settag004', 'text': '父母体检'}, {'code': 'settag005', 'text': '白领体检'}], 'text': '人群'}, {'code': 'tagItem', 'options': [{'code': '34', 'text': '关节炎'}, {'code': '28', 'text': '肠胃病'}, {'code': '29', 'text': '肺部疾病'}, {'code': '30', 'text': '妇科疾病'}], 'text': '项目'}], 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:16:15,075-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:16:15,076-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:16:15,077-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:16:15,079-[INFO]-logger.py-Unit_test-日志信息:正在执行第35条用例:【腾讯健康】2-查询套餐标签-必填机构ID为空-失败
2020-12-28 10:16:15,080-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/tag；method：GET；data：{"orgId":""}；sql：{}
2020-12-28 10:16:15,081-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:16:15,119-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:16:15,121-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:16:15,164-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [], 'message': '成功'}
2020-12-28 10:16:15,165-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.084961s
2020-12-28 10:16:15,167-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 10:16:16,091-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:16:16,092-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:16:16,098-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:16:16,099-[INFO]-logger.py-Unit_test-日志信息:正在执行第36条用例:【腾讯健康】3-查询套餐标签-机构ID字段缺少-失败
2020-12-28 10:16:16,101-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/tag；method：GET；data：{}；sql：{}
2020-12-28 10:16:16,102-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:16:16,141-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:16:16,142-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:16:16,164-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为orgId', 'result': None, 'success': False}
2020-12-28 10:16:16,165-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.062506s
2020-12-28 10:16:16,166-[INFO]-logger.py-Unit_test-日志信息:接口返回message:缺少必要参数,参数名称为orgId
2020-12-28 10:16:16,167-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 10:16:16,168-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.062506, 'data': '缺少必要参数,参数名称为orgId', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:16:17,070-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:16:17,071-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:16:17,073-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:16:17,074-[INFO]-logger.py-Unit_test-日志信息:正在执行第37条用例:【腾讯健康】4-查询套餐标签-srt机构ID为int-失败
2020-12-28 10:16:17,075-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/tag；method：GET；data：{"orgId":9999}；sql：{}
2020-12-28 10:16:17,077-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:16:17,117-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:16:17,119-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:16:17,155-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [], 'message': '成功'}
2020-12-28 10:16:17,156-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.078993s
2020-12-28 10:16:17,157-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 10:16:18,140-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:16:18,142-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:16:18,146-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:16:18,147-[INFO]-logger.py-Unit_test-日志信息:正在执行第38条用例:【腾讯健康】5-查询套餐标签-必填无效机构ID-失败
2020-12-28 10:16:18,148-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/tag；method：GET；data：{"orgId":"HL95685"}；sql：{}
2020-12-28 10:16:18,150-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:16:18,179-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:16:18,217-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:16:18,250-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [], 'message': '成功'}
2020-12-28 10:16:18,251-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.100942s
2020-12-28 10:16:18,252-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 10:16:19,219-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:16:19,221-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:16:19,225-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:16:19,226-[INFO]-logger.py-Unit_test-日志信息:正在执行第39条用例:【腾讯健康】1-查询是否能变更体检日期-成功
2020-12-28 10:16:19,228-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/changeDate；method：GET；data：{"packageId":5,"orgId":"HL00001"}；sql：{}
2020-12-28 10:16:19,229-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:16:19,277-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:16:19,278-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:16:19,307-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'changeDate': True, 'days': 1, 'times': 5}, 'message': '成功'}
2020-12-28 10:16:19,308-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.078996s
2020-12-28 10:16:19,310-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 10:16:19,311-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.078996, 'data': {'changeDate': True, 'days': 1, 'times': 5}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:16:20,211-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:16:20,212-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:16:20,213-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:16:20,215-[INFO]-logger.py-Unit_test-日志信息:正在执行第40条用例:【腾讯健康】2-查询是否能变更体检日期-必填套餐ID为空-失败
2020-12-28 10:16:20,216-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/changeDate；method：GET；data：{"packageId":"","orgId":"HL00001"}；sql：{}
2020-12-28 10:16:20,218-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:16:20,264-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:16:20,266-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:16:20,297-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'changeDate': True, 'days': 1, 'times': 5}, 'message': '成功'}
2020-12-28 10:16:20,300-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.082009s
2020-12-28 10:16:20,302-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 10:16:21,228-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:16:21,229-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:16:21,234-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:16:21,235-[INFO]-logger.py-Unit_test-日志信息:正在执行第41条用例:【腾讯健康】3-查询是否能变更体检日期-str套餐ID为int-失败
2020-12-28 10:16:21,236-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/changeDate；method：GET；data：{"packageId":5,"orgId":"HL00001"}；sql：{}
2020-12-28 10:16:21,238-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:16:21,260-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:16:21,261-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:16:21,290-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'changeDate': True, 'days': 1, 'times': 5}, 'message': '成功'}
2020-12-28 10:16:21,291-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.052979s
2020-12-28 10:16:21,292-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 10:16:22,211-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:16:22,212-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:16:22,217-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:16:22,218-[INFO]-logger.py-Unit_test-日志信息:正在执行第42条用例:【腾讯健康】4-查询是否能变更体检日期-必填无效的套餐ID-失败
2020-12-28 10:16:22,219-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/changeDate；method：GET；data：{"packageId":"999","orgId":"HL00001"}；sql：{}
2020-12-28 10:16:22,222-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:16:22,258-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:16:22,259-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:16:22,290-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'changeDate': True, 'days': 1, 'times': 5}, 'message': '成功'}
2020-12-28 10:16:22,291-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.069931s
2020-12-28 10:16:22,293-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 10:16:23,224-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:16:23,225-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:16:23,229-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:16:23,231-[INFO]-logger.py-Unit_test-日志信息:正在执行第43条用例:【腾讯健康】5-查询是否能变更体检日期-必填套餐ID字段缺失-失败
2020-12-28 10:16:23,233-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/changeDate；method：GET；data：{"orgId":"HL00001"}；sql：{}
2020-12-28 10:16:23,234-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:16:23,258-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:16:23,260-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:16:23,292-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为packageId', 'result': None, 'success': False}
2020-12-28 10:16:23,294-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.059978s
2020-12-28 10:16:23,295-[INFO]-logger.py-Unit_test-日志信息:接口返回message:缺少必要参数,参数名称为packageId
2020-12-28 10:16:23,296-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 10:16:23,297-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.059978, 'data': '缺少必要参数,参数名称为packageId', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:16:24,170-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:16:24,171-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:16:24,172-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:16:24,174-[INFO]-logger.py-Unit_test-日志信息:正在执行第44条用例:【腾讯健康】6-查询是否能变更体检日期-非必填机构ID字段缺失-失败
2020-12-28 10:16:24,175-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/changeDate；method：GET；data：{"packageId":"5"}；sql：{}
2020-12-28 10:16:24,176-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:16:24,209-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:16:24,211-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:16:24,243-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为orgId', 'result': None, 'success': False}
2020-12-28 10:16:24,245-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.068702s
2020-12-28 10:16:24,246-[INFO]-logger.py-Unit_test-日志信息:接口返回message:缺少必要参数,参数名称为orgId
2020-12-28 10:16:24,247-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 10:16:24,248-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.068702, 'data': '缺少必要参数,参数名称为orgId', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:16:25,201-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:16:25,203-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:16:25,204-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:16:25,206-[INFO]-logger.py-Unit_test-日志信息:正在执行第45条用例:【腾讯健康】7-查询是否能变更体检日期-非必填机构ID为空-成功
2020-12-28 10:16:25,207-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/changeDate；method：GET；data：{"packageId":"5","orgId":""}；sql：{}
2020-12-28 10:16:25,208-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:16:25,244-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:16:25,246-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:16:25,277-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'changeDate': True, 'days': 1, 'times': 5}, 'message': '成功'}
2020-12-28 10:16:25,279-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.070958s
2020-12-28 10:16:25,280-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 10:16:25,281-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.070958, 'data': {'changeDate': True, 'days': 1, 'times': 5}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:16:26,207-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:16:26,208-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:16:26,210-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:16:26,211-[INFO]-logger.py-Unit_test-日志信息:正在执行第46条用例:【腾讯健康】8-查询是否能变更体检日期-str机构ID为int-失败
2020-12-28 10:16:26,212-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/changeDate；method：GET；data：{"packageId":"5","orgId":9999}；sql：{}
2020-12-28 10:16:26,214-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:16:26,246-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:16:26,247-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:16:26,282-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'changeDate': True, 'days': 1, 'times': 5}, 'message': '成功'}
2020-12-28 10:16:26,283-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.069959s
2020-12-28 10:16:26,285-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 10:16:27,187-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:16:27,189-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:16:27,193-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:16:27,194-[INFO]-logger.py-Unit_test-日志信息:正在执行第47条用例:【腾讯健康】9-查询是否能变更体检日期-无参数-失败
2020-12-28 10:16:27,195-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/changeDate；method：GET；data：{}；sql：{}
2020-12-28 10:16:27,198-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:16:27,222-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:16:27,224-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:16:27,246-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为packageId', 'result': None, 'success': False}
2020-12-28 10:16:27,248-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.049943s
2020-12-28 10:16:27,249-[INFO]-logger.py-Unit_test-日志信息:接口返回message:缺少必要参数,参数名称为packageId
2020-12-28 10:16:27,250-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 10:16:27,251-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.049943, 'data': '缺少必要参数,参数名称为packageId', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:16:28,202-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:16:28,203-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:24:38,190-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 10:24:38,192-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 10:24:38,505-[INFO]-logger.py-Unit_test-日志信息:当前使用的用例表单：Sheet4
2020-12-28 10:24:38,879-[INFO]-logger.py-readExcel-日志信息:获取表单成功：<Worksheet "Sheet4">
2020-12-28 10:24:38,882-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:24:38,884-[INFO]-logger.py-Unit_test-日志信息:正在执行第48条用例:【腾讯健康】1-获取体检须知-成功
2020-12-28 10:24:38,885-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/notice；method：GET；data：{"orgId":"HL00001","packageId":5}；sql：{}
2020-12-28 10:24:38,890-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:24:38,947-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:24:38,948-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:24:38,994-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'notice': ['1、体检前3天不要大量饮酒、不要进食动物内脏、清淡饮食，拒绝暴饮暴食、少吃高脂、高糖、高蛋白食物，避免熬夜或短期剧烈运动。', '2、空腹8小时以上，体检前一天晚22:00点后，不再进食任何食物，可少量饮水，直至空腹项目（抽血、肝胆B超、胃肠道检查）检查完成。', '3、糖尿病、高血压等心血管慢性疾病者，应按时吃药，少量饮水送服即可，避免因停药而发生意外。', '4、体检当天衣着宽松，不建议佩戴隐形眼睛、首饰等']}, 'message': '成功'}
2020-12-28 10:24:38,995-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.110429s
2020-12-28 10:24:38,996-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 10:24:38,998-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.110429, 'data': {'notice': ['1、体检前3天不要大量饮酒、不要进食动物内脏、清淡饮食，拒绝暴饮暴食、少吃高脂、高糖、高蛋白食物，避免熬夜或短期剧烈运动。', '2、空腹8小时以上，体检前一天晚22:00点后，不再进食任何食物，可少量饮水，直至空腹项目（抽血、肝胆B超、胃肠道检查）检查完成。', '3、糖尿病、高血压等心血管慢性疾病者，应按时吃药，少量饮水送服即可，避免因停药而发生意外。', '4、体检当天衣着宽松，不建议佩戴隐形眼睛、首饰等']}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:24:39,811-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:24:39,813-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:24:39,814-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:24:39,815-[INFO]-logger.py-Unit_test-日志信息:正在执行第49条用例:【腾讯健康】2-获取体检须知-必填套餐ID为空-失败
2020-12-28 10:24:39,816-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/notice；method：GET；data：{"packageId":"","orgId":"HL00001"}；sql：{}
2020-12-28 10:24:39,818-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:24:39,854-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:24:39,855-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:24:39,894-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'notice': ['1、体检前3天不要大量饮酒、不要进食动物内脏、清淡饮食，拒绝暴饮暴食、少吃高脂、高糖、高蛋白食物，避免熬夜或短期剧烈运动。', '2、空腹8小时以上，体检前一天晚22:00点后，不再进食任何食物，可少量饮水，直至空腹项目（抽血、肝胆B超、胃肠道检查）检查完成。', '3、糖尿病、高血压等心血管慢性疾病者，应按时吃药，少量饮水送服即可，避免因停药而发生意外。', '4、体检当天衣着宽松，不建议佩戴隐形眼睛、首饰等']}, 'message': '成功'}
2020-12-28 10:24:39,897-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.078973s
2020-12-28 10:24:39,899-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 10:24:40,863-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:24:40,865-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:24:40,871-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:24:40,872-[INFO]-logger.py-Unit_test-日志信息:正在执行第50条用例:【腾讯健康】3-获取体检须知-str套餐ID为int-失败
2020-12-28 10:24:40,873-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/notice；method：GET；data：{"packageId":5,"orgId":"HL00001"}；sql：{}
2020-12-28 10:24:40,875-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:24:40,907-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:24:40,908-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:24:40,934-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'notice': ['1、体检前3天不要大量饮酒、不要进食动物内脏、清淡饮食，拒绝暴饮暴食、少吃高脂、高糖、高蛋白食物，避免熬夜或短期剧烈运动。', '2、空腹8小时以上，体检前一天晚22:00点后，不再进食任何食物，可少量饮水，直至空腹项目（抽血、肝胆B超、胃肠道检查）检查完成。', '3、糖尿病、高血压等心血管慢性疾病者，应按时吃药，少量饮水送服即可，避免因停药而发生意外。', '4、体检当天衣着宽松，不建议佩戴隐形眼睛、首饰等']}, 'message': '成功'}
2020-12-28 10:24:40,935-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.060976s
2020-12-28 10:24:40,936-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 10:24:41,883-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:24:41,884-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:24:41,889-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:24:41,890-[INFO]-logger.py-Unit_test-日志信息:正在执行第51条用例:【腾讯健康】4-获取体检须知-必填无效的套餐ID-失败
2020-12-28 10:24:41,892-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/notice；method：GET；data：{"packageId":"999","orgId":"HL00001"}；sql：{}
2020-12-28 10:24:41,895-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:24:41,928-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:24:41,930-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:24:41,960-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'notice': ['1、体检前3天不要大量饮酒、不要进食动物内脏、清淡饮食，拒绝暴饮暴食、少吃高脂、高糖、高蛋白食物，避免熬夜或短期剧烈运动。', '2、空腹8小时以上，体检前一天晚22:00点后，不再进食任何食物，可少量饮水，直至空腹项目（抽血、肝胆B超、胃肠道检查）检查完成。', '3、糖尿病、高血压等心血管慢性疾病者，应按时吃药，少量饮水送服即可，避免因停药而发生意外。', '4、体检当天衣着宽松，不建议佩戴隐形眼睛、首饰等']}, 'message': '成功'}
2020-12-28 10:24:41,961-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.066959s
2020-12-28 10:24:41,963-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 10:24:42,909-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:24:42,911-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:24:42,915-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:24:42,917-[INFO]-logger.py-Unit_test-日志信息:正在执行第52条用例:【腾讯健康】5-获取体检须知-必填套餐ID字段缺失-失败
2020-12-28 10:24:42,918-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/notice；method：GET；data：{"orgId":"HL00001"}；sql：{}
2020-12-28 10:24:42,919-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:24:42,954-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:24:42,956-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:24:42,988-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为packageId', 'result': None, 'success': False}
2020-12-28 10:24:42,989-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.069578s
2020-12-28 10:24:42,990-[INFO]-logger.py-Unit_test-日志信息:接口返回message:缺少必要参数,参数名称为packageId
2020-12-28 10:24:42,991-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 10:24:42,993-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.069578, 'data': '缺少必要参数,参数名称为packageId', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:24:43,968-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:24:43,969-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:24:43,970-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:24:43,971-[INFO]-logger.py-Unit_test-日志信息:正在执行第53条用例:【腾讯健康】6-获取体检须知-非必填机构ID字段缺失-失败
2020-12-28 10:24:43,972-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/notice；method：GET；data：{"packageId":"5"}；sql：{}
2020-12-28 10:24:43,974-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:24:44,036-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:24:44,038-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:24:44,065-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为orgId', 'result': None, 'success': False}
2020-12-28 10:24:44,066-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.091948s
2020-12-28 10:24:44,067-[INFO]-logger.py-Unit_test-日志信息:接口返回message:缺少必要参数,参数名称为orgId
2020-12-28 10:24:44,068-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 10:24:44,069-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.091948, 'data': '缺少必要参数,参数名称为orgId', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:24:44,984-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:24:44,985-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:24:44,987-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:24:44,988-[INFO]-logger.py-Unit_test-日志信息:正在执行第54条用例:【腾讯健康】7-获取体检须知-非必填机构ID为空-成功
2020-12-28 10:24:44,989-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/notice；method：GET；data：{"packageId":"5","orgId":""}；sql：{}
2020-12-28 10:24:44,990-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:24:45,020-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:24:45,021-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:24:45,058-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'notice': ['1、体检前3天不要大量饮酒、不要进食动物内脏、清淡饮食，拒绝暴饮暴食、少吃高脂、高糖、高蛋白食物，避免熬夜或短期剧烈运动。', '2、空腹8小时以上，体检前一天晚22:00点后，不再进食任何食物，可少量饮水，直至空腹项目（抽血、肝胆B超、胃肠道检查）检查完成。', '3、糖尿病、高血压等心血管慢性疾病者，应按时吃药，少量饮水送服即可，避免因停药而发生意外。', '4、体检当天衣着宽松，不建议佩戴隐形眼睛、首饰等']}, 'message': '成功'}
2020-12-28 10:24:45,059-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.06896s
2020-12-28 10:24:45,060-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 10:24:45,061-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.06896, 'data': {'notice': ['1、体检前3天不要大量饮酒、不要进食动物内脏、清淡饮食，拒绝暴饮暴食、少吃高脂、高糖、高蛋白食物，避免熬夜或短期剧烈运动。', '2、空腹8小时以上，体检前一天晚22:00点后，不再进食任何食物，可少量饮水，直至空腹项目（抽血、肝胆B超、胃肠道检查）检查完成。', '3、糖尿病、高血压等心血管慢性疾病者，应按时吃药，少量饮水送服即可，避免因停药而发生意外。', '4、体检当天衣着宽松，不建议佩戴隐形眼睛、首饰等']}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:24:46,030-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:24:46,031-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:24:46,033-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:24:46,034-[INFO]-logger.py-Unit_test-日志信息:正在执行第55条用例:【腾讯健康】8-获取体检须知-str机构ID为int-失败
2020-12-28 10:24:46,036-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/notice；method：GET；data：{"packageId":"5","orgId":9999}；sql：{}
2020-12-28 10:24:46,037-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:24:46,070-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:24:46,072-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:24:46,100-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '10001', 'errorMsg': None, 'result': None, 'success': False}
2020-12-28 10:24:46,101-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.063972s
2020-12-28 10:24:46,103-[INFO]-logger.py-Unit_test-日志信息:接口返回message:None
2020-12-28 10:24:46,104-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：10001
2020-12-28 10:24:47,084-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:24:47,085-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 10:24:47,089-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 10:24:47,091-[INFO]-logger.py-Unit_test-日志信息:正在执行第56条用例:【腾讯健康】9-获取体检须知-无参数-失败
2020-12-28 10:24:47,092-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/package/notice；method：GET；data：{}；sql：{}
2020-12-28 10:24:47,093-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 10:24:47,143-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 10:24:47,145-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 10:24:47,171-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为packageId', 'result': None, 'success': False}
2020-12-28 10:24:47,172-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.079953s
2020-12-28 10:24:47,173-[INFO]-logger.py-Unit_test-日志信息:接口返回message:缺少必要参数,参数名称为packageId
2020-12-28 10:24:47,174-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 10:24:47,175-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.079953, 'data': '缺少必要参数,参数名称为packageId', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 10:24:48,148-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 10:24:48,149-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 13:09:07,270-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 13:09:07,272-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 13:09:07,299-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:09:07,344-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:09:07,345-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 13:09:07,438-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [{'code': 2, 'codeName': '待支付', 'countDown': 0, 'couponFee': 800, 'couponInfo': '[{"fee":"200","id":"b123454679999999999999","type":"fullReduction"},{"fee":"600","id":"a123456765768dfdgdfhfhgdh","type":"discount"}]', 'createTime': '2020-12-21 10:37', 'examName': 'zmy', 'medicalTime': '2020-12-25', 'orderCountPrice': 3000100, 'orderId': '23', 'orderPrice': 2999300, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐006', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 800}, {'code': 2, 'codeName': '待支付', 'countDown': 0, 'couponFee': 800, 'couponInfo': '[{"fee":"200","id":"b123454679999999999999","type":"fullReduction"},{"fee":"600","id":"a123456765768dfdgdfhfhgdh","type":"discount"}]', 'createTime': '2020-12-21 10:37', 'examName': 'zmy', 'medicalTime': '2020-12-25', 'orderCountPrice': 3000100, 'orderId': '24', 'orderPrice': 2999300, 'orgId': 'HL00001', 'orgName': '院', 'packageId': '5', 'packageName': '测试商品套餐006', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 800}, {'code': 2, 'codeName': '待支付', 'countDown': 0, 'couponFee': 800, 'couponInfo': '[{"fee":"200","id":"b123454679999999999999","type":"fullReduction"},{"fee":"600","id":"a123456765768dfdgdfhfhgdh","type":"discount"}]', 'createTime': '2020-12-21 10:39', 'examName': 'zmy', 'medicalTime': '2020-12-25', 'orderCountPrice': 3000100, 'orderId': '25', 'orderPrice': 2999300, 'orgId': 'HL00001', 'orgName': '院', 'packageId': '5', 'packageName': '测试商品套餐006', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 800}], 'message': '成功'}
2020-12-28 13:11:56,097-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 13:11:56,100-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 13:11:56,129-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:11:56,176-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:11:56,177-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 13:11:56,232-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 20298, 'data': None, 'message': '该用户没有订单'}
2020-12-28 13:16:03,997-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 13:16:03,999-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 13:16:04,026-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:16:04,076-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:16:04,077-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 13:16:04,182-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '117', 'orderPrice': 3000100, 'receiptNo': '117'}, 'message': '成功'}
2020-12-28 13:16:34,614-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 13:16:34,616-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 13:16:34,644-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:16:34,676-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:16:34,678-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 13:16:34,767-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '118', 'orderPrice': 3000100, 'receiptNo': '118'}, 'message': '成功'}
2020-12-28 13:16:52,800-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 13:16:52,802-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 13:16:52,830-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:16:52,855-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:16:52,857-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 13:16:52,910-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [{'code': 2, 'codeName': '待支付', 'countDown': 3581, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-28 13:16', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '118', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}], 'message': '成功'}
2020-12-28 13:18:53,118-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 13:18:53,120-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 13:18:53,146-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:18:53,194-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:18:53,195-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 13:18:53,246-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [{'code': 2, 'codeName': '待支付', 'countDown': 3460, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-28 13:16', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '118', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}], 'message': '成功'}
2020-12-28 13:25:17,059-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 13:25:17,061-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 13:25:17,087-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:25:17,131-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:25:17,132-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 13:25:17,198-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为userId', 'result': None, 'success': False}
2020-12-28 13:27:36,354-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 13:27:36,356-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 13:27:36,382-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:27:36,425-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:27:36,426-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 13:27:36,577-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '10001', 'errorMsg': "org.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11\n### The error may exist in URL [jar:file:/root/application.jar!/BOOT-INF/classes!/com/helian/healthmanage/orderextend/dao/mapper/TencentOrderHistoryDoMapper.xml]\n### The error may involve defaultParameterMap\n### The error occurred while setting parameters\n### SQL: select                id, user_id, booking_name, booking_phone, org_id, org_name, package_id, package_name,     medical_time, name, card_type, card_id, sex, birthday, age, marriage_status, report_type,     phone, report_receiver, report_address, time, profitsharing, used_coupon, coupon_fee,     coupon_info, pay_id, fee, order_status, trade_id, update_time, create_time         from tencent_order_history     where user_id = ?     limit ?,?\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11\norg.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11\n### The error may exist in URL [jar:file:/root/application.jar!/BOOT-INF/classes!/com/helian/healthmanage/orderextend/dao/mapper/TencentOrderHistoryDoMapper.xml]\n### The error may involve defaultParameterMap\n### The error occurred while setting parameters\n### SQL: select                id, user_id, booking_name, booking_phone, org_id, org_name, package_id, package_name,     medical_time, name, card_type, card_id, sex, birthday, age, marriage_status, report_type,     phone, report_receiver, report_address, time, profitsharing, used_coupon, coupon_fee,     coupon_info, pay_id, fee, order_status, trade_id, update_time, create_time         from tencent_order_history     where user_id = ?     limit ?,?\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11\n\tat org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n\tat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)\n\tat com.sun.proxy.$Proxy127.selectList(Unknown Source)\n\tat org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)\n\tat org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\n\tat com.sun.proxy.$Proxy158.selectByUserId(Unknown Source)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl.listOrder(TencentOrderBizServiceImpl.java:483)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$FastClassBySpringCGLIB$$7963c5a4.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$EnhancerBySpringCGLIB$$c4233641.listOrder(<generated>)\n\tat org.apache.dubbo.common.bytecode.Wrapper112.invokeMethod(Wrapper112.java)\n\tat org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)\n\tat org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)\n\tat org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)\n\tat org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)\n\tat org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:105)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:149)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)\n\tat org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)\n\tat org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)\n\tat org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:823)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat com.mysql.jdbc.Util.handleNewInstance(Util.java:404)\n\tat com.mysql.jdbc.Util.getInstance(Util.java:387)\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:939)\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)\n\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2478)\n\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2625)\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2551)\n\tat com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)\n\tat com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)\n\tat com.alibaba.druid.filter.FilterAdapter.preparedStatement_execute(FilterAdapter.java:1080)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)\n\tat com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)\n\tat org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)\n\tat org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)\n\tat org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)\n\tat org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)\n\tat com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:108)\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)\n\tat com.sun.proxy.$Proxy228.query(Unknown Source)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)\n\tat sun.reflect.GeneratedMethodAccessor702.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)\n\t... 41 more\n", 'result': None, 'success': False}
2020-12-28 13:30:31,556-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 13:30:31,558-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 13:30:31,584-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:30:31,611-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:30:31,613-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 13:30:31,769-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [{'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-24 14:33', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '85', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-25 10:27', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '90', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-25 10:38', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '91', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-25 10:39', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '92', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-25 11:09', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '93', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-25 11:16', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '94', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-25 11:32', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '95', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-25 11:35', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '96', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[]', 'createTime': '2020-12-25 13:06', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '97', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-25 13:16', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '98', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-25 13:17', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '99', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 0, 'couponInfo': '[]', 'createTime': '2020-12-25 13:34', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000100, 'orderId': '102', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 0}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-25 13:39', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '103', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}, {'code': 18, 'codeName': '申请退款', 'countDown': 0, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-25 13:41', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '104', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}, {'code': 31, 'codeName': '已支付，待体检', 'countDown': 0, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-25 13:58', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '105', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}, {'code': 18, 'codeName': '申请退款', 'countDown': 0, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-25 14:04', 'examName': 'aaa', 'medicalTime': '2019-03-01', 'orderCountPrice': 3000200, 'orderId': '106', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-25 14:30', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '107', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-25 14:30', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '108', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}, {'code': 31, 'codeName': '已支付，待体检', 'countDown': 0, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-25 14:31', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '109', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-26 10:25', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '116', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}, {'code': 2, 'codeName': '待支付', 'countDown': 2732, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-28 13:16', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '117', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}], 'message': '成功'}
2020-12-28 13:33:14,909-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 13:33:14,911-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 13:33:14,938-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:33:14,976-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:33:14,978-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 13:33:15,020-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为userId', 'result': None, 'success': False}
2020-12-28 13:38:55,726-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 13:38:55,728-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 13:38:55,754-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:38:55,794-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:38:55,795-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 13:38:55,854-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为offset', 'result': None, 'success': False}
2020-12-28 13:39:30,212-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 13:39:30,214-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 13:39:30,520-[INFO]-logger.py-Unit_test-日志信息:当前使用的用例表单：Sheet4
2020-12-28 13:39:30,892-[INFO]-logger.py-readExcel-日志信息:获取表单成功：<Worksheet "Sheet4">
2020-12-28 13:39:30,896-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 13:39:30,897-[INFO]-logger.py-Unit_test-日志信息:正在执行第57条用例:【腾讯健康】1-查询订单列表-成功
2020-12-28 13:39:30,899-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/list；method：GET；data：{"userId":"518","offset":0,"limit":100}；sql：{}
2020-12-28 13:39:30,904-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:39:30,950-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:39:30,952-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 13:39:31,010-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [{'code': 2, 'codeName': '待支付', 'countDown': 2222, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-28 13:16', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '118', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}], 'message': '成功'}
2020-12-28 13:39:31,012-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.111962s
2020-12-28 13:39:31,013-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 13:39:31,014-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.111962, 'data': [{'code': 2, 'codeName': '待支付', 'countDown': 2222, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-28 13:16', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '118', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}], 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 13:39:31,830-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 13:39:31,831-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 13:39:31,832-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 13:39:31,833-[INFO]-logger.py-Unit_test-日志信息:正在执行第58条用例:【腾讯健康】2-查询订单列表-必填用户ID为空-失败
2020-12-28 13:39:31,834-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/list；method：GET；data：{"userId":"","offset":0,"limit":100}；sql：{}
2020-12-28 13:39:31,836-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:39:31,874-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:39:31,876-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 13:39:31,927-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [{'code': 2, 'codeName': '待支付', 'countDown': 0, 'couponFee': 800, 'couponInfo': '[{"fee":"200","id":"b123454679999999999999","type":"fullReduction"},{"fee":"600","id":"a123456765768dfdgdfhfhgdh","type":"discount"}]', 'createTime': '2020-12-21 10:37', 'examName': 'zmy', 'medicalTime': '2020-12-25', 'orderCountPrice': 3000100, 'orderId': '23', 'orderPrice': 2999300, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐006', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 800}, {'code': 2, 'codeName': '待支付', 'countDown': 0, 'couponFee': 800, 'couponInfo': '[{"fee":"200","id":"b123454679999999999999","type":"fullReduction"},{"fee":"600","id":"a123456765768dfdgdfhfhgdh","type":"discount"}]', 'createTime': '2020-12-21 10:37', 'examName': 'zmy', 'medicalTime': '2020-12-25', 'orderCountPrice': 3000100, 'orderId': '24', 'orderPrice': 2999300, 'orgId': 'HL00001', 'orgName': '院', 'packageId': '5', 'packageName': '测试商品套餐006', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 800}, {'code': 2, 'codeName': '待支付', 'countDown': 0, 'couponFee': 800, 'couponInfo': '[{"fee":"200","id":"b123454679999999999999","type":"fullReduction"},{"fee":"600","id":"a123456765768dfdgdfhfhgdh","type":"discount"}]', 'createTime': '2020-12-21 10:39', 'examName': 'zmy', 'medicalTime': '2020-12-25', 'orderCountPrice': 3000100, 'orderId': '25', 'orderPrice': 2999300, 'orgId': 'HL00001', 'orgName': '院', 'packageId': '5', 'packageName': '测试商品套餐006', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 800}], 'message': '成功'}
2020-12-28 13:39:31,933-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.094948s
2020-12-28 13:39:31,939-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 13:39:32,893-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 13:39:32,894-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 13:39:32,900-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 13:39:32,902-[INFO]-logger.py-Unit_test-日志信息:正在执行第59条用例:【腾讯健康】3-查询订单列表-str用户ID为int-失败
2020-12-28 13:39:32,903-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/list；method：GET；data：{"userId": 518,"offset":0,"limit":100}；sql：{}
2020-12-28 13:39:32,905-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:39:32,952-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:39:32,954-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 13:39:32,997-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [{'code': 2, 'codeName': '待支付', 'countDown': 2220, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-28 13:16', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '118', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}], 'message': '成功'}
2020-12-28 13:39:32,998-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.093945s
2020-12-28 13:39:32,999-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 13:39:33,923-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 13:39:33,924-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 13:39:33,928-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 13:39:33,929-[INFO]-logger.py-Unit_test-日志信息:正在执行第60条用例:【腾讯健康】4-查询订单列表-必填无效的用户ID-失败
2020-12-28 13:39:33,931-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/list；method：GET；data：{"userId":"1","offset":0,"limit":100}；sql：{}
2020-12-28 13:39:33,933-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:39:33,970-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:39:33,972-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 13:39:34,003-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 20298, 'data': None, 'message': '该用户没有订单'}
2020-12-28 13:39:34,004-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.070972s
2020-12-28 13:39:34,005-[INFO]-logger.py-Unit_test-日志信息:接口返回message:该用户没有订单
2020-12-28 13:39:34,006-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：20298
2020-12-28 13:39:34,930-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 13:39:34,931-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 13:39:34,936-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 13:39:34,937-[INFO]-logger.py-Unit_test-日志信息:正在执行第61条用例:【腾讯健康】5-查询订单列表-必填用户ID字段缺失-失败
2020-12-28 13:39:34,938-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/list；method：GET；data：{"offset":0,"limit":100}；sql：{}
2020-12-28 13:39:34,940-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:39:34,987-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:39:34,989-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 13:39:35,010-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为userId', 'result': None, 'success': False}
2020-12-28 13:39:35,012-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.071693s
2020-12-28 13:39:35,013-[INFO]-logger.py-Unit_test-日志信息:接口返回message:缺少必要参数,参数名称为userId
2020-12-28 13:39:35,014-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 13:39:35,015-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.071693, 'data': '缺少必要参数,参数名称为userId', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 13:39:35,954-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 13:39:35,955-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 13:39:35,957-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 13:39:35,958-[INFO]-logger.py-Unit_test-日志信息:正在执行第62条用例:【腾讯健康】6-查询订单列表-非必填字段为空-成功
2020-12-28 13:39:35,960-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/list；method：GET；data：{"userId":"zgh001","offset":"","limit":""}；sql：{}
2020-12-28 13:39:35,961-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:39:35,999-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:39:36,000-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 13:39:36,032-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '10001', 'errorMsg': "org.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11\n### The error may exist in URL [jar:file:/root/application.jar!/BOOT-INF/classes!/com/helian/healthmanage/orderextend/dao/mapper/TencentOrderHistoryDoMapper.xml]\n### The error may involve defaultParameterMap\n### The error occurred while setting parameters\n### SQL: select                id, user_id, booking_name, booking_phone, org_id, org_name, package_id, package_name,     medical_time, name, card_type, card_id, sex, birthday, age, marriage_status, report_type,     phone, report_receiver, report_address, time, profitsharing, used_coupon, coupon_fee,     coupon_info, pay_id, fee, order_status, trade_id, update_time, create_time         from tencent_order_history     where user_id = ?     limit ?,?\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11\norg.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11\n### The error may exist in URL [jar:file:/root/application.jar!/BOOT-INF/classes!/com/helian/healthmanage/orderextend/dao/mapper/TencentOrderHistoryDoMapper.xml]\n### The error may involve defaultParameterMap\n### The error occurred while setting parameters\n### SQL: select                id, user_id, booking_name, booking_phone, org_id, org_name, package_id, package_name,     medical_time, name, card_type, card_id, sex, birthday, age, marriage_status, report_type,     phone, report_receiver, report_address, time, profitsharing, used_coupon, coupon_fee,     coupon_info, pay_id, fee, order_status, trade_id, update_time, create_time         from tencent_order_history     where user_id = ?     limit ?,?\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11\n\tat org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n\tat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)\n\tat com.sun.proxy.$Proxy127.selectList(Unknown Source)\n\tat org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)\n\tat org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\n\tat com.sun.proxy.$Proxy158.selectByUserId(Unknown Source)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl.listOrder(TencentOrderBizServiceImpl.java:483)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$FastClassBySpringCGLIB$$7963c5a4.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$EnhancerBySpringCGLIB$$c4233641.listOrder(<generated>)\n\tat org.apache.dubbo.common.bytecode.Wrapper112.invokeMethod(Wrapper112.java)\n\tat org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)\n\tat org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)\n\tat org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)\n\tat org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)\n\tat org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:105)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:149)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)\n\tat org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)\n\tat org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)\n\tat org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:823)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat com.mysql.jdbc.Util.handleNewInstance(Util.java:404)\n\tat com.mysql.jdbc.Util.getInstance(Util.java:387)\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:939)\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)\n\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2478)\n\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2625)\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2551)\n\tat com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)\n\tat com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)\n\tat com.alibaba.druid.filter.FilterAdapter.preparedStatement_execute(FilterAdapter.java:1080)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)\n\tat com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)\n\tat org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)\n\tat org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)\n\tat org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)\n\tat org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)\n\tat com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:108)\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)\n\tat com.sun.proxy.$Proxy228.query(Unknown Source)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)\n\tat sun.reflect.GeneratedMethodAccessor702.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)\n\t... 41 more\n", 'result': None, 'success': False}
2020-12-28 13:39:36,038-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.076967s
2020-12-28 13:39:36,040-[INFO]-logger.py-Unit_test-日志信息:接口返回message:org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11
### The error may exist in URL [jar:file:/root/application.jar!/BOOT-INF/classes!/com/helian/healthmanage/orderextend/dao/mapper/TencentOrderHistoryDoMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select                id, user_id, booking_name, booking_phone, org_id, org_name, package_id, package_name,     medical_time, name, card_type, card_id, sex, birthday, age, marriage_status, report_type,     phone, report_receiver, report_address, time, profitsharing, used_coupon, coupon_fee,     coupon_info, pay_id, fee, order_status, trade_id, update_time, create_time         from tencent_order_history     where user_id = ?     limit ?,?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11
### The error may exist in URL [jar:file:/root/application.jar!/BOOT-INF/classes!/com/helian/healthmanage/orderextend/dao/mapper/TencentOrderHistoryDoMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select                id, user_id, booking_name, booking_phone, org_id, org_name, package_id, package_name,     medical_time, name, card_type, card_id, sex, birthday, age, marriage_status, report_type,     phone, report_receiver, report_address, time, profitsharing, used_coupon, coupon_fee,     coupon_info, pay_id, fee, order_status, trade_id, update_time, create_time         from tencent_order_history     where user_id = ?     limit ?,?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy127.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy158.selectByUserId(Unknown Source)
	at com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl.listOrder(TencentOrderBizServiceImpl.java:483)
	at com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$FastClassBySpringCGLIB$$7963c5a4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$EnhancerBySpringCGLIB$$c4233641.listOrder(<generated>)
	at org.apache.dubbo.common.bytecode.Wrapper112.invokeMethod(Wrapper112.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
	at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:105)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:149)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
	at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:823)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 11
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.Util.getInstance(Util.java:387)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:939)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2478)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2625)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2551)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_execute(FilterAdapter.java:1080)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:108)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy228.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor702.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 41 more

2020-12-28 13:39:36,047-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：10001
2020-12-28 13:39:37,008-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 13:39:37,010-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 13:39:37,014-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 13:39:37,015-[INFO]-logger.py-Unit_test-日志信息:正在执行第63条用例:【腾讯健康】7-查询订单列表-int非必填字段为str-失败
2020-12-28 13:39:37,016-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/list；method：GET；data：{"userId":"zgh001","offset":"0","limit":"100"}；sql：{}
2020-12-28 13:39:37,019-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:39:37,070-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:39:37,072-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 13:39:37,218-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': [{'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-24 14:33', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '85', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-25 10:27', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '90', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-25 10:38', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '91', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-25 10:39', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '92', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-25 11:09', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '93', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-25 11:16', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '94', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-25 11:32', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '95', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-25 11:35', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '96', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[]', 'createTime': '2020-12-25 13:06', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '97', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-25 13:16', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '98', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 10, 'couponInfo': '[{"fee":"10","id":"b123454679959999999999","type":"fullReduction"}]', 'createTime': '2020-12-25 13:17', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000110, 'orderId': '99', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 10}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 0, 'couponInfo': '[]', 'createTime': '2020-12-25 13:34', 'examName': 'zgh', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000100, 'orderId': '102', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 0}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-25 13:39', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '103', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}, {'code': 18, 'codeName': '申请退款', 'countDown': 0, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-25 13:41', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '104', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}, {'code': 31, 'codeName': '已支付，待体检', 'countDown': 0, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-25 13:58', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '105', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}, {'code': 18, 'codeName': '申请退款', 'countDown': 0, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-25 14:04', 'examName': 'aaa', 'medicalTime': '2019-03-01', 'orderCountPrice': 3000200, 'orderId': '106', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-25 14:30', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '107', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-25 14:30', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '108', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}, {'code': 31, 'codeName': '已支付，待体检', 'countDown': 0, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-25 14:31', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '109', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}, {'code': 14, 'codeName': '支付超时', 'countDown': 0, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-26 10:25', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '116', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}, {'code': 2, 'codeName': '待支付', 'countDown': 2186, 'couponFee': 100, 'couponInfo': '[]', 'createTime': '2020-12-28 13:16', 'examName': 'aaa', 'medicalTime': '2020-12-30', 'orderCountPrice': 3000200, 'orderId': '117', 'orderPrice': 3000100, 'orgId': 'HL00001', 'orgName': '铜陵市中医医院', 'packageId': '5', 'packageName': '测试商品套餐001', 'packagePrice': 3000100, 'smallPicture': 'https://wantu-test.oss-cn-hangzhou.aliyuncs.com/healthmanage/managefile/2019/05/e5c4bc0648a44028a312186e8f20e310.png', 'usedCoupon': 100}], 'message': '成功'}
2020-12-28 13:39:37,224-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.204936s
2020-12-28 13:39:37,226-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 13:39:38,270-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 13:39:38,271-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 13:39:38,277-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 13:39:38,279-[INFO]-logger.py-Unit_test-日志信息:正在执行第64条用例:【腾讯健康】8-查询订单列表-无参数-失败
2020-12-28 13:39:38,281-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/list；method：GET；data：{}；sql：{}
2020-12-28 13:39:38,283-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:39:38,336-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:39:38,338-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 13:39:38,373-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为userId', 'result': None, 'success': False}
2020-12-28 13:39:38,375-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.093947s
2020-12-28 13:39:38,376-[INFO]-logger.py-Unit_test-日志信息:接口返回message:缺少必要参数,参数名称为userId
2020-12-28 13:39:38,378-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 13:39:38,380-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.093947, 'data': '缺少必要参数,参数名称为userId', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 13:39:39,437-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 13:39:39,438-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 13:39:39,440-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 13:39:39,441-[INFO]-logger.py-Unit_test-日志信息:正在执行第65条用例:【腾讯健康】9-查询订单列表-非必填字段缺失-失败
2020-12-28 13:39:39,442-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/list；method：GET；data：{"userId":"zgh001"}；sql：{}
2020-12-28 13:39:39,444-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 13:39:39,479-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 13:39:39,480-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 13:39:39,514-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '缺少必要参数,参数名称为offset', 'result': None, 'success': False}
2020-12-28 13:39:39,516-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.072979s
2020-12-28 13:39:39,517-[INFO]-logger.py-Unit_test-日志信息:接口返回message:缺少必要参数,参数名称为offset
2020-12-28 13:39:39,518-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 13:39:39,519-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.072979, 'data': '缺少必要参数,参数名称为offset', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 13:39:40,429-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 13:39:40,430-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:16,376-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 15:11:16,378-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 15:11:16,725-[INFO]-logger.py-Unit_test-日志信息:当前使用的用例表单：Sheet4
2020-12-28 15:11:17,114-[INFO]-logger.py-readExcel-日志信息:获取表单成功：<Worksheet "Sheet4">
2020-12-28 15:11:17,119-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:17,120-[INFO]-logger.py-Unit_test-日志信息:正在执行第66条用例:【腾讯健康】1-创建订单-成功
2020-12-28 15:11:17,121-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 15:11:17,127-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:17,173-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:17,174-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:17,606-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '125', 'orderPrice': 3000100, 'receiptNo': '125'}, 'message': '成功'}
2020-12-28 15:11:17,610-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.485919s
2020-12-28 15:11:17,612-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 15:11:17,615-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.485919, 'data': {'orderCountPrice': 3000100, 'orderId': '125', 'orderPrice': 3000100, 'receiptNo': '125'}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:18,459-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:18,461-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:18,462-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:18,464-[INFO]-logger.py-Unit_test-日志信息:正在执行第67条用例:【腾讯健康】2-创建订单-必填年龄字段为空-失败
2020-12-28 15:11:18,465-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":"","birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 15:11:18,467-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:18,490-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:18,491-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:18,554-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{age:年龄不能为空 }', 'result': None, 'success': False}
2020-12-28 15:11:18,556-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.089961s
2020-12-28 15:11:18,557-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{age:年龄不能为空 }
2020-12-28 15:11:18,557-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 15:11:18,559-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.089961, 'data': '{age:年龄不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:19,599-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:19,600-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:19,602-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:19,603-[INFO]-logger.py-Unit_test-日志信息:正在执行第68条用例:【腾讯健康】3-创建订单-必填生日字段为空-失败
2020-12-28 15:11:19,604-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 15:11:19,606-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:19,651-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:19,652-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:19,692-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{birthday:出生日期不能为空 }', 'result': None, 'success': False}
2020-12-28 15:11:19,693-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.087949s
2020-12-28 15:11:19,694-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{birthday:出生日期不能为空 }
2020-12-28 15:11:19,695-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 15:11:19,696-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.087949, 'data': '{birthday:出生日期不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:20,670-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:20,671-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:20,672-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:20,673-[INFO]-logger.py-Unit_test-日志信息:正在执行第69条用例:【腾讯健康】4-创建订单-必填预约人字段为空-失败
2020-12-28 15:11:20,675-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 15:11:20,676-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:20,726-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:20,728-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:20,759-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{bookingName:预约人名称不能为空 }', 'result': None, 'success': False}
2020-12-28 15:11:20,761-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.085027s
2020-12-28 15:11:20,762-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{bookingName:预约人名称不能为空 }
2020-12-28 15:11:20,763-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 15:11:20,764-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.085027, 'data': '{bookingName:预约人名称不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:21,733-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:21,735-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:21,736-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:21,737-[INFO]-logger.py-Unit_test-日志信息:正在执行第70条用例:【腾讯健康】5-创建订单-必填预约人手机字段为空-失败
2020-12-28 15:11:21,738-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 15:11:21,742-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:21,769-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:21,770-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:21,800-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{bookingPhone:预约人电话不能为空 }', 'result': None, 'success': False}
2020-12-28 15:11:21,801-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.060995s
2020-12-28 15:11:21,802-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{bookingPhone:预约人电话不能为空 }
2020-12-28 15:11:21,804-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 15:11:21,805-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.060995, 'data': '{bookingPhone:预约人电话不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:22,726-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:22,728-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:22,729-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:22,730-[INFO]-logger.py-Unit_test-日志信息:正在执行第71条用例:【腾讯健康】6-创建订单-必填身份证号码字段为空-失败
2020-12-28 15:11:22,731-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 15:11:22,733-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:22,772-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:22,773-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:22,810-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{cardId:证件号不能为空 }', 'result': None, 'success': False}
2020-12-28 15:11:22,811-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.077969s
2020-12-28 15:11:22,812-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{cardId:证件号不能为空 }
2020-12-28 15:11:22,813-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 15:11:22,814-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.077969, 'data': '{cardId:证件号不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:23,749-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:23,750-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:23,751-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:23,753-[INFO]-logger.py-Unit_test-日志信息:正在执行第72条用例:【腾讯健康】7-创建订单-必填卡状态字段为空-失败
2020-12-28 15:11:23,754-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":"","couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 15:11:23,755-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:23,804-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:23,806-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:23,854-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{cardType:证件类型不能为空 }', 'result': None, 'success': False}
2020-12-28 15:11:23,855-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.099942s
2020-12-28 15:11:23,856-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{cardType:证件类型不能为空 }
2020-12-28 15:11:23,857-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 15:11:23,858-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.099942, 'data': '{cardType:证件类型不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:24,753-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:24,755-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:24,756-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:24,757-[INFO]-logger.py-Unit_test-日志信息:正在执行第73条用例:【腾讯健康】8-创建订单-必填婚姻状态字段为空-失败
2020-12-28 15:11:24,758-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":"","medicalTime":"2021-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 15:11:24,762-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:24,799-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:24,801-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:24,839-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{marriageStatus:婚姻状况不能为空 }', 'result': None, 'success': False}
2020-12-28 15:11:24,840-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.078967s
2020-12-28 15:11:24,841-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{marriageStatus:婚姻状况不能为空 }
2020-12-28 15:11:24,842-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 15:11:24,843-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.078967, 'data': '{marriageStatus:婚姻状况不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:25,778-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:25,779-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:25,780-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:25,781-[INFO]-logger.py-Unit_test-日志信息:正在执行第74条用例:【腾讯健康】9-创建订单-必填体检日期字段为空-失败
2020-12-28 15:11:25,783-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 15:11:25,784-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:25,832-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:25,834-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:25,861-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{medicalTime:体检日期不能为空 }', 'result': None, 'success': False}
2020-12-28 15:11:25,862-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.077954s
2020-12-28 15:11:25,863-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{medicalTime:体检日期不能为空 }
2020-12-28 15:11:25,864-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 15:11:25,865-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.077954, 'data': '{medicalTime:体检日期不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:26,807-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:26,809-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:26,812-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:26,813-[INFO]-logger.py-Unit_test-日志信息:正在执行第75条用例:【腾讯健康】10-创建订单-必填体检人字段为空-失败
2020-12-28 15:11:26,814-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 15:11:26,816-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:26,860-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:26,861-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:26,893-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{name:体检人姓名不能为空 }', 'result': None, 'success': False}
2020-12-28 15:11:26,894-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.078967s
2020-12-28 15:11:26,896-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{name:体检人姓名不能为空 }
2020-12-28 15:11:26,897-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 15:11:26,898-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.078967, 'data': '{name:体检人姓名不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:27,837-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:27,839-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:27,841-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:27,842-[INFO]-logger.py-Unit_test-日志信息:正在执行第76条用例:【腾讯健康】11-创建订单-必填机构ID字段为空-失败
2020-12-28 15:11:27,843-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 15:11:27,845-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:27,879-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:27,880-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:27,904-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{orgId:机构ID不能为空 }', 'result': None, 'success': False}
2020-12-28 15:11:27,906-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.061585s
2020-12-28 15:11:27,907-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{orgId:机构ID不能为空 }
2020-12-28 15:11:27,908-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 15:11:27,909-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.061585, 'data': '{orgId:机构ID不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:28,813-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:28,814-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:28,815-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:28,816-[INFO]-logger.py-Unit_test-日志信息:正在执行第77条用例:【腾讯健康】12-创建订单-必填体检机构字段为空-失败
2020-12-28 15:11:28,818-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"HL00001","orgName":"","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 15:11:28,820-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:28,844-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:28,845-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:28,881-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{orgName:机构名称不能为空 }', 'result': None, 'success': False}
2020-12-28 15:11:28,883-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.062985s
2020-12-28 15:11:28,885-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{orgName:机构名称不能为空 }
2020-12-28 15:11:28,888-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 15:11:28,891-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.062985, 'data': '{orgName:机构名称不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:29,861-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:29,862-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:29,864-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:29,865-[INFO]-logger.py-Unit_test-日志信息:正在执行第78条用例:【腾讯健康】13-创建订单-必填套餐ID字段为空-失败
2020-12-28 15:11:29,866-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 15:11:29,868-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:29,906-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:29,907-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:29,943-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{packageId:套餐ID不能为空 }', 'result': None, 'success': False}
2020-12-28 15:11:29,944-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.076955s
2020-12-28 15:11:29,945-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{packageId:套餐ID不能为空 }
2020-12-28 15:11:29,946-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 15:11:29,947-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.076955, 'data': '{packageId:套餐ID不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:30,897-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:30,898-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:30,900-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:30,901-[INFO]-logger.py-Unit_test-日志信息:正在执行第79条用例:【腾讯健康】14-创建订单-必填套餐名字字段为空-失败
2020-12-28 15:11:30,902-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 15:11:30,904-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:30,938-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:30,940-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:30,976-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{packageName:套餐名称不能为空 }', 'result': None, 'success': False}
2020-12-28 15:11:30,979-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.073996s
2020-12-28 15:11:30,981-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{packageName:套餐名称不能为空 }
2020-12-28 15:11:30,983-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 15:11:30,986-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.073996, 'data': '{packageName:套餐名称不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:31,902-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:31,903-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:31,905-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:31,906-[INFO]-logger.py-Unit_test-日志信息:正在执行第80条用例:【腾讯健康】15-创建订单-必填手机字段为空-失败
2020-12-28 15:11:31,907-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 15:11:31,909-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:31,941-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:31,943-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:31,974-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{phone:电话不能为空 }', 'result': None, 'success': False}
2020-12-28 15:11:31,976-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.065962s
2020-12-28 15:11:31,979-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{phone:电话不能为空 }
2020-12-28 15:11:31,981-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 15:11:31,983-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.065962, 'data': '{phone:电话不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:32,926-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:32,928-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:32,929-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:32,930-[INFO]-logger.py-Unit_test-日志信息:正在执行第81条用例:【腾讯健康】16-创建订单-必填报告类型字段为空-失败
2020-12-28 15:11:32,932-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":"","sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 15:11:32,933-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:32,982-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:32,983-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:33,013-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{reportType:报告领取方式不能为空 }', 'result': None, 'success': False}
2020-12-28 15:11:33,014-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.081956s
2020-12-28 15:11:33,016-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{reportType:报告领取方式不能为空 }
2020-12-28 15:11:33,017-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 15:11:33,018-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.081956, 'data': '{reportType:报告领取方式不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:33,982-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:33,983-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:33,984-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:33,985-[INFO]-logger.py-Unit_test-日志信息:正在执行第82条用例:【腾讯健康】17-创建订单-必填性别字段为空-失败
2020-12-28 15:11:33,986-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":"","time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 15:11:33,988-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:34,031-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:34,033-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:34,068-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{sex:性别不能为空 }', 'result': None, 'success': False}
2020-12-28 15:11:34,069-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.080967s
2020-12-28 15:11:34,070-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{sex:性别不能为空 }
2020-12-28 15:11:34,071-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 15:11:34,072-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.080967, 'data': '{sex:性别不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:35,007-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:35,008-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:35,010-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:35,011-[INFO]-logger.py-Unit_test-日志信息:正在执行第83条用例:【腾讯健康】18-创建订单-必填是否使用优惠券字段为空-失败
2020-12-28 15:11:35,013-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":2,"time":"","usedCoupon":"","userId":"zgh001"}；sql：{}
2020-12-28 15:11:35,015-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:35,062-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:35,064-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:35,093-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{usedCoupon:是否使用优惠券不能为空 }', 'result': None, 'success': False}
2020-12-28 15:11:35,094-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.081952s
2020-12-28 15:11:35,095-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{usedCoupon:是否使用优惠券不能为空 }
2020-12-28 15:11:35,097-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 15:11:35,098-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.081952, 'data': '{usedCoupon:是否使用优惠券不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:36,003-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:36,005-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 15:11:36,006-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 15:11:36,007-[INFO]-logger.py-Unit_test-日志信息:正在执行第84条用例:【腾讯健康】19-创建订单-必填用户ID字段为空-失败
2020-12-28 15:11:36,009-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":""}；sql：{}
2020-12-28 15:11:36,010-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 15:11:36,035-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 15:11:36,037-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 15:11:36,074-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{userId:用户ID不能为空 }', 'result': None, 'success': False}
2020-12-28 15:11:36,075-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.06496s
2020-12-28 15:11:36,076-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{userId:用户ID不能为空 }
2020-12-28 15:11:36,076-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 15:11:36,077-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.06496, 'data': '{userId:用户ID不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 15:11:37,081-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 15:11:37,082-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 16:20:08,815-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 16:20:08,817-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 16:20:08,843-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 16:20:08,885-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 16:20:08,886-[INFO]-logger.py-httpRequest-日志信息:现在开始进行GET方法调用请求
2020-12-28 16:20:08,978-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': "Request method 'GET' not supported", 'result': None, 'success': False}
2020-12-28 16:20:34,218-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 16:20:34,220-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 16:20:34,246-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 16:20:34,289-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 16:20:34,290-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 16:20:34,429-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '10001', 'errorMsg': "org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1\n### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline\n### The error occurred while setting parameters\n### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )\n### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1\n; Data truncation: Out of range value for column 'age' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1\norg.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1\n### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline\n### The error occurred while setting parameters\n### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       values ( ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                              ?,                       ?,                       now() )\n### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1\n; Data truncation: Out of range value for column 'age' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1\n\tat org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n\tat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)\n\tat com.sun.proxy.$Proxy127.insert(Unknown Source)\n\tat org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\n\tat com.sun.proxy.$Proxy156.insertSelective(Unknown Source)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl.createOrder(TencentOrderBizServiceImpl.java:178)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$FastClassBySpringCGLIB$$7963c5a4.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$EnhancerBySpringCGLIB$$eb957e60.createOrder(<generated>)\n\tat org.apache.dubbo.common.bytecode.Wrapper112.invokeMethod(Wrapper112.java)\n\tat org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)\n\tat org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)\n\tat org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)\n\tat org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)\n\tat org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:105)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:149)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)\n\tat org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)\n\tat org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)\n\tat org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:823)\nCaused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3876)\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)\n\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2478)\n\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2625)\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2551)\n\tat com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)\n\tat com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)\n\tat com.alibaba.druid.filter.FilterAdapter.preparedStatement_execute(FilterAdapter.java:1080)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)\n\tat com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)\n\tat org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)\n\tat org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)\n\tat sun.reflect.GeneratedMethodAccessor585.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)\n\tat com.sun.proxy.$Proxy229.update(Unknown Source)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)\n\tat sun.reflect.GeneratedMethodAccessor587.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)\n\t... 40 more\n", 'result': None, 'success': False}
2020-12-28 16:29:28,766-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 16:29:28,768-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 16:29:28,793-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 16:29:28,843-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 16:29:28,846-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 16:29:29,235-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '129', 'orderPrice': 3000100, 'receiptNo': '129'}, 'message': '成功'}
2020-12-28 16:41:41,376-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 16:41:41,378-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 16:41:41,405-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 16:41:41,445-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 16:41:41,447-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 16:41:41,538-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{birthday:出生日期不能为空 }', 'result': None, 'success': False}
2020-12-28 16:42:38,681-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 16:42:38,683-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 16:42:38,719-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 16:42:38,758-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 16:42:38,759-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 16:42:38,878-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '130', 'orderPrice': 3000100, 'receiptNo': '130'}, 'message': '成功'}
2020-12-28 16:42:55,650-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 16:42:55,652-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 16:42:55,679-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 16:42:55,723-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 16:42:55,724-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 16:42:55,822-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '131', 'orderPrice': 3000100, 'receiptNo': '131'}, 'message': '成功'}
2020-12-28 16:43:14,546-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 16:43:14,548-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 16:43:14,574-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 16:43:14,598-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 16:43:14,599-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 16:43:14,698-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '132', 'orderPrice': 3000100, 'receiptNo': '132'}, 'message': '成功'}
2020-12-28 16:50:38,350-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 16:50:38,352-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 16:50:38,377-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 16:50:38,428-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 16:50:38,429-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 16:50:38,549-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '133', 'orderPrice': 3000100, 'receiptNo': '133'}, 'message': '成功'}
2020-12-28 16:51:49,393-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 16:51:49,395-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 16:51:49,423-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 16:51:49,462-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 16:51:49,464-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 16:51:49,548-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{bookingName:预约人名称不能为空 }', 'result': None, 'success': False}
2020-12-28 16:53:07,360-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 16:53:07,362-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 16:53:07,389-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 16:53:07,428-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 16:53:07,429-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 16:53:07,559-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '134', 'orderPrice': 3000100, 'receiptNo': '134'}, 'message': '成功'}
2020-12-28 16:53:56,539-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 16:53:56,541-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 16:53:56,569-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 16:53:56,640-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 16:53:56,641-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 16:53:56,694-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{bookingPhone:预约人电话不能为空 }', 'result': None, 'success': False}
2020-12-28 16:55:05,863-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 16:55:05,865-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 16:55:05,892-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 16:55:05,915-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 16:55:05,917-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 16:55:06,040-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '135', 'orderPrice': 3000100, 'receiptNo': '135'}, 'message': '成功'}
2020-12-28 16:58:41,789-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 16:58:41,791-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 16:58:41,822-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 16:58:41,862-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 16:58:41,863-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 16:58:41,996-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '136', 'orderPrice': 3000100, 'receiptNo': '136'}, 'message': '成功'}
2020-12-28 16:59:19,912-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 16:59:19,915-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 16:59:19,940-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 16:59:19,976-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 16:59:19,977-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 16:59:20,030-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{cardId:证件号不能为空 }', 'result': None, 'success': False}
2020-12-28 17:00:11,517-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 17:00:11,519-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 17:00:11,546-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 17:00:11,593-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 17:00:11,594-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 17:00:11,705-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '137', 'orderPrice': 3000100, 'receiptNo': '137'}, 'message': '成功'}
2020-12-28 17:07:09,983-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 17:07:09,985-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 17:07:10,012-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 17:07:10,066-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 17:07:10,068-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 17:07:10,177-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '138', 'orderPrice': 3000100, 'receiptNo': '138'}, 'message': '成功'}
2020-12-28 17:08:27,101-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 17:08:27,103-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 17:08:27,128-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 17:08:27,185-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 17:08:27,186-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 17:08:27,292-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{cardType:证件类型不能为空 }', 'result': None, 'success': False}
2020-12-28 17:09:17,903-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 17:09:17,905-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 17:09:17,931-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 17:09:17,985-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 17:09:17,986-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 17:09:18,156-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '10001', 'errorMsg': "org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1\n### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline\n### The error occurred while setting parameters\n### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )\n### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1\n; Data truncation: Out of range value for column 'card_type' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1\norg.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1\n### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline\n### The error occurred while setting parameters\n### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )\n### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1\n; Data truncation: Out of range value for column 'card_type' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1\n\tat org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n\tat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)\n\tat com.sun.proxy.$Proxy127.insert(Unknown Source)\n\tat org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\n\tat com.sun.proxy.$Proxy158.insertSelective(Unknown Source)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl.createOrder(TencentOrderBizServiceImpl.java:178)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$FastClassBySpringCGLIB$$7963c5a4.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$EnhancerBySpringCGLIB$$7855f545.createOrder(<generated>)\n\tat org.apache.dubbo.common.bytecode.Wrapper112.invokeMethod(Wrapper112.java)\n\tat org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)\n\tat org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)\n\tat org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)\n\tat org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)\n\tat org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:105)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:149)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)\n\tat org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)\n\tat org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)\n\tat org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:823)\nCaused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3876)\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)\n\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2478)\n\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2625)\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2551)\n\tat com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)\n\tat com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)\n\tat com.alibaba.druid.filter.FilterAdapter.preparedStatement_execute(FilterAdapter.java:1080)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)\n\tat com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)\n\tat org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)\n\tat org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)\n\tat sun.reflect.GeneratedMethodAccessor585.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)\n\tat com.sun.proxy.$Proxy229.update(Unknown Source)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)\n\tat sun.reflect.GeneratedMethodAccessor584.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)\n\t... 40 more\n", 'result': None, 'success': False}
2020-12-28 17:16:04,138-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 17:16:04,140-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 17:16:04,166-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 17:16:04,202-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 17:16:04,203-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 17:16:04,313-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '139', 'orderPrice': 3000100, 'receiptNo': '139'}, 'message': '成功'}
2020-12-28 17:27:49,480-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 17:27:49,482-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 17:27:49,508-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 17:27:49,561-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 17:27:49,562-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 17:27:49,725-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '140', 'orderPrice': 3000100, 'receiptNo': '140'}, 'message': '成功'}
2020-12-28 17:35:20,137-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 17:35:20,139-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 17:35:20,165-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 17:35:20,189-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 17:35:20,190-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 17:35:20,295-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '141', 'orderPrice': 3000100, 'receiptNo': '141'}, 'message': '成功'}
2020-12-28 18:56:24,368-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 18:56:24,370-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 18:56:24,398-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 18:56:24,433-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 18:56:24,434-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 18:56:24,559-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '10001', 'errorMsg': "org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1\n### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline\n### The error occurred while setting parameters\n### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )\n### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1\n; Data truncation: Out of range value for column 'marriage_status' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1\norg.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1\n### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline\n### The error occurred while setting parameters\n### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )\n### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1\n; Data truncation: Out of range value for column 'marriage_status' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1\n\tat org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n\tat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)\n\tat com.sun.proxy.$Proxy127.insert(Unknown Source)\n\tat org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\n\tat com.sun.proxy.$Proxy158.insertSelective(Unknown Source)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl.createOrder(TencentOrderBizServiceImpl.java:178)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$FastClassBySpringCGLIB$$7963c5a4.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$EnhancerBySpringCGLIB$$7855f545.createOrder(<generated>)\n\tat org.apache.dubbo.common.bytecode.Wrapper112.invokeMethod(Wrapper112.java)\n\tat org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)\n\tat org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)\n\tat org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)\n\tat org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)\n\tat org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:105)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:149)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)\n\tat org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)\n\tat org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)\n\tat org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:823)\nCaused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3876)\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)\n\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2478)\n\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2625)\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2551)\n\tat com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)\n\tat com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)\n\tat com.alibaba.druid.filter.FilterAdapter.preparedStatement_execute(FilterAdapter.java:1080)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)\n\tat com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)\n\tat org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)\n\tat org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)\n\tat sun.reflect.GeneratedMethodAccessor585.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)\n\tat com.sun.proxy.$Proxy229.update(Unknown Source)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)\n\tat sun.reflect.GeneratedMethodAccessor584.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)\n\t... 40 more\n", 'result': None, 'success': False}
2020-12-28 18:59:18,063-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 18:59:18,065-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 18:59:18,092-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 18:59:18,142-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 18:59:18,143-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 18:59:18,257-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '142', 'orderPrice': 3000100, 'receiptNo': '142'}, 'message': '成功'}
2020-12-28 19:00:08,397-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:00:08,399-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:00:08,425-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:00:08,467-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:00:08,468-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:00:08,524-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{medicalTime:体检日期不能为空 }', 'result': None, 'success': False}
2020-12-28 19:01:29,731-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:01:29,733-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:01:29,759-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:01:29,782-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:01:29,784-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:01:29,889-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '143', 'orderPrice': 3000100, 'receiptNo': '143'}, 'message': '成功'}
2020-12-28 19:02:33,552-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:02:33,555-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:02:33,582-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:02:33,636-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:02:33,637-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:02:33,742-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '144', 'orderPrice': 3000100, 'receiptNo': '144'}, 'message': '成功'}
2020-12-28 19:08:43,892-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:08:43,894-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:08:43,921-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:08:43,945-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:08:43,946-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:08:44,001-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{name:体检人姓名不能为空 }', 'result': None, 'success': False}
2020-12-28 19:10:23,550-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:10:23,552-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:10:23,579-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:10:23,624-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:10:23,625-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:10:23,725-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '145', 'orderPrice': 3000100, 'receiptNo': '145'}, 'message': '成功'}
2020-12-28 19:13:46,304-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:13:46,308-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:13:46,336-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:13:46,362-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:13:46,363-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:13:46,428-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 20273, 'data': None, 'message': '机构已下架'}
2020-12-28 19:14:20,442-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:14:20,444-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:14:20,471-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:14:20,509-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:14:20,510-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:14:20,567-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 20273, 'data': None, 'message': '机构已下架'}
2020-12-28 19:14:29,142-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:14:29,144-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:14:29,171-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:14:29,211-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:14:29,212-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:14:29,263-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 20273, 'data': None, 'message': '机构已下架'}
2020-12-28 19:17:10,426-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:17:10,428-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:17:10,464-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:17:10,514-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:17:10,515-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:17:10,563-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{orgId:机构ID不能为空 }', 'result': None, 'success': False}
2020-12-28 19:17:59,686-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:17:59,688-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:17:59,715-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:17:59,759-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:17:59,761-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:17:59,828-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 20273, 'data': None, 'message': '机构已下架'}
2020-12-28 19:20:42,927-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:20:42,929-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:20:42,957-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:20:42,991-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:20:42,992-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:20:43,090-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 20273, 'data': None, 'message': '机构已下架'}
2020-12-28 19:23:18,676-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:23:18,678-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:23:18,705-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:23:18,743-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:23:18,744-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:23:18,805-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 20273, 'data': None, 'message': '机构已下架'}
2020-12-28 19:24:28,413-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:24:28,415-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:24:28,441-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:24:28,486-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:24:28,487-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:24:28,533-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{orgName:机构名称不能为空 }', 'result': None, 'success': False}
2020-12-28 19:25:30,506-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:25:30,508-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:25:30,535-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:25:30,570-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:25:30,571-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:25:30,643-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 20273, 'data': None, 'message': '机构已下架'}
2020-12-28 19:25:55,051-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:25:55,053-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:25:55,081-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:25:55,113-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:25:55,115-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:25:55,216-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '146', 'orderPrice': 3000100, 'receiptNo': '146'}, 'message': '成功'}
2020-12-28 19:28:19,383-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:28:19,385-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:28:19,413-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:28:19,458-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:28:19,459-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:28:19,534-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '10001', 'errorMsg': 'For input string: "999.99"', 'result': None, 'success': False}
2020-12-28 19:28:55,187-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:28:55,189-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:28:55,215-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:28:55,240-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:28:55,241-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:28:55,319-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 20146, 'data': None, 'message': '套餐不存在'}
2020-12-28 19:30:13,163-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:30:13,165-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:30:13,192-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:30:13,219-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:30:13,220-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:30:13,303-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 20302, 'data': None, 'message': '套餐名与预期不符'}
2020-12-28 19:30:39,860-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:30:39,862-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:30:39,889-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:30:39,937-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:30:39,939-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:30:40,026-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 20302, 'data': None, 'message': '套餐名与预期不符'}
2020-12-28 19:38:26,237-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:38:26,239-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:38:26,266-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:38:26,313-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:38:26,314-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:38:26,423-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 1, 'orderId': '147', 'orderPrice': 1, 'receiptNo': '147'}, 'message': '成功'}
2020-12-28 19:45:05,549-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:45:05,551-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:45:05,580-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:45:05,632-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:45:05,634-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:45:05,763-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 20302, 'data': None, 'message': '套餐名与预期不符'}
2020-12-28 19:49:05,093-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:49:05,095-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:49:05,122-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:49:05,159-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:49:05,160-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:49:05,278-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '148', 'orderPrice': 3000100, 'receiptNo': '148'}, 'message': '成功'}
2020-12-28 19:50:14,138-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:50:14,139-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:50:14,167-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:50:14,215-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:50:14,216-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:50:14,262-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{phone:电话不能为空 }', 'result': None, 'success': False}
2020-12-28 19:51:00,465-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:51:00,468-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:51:00,494-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:51:00,526-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:51:00,527-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:51:00,678-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '149', 'orderPrice': 3000100, 'receiptNo': '149'}, 'message': '成功'}
2020-12-28 19:59:41,262-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 19:59:41,264-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 19:59:41,290-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 19:59:41,325-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 19:59:41,326-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 19:59:41,432-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '150', 'orderPrice': 3000100, 'receiptNo': '150'}, 'message': '成功'}
2020-12-28 20:01:13,602-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 20:01:13,604-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 20:01:13,631-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:01:13,671-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:01:13,673-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:01:13,760-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '10001', 'errorMsg': "org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1\n### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline\n### The error occurred while setting parameters\n### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )\n### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1\n; Data truncation: Out of range value for column 'profitsharing' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1\norg.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1\n### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline\n### The error occurred while setting parameters\n### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )\n### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1\n; Data truncation: Out of range value for column 'profitsharing' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1\n\tat org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n\tat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)\n\tat com.sun.proxy.$Proxy127.insert(Unknown Source)\n\tat org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\n\tat com.sun.proxy.$Proxy158.insertSelective(Unknown Source)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl.createOrder(TencentOrderBizServiceImpl.java:178)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$FastClassBySpringCGLIB$$7963c5a4.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$EnhancerBySpringCGLIB$$7855f545.createOrder(<generated>)\n\tat org.apache.dubbo.common.bytecode.Wrapper112.invokeMethod(Wrapper112.java)\n\tat org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)\n\tat org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)\n\tat org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)\n\tat org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)\n\tat org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:105)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:149)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)\n\tat org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)\n\tat org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)\n\tat org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:823)\nCaused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3876)\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)\n\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2478)\n\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2625)\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2551)\n\tat com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)\n\tat com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)\n\tat com.alibaba.druid.filter.FilterAdapter.preparedStatement_execute(FilterAdapter.java:1080)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)\n\tat com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)\n\tat org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)\n\tat org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)\n\tat sun.reflect.GeneratedMethodAccessor585.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)\n\tat com.sun.proxy.$Proxy229.update(Unknown Source)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)\n\tat sun.reflect.GeneratedMethodAccessor584.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)\n\t... 40 more\n", 'result': None, 'success': False}
2020-12-28 20:04:27,195-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 20:04:27,197-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 20:04:27,223-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:04:27,271-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:04:27,272-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:04:27,382-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '151', 'orderPrice': 3000100, 'receiptNo': '151'}, 'message': '成功'}
2020-12-28 20:05:11,104-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 20:05:11,105-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 20:05:11,131-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:05:11,172-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:05:11,173-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:05:11,278-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '152', 'orderPrice': 3000100, 'receiptNo': '152'}, 'message': '成功'}
2020-12-28 20:06:29,649-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 20:06:29,651-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 20:06:29,679-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:06:29,713-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:06:29,715-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:06:29,811-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '153', 'orderPrice': 3000100, 'receiptNo': '153'}, 'message': '成功'}
2020-12-28 20:20:08,768-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 20:20:08,770-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 20:20:08,798-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:08,821-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:08,822-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:08,997-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '154', 'orderPrice': 3000100, 'receiptNo': '154'}, 'message': '成功'}
2020-12-28 20:20:11,893-[INFO]-logger.py-readExcel-日志信息:用例执行模式（0全部执行，1指定接口，2区间接口）：2
2020-12-28 20:20:11,895-[INFO]-logger.py-readExcel-日志信息:当前使用临时配置用例列表：[9, 10, 11]
2020-12-28 20:20:12,315-[INFO]-logger.py-Unit_test-日志信息:当前使用的用例表单：Sheet4
2020-12-28 20:20:12,736-[INFO]-logger.py-readExcel-日志信息:获取表单成功：<Worksheet "Sheet4">
2020-12-28 20:20:12,745-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:12,746-[INFO]-logger.py-Unit_test-日志信息:正在执行第75条用例:【腾讯健康】10-创建订单-必填体检人字段为空-失败
2020-12-28 20:20:12,747-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:12,753-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:12,794-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:12,797-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:12,841-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{name:体检人姓名不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:12,843-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.094945s
2020-12-28 20:20:12,844-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{name:体检人姓名不能为空 }
2020-12-28 20:20:12,845-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:12,846-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.094945, 'data': '{name:体检人姓名不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:13,732-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:13,733-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:13,735-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:13,736-[INFO]-logger.py-Unit_test-日志信息:正在执行第76条用例:【腾讯健康】11-创建订单-必填机构ID字段为空-失败
2020-12-28 20:20:13,738-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:13,739-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:13,775-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:13,777-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:13,809-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{orgId:机构ID不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:13,811-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.071958s
2020-12-28 20:20:13,812-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{orgId:机构ID不能为空 }
2020-12-28 20:20:13,813-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:13,814-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.071958, 'data': '{orgId:机构ID不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:15,014-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:15,016-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:15,017-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:15,018-[INFO]-logger.py-Unit_test-日志信息:正在执行第77条用例:【腾讯健康】12-创建订单-必填体检机构字段为空-失败
2020-12-28 20:20:15,019-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"HL00001","orgName":"","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:15,023-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:15,047-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:15,048-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:15,086-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{orgName:机构名称不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:15,087-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.064932s
2020-12-28 20:20:15,088-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{orgName:机构名称不能为空 }
2020-12-28 20:20:15,089-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:15,091-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.064932, 'data': '{orgName:机构名称不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:16,100-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:16,102-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:16,103-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:16,104-[INFO]-logger.py-Unit_test-日志信息:正在执行第78条用例:【腾讯健康】13-创建订单-必填套餐ID字段为空-失败
2020-12-28 20:20:16,106-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:16,107-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:16,130-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:16,131-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:16,156-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{packageId:套餐ID不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:16,158-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.050962s
2020-12-28 20:20:16,159-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{packageId:套餐ID不能为空 }
2020-12-28 20:20:16,160-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:16,162-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.050962, 'data': '{packageId:套餐ID不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:17,163-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:17,164-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:17,166-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:17,167-[INFO]-logger.py-Unit_test-日志信息:正在执行第79条用例:【腾讯健康】14-创建订单-必填套餐名字字段为空-失败
2020-12-28 20:20:17,169-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:17,170-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:17,207-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:17,208-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:17,235-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{packageName:套餐名称不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:17,237-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.066948s
2020-12-28 20:20:17,238-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{packageName:套餐名称不能为空 }
2020-12-28 20:20:17,239-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:17,240-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.066948, 'data': '{packageName:套餐名称不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:18,250-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:18,251-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:18,252-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:18,254-[INFO]-logger.py-Unit_test-日志信息:正在执行第80条用例:【腾讯健康】15-创建订单-必填手机字段为空-失败
2020-12-28 20:20:18,255-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:18,257-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:18,279-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:18,281-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:18,313-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{phone:电话不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:18,314-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.056966s
2020-12-28 20:20:18,315-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{phone:电话不能为空 }
2020-12-28 20:20:18,316-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:18,317-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.056966, 'data': '{phone:电话不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:19,301-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:19,303-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:19,304-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:19,305-[INFO]-logger.py-Unit_test-日志信息:正在执行第81条用例:【腾讯健康】16-创建订单-必填报告领取方式字段为空-失败
2020-12-28 20:20:19,306-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2021-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":"","sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:19,308-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:19,345-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:19,346-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:19,382-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{reportType:报告领取方式不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:19,383-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.074957s
2020-12-28 20:20:19,384-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{reportType:报告领取方式不能为空 }
2020-12-28 20:20:19,385-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:19,387-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.074957, 'data': '{reportType:报告领取方式不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:20,381-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:20,383-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:20,384-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:20,385-[INFO]-logger.py-Unit_test-日志信息:正在执行第82条用例:【腾讯健康】17-创建订单-必填性别字段为空-失败
2020-12-28 20:20:20,386-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":"","time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:20,390-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:20,440-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:20,443-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:20,485-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{sex:性别不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:20,487-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.097931s
2020-12-28 20:20:20,489-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{sex:性别不能为空 }
2020-12-28 20:20:20,491-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:20,492-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.097931, 'data': '{sex:性别不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:21,495-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:21,497-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:21,498-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:21,500-[INFO]-logger.py-Unit_test-日志信息:正在执行第83条用例:【腾讯健康】18-创建订单-必填是否使用优惠券字段为空-失败
2020-12-28 20:20:21,501-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":"","userId":"zgh001"}；sql：{}
2020-12-28 20:20:21,503-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:21,570-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:21,572-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:21,602-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{usedCoupon:是否使用优惠券不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:21,604-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.100524s
2020-12-28 20:20:21,605-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{usedCoupon:是否使用优惠券不能为空 }
2020-12-28 20:20:21,606-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:21,607-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.100524, 'data': '{usedCoupon:是否使用优惠券不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:22,575-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:22,576-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:22,578-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:22,579-[INFO]-logger.py-Unit_test-日志信息:正在执行第84条用例:【腾讯健康】19-创建订单-必填用户ID字段为空-失败
2020-12-28 20:20:22,580-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":""}；sql：{}
2020-12-28 20:20:22,582-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:22,624-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:22,625-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:22,659-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{userId:用户ID不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:22,660-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.077534s
2020-12-28 20:20:22,661-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{userId:用户ID不能为空 }
2020-12-28 20:20:22,662-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:22,663-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.077534, 'data': '{userId:用户ID不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:23,650-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:23,651-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:23,653-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:23,654-[INFO]-logger.py-Unit_test-日志信息:正在执行第85条用例:【腾讯健康】20-创建订单-非必填字段为空-成功
2020-12-28 20:20:23,655-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"","reportReceiver":"","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:23,657-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:23,690-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:23,692-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:23,769-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '155', 'orderPrice': 3000100, 'receiptNo': '155'}, 'message': '成功'}
2020-12-28 20:20:23,771-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.113923s
2020-12-28 20:20:23,773-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 20:20:23,775-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.113923, 'data': {'orderCountPrice': 3000100, 'orderId': '155', 'orderPrice': 3000100, 'receiptNo': '155'}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:24,773-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:24,774-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:24,775-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:24,777-[INFO]-logger.py-Unit_test-日志信息:正在执行第86条用例:【腾讯健康】21-创建订单-str用户ID为int-失败
2020-12-28 20:20:24,778-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:24,780-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:24,806-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:24,807-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:24,881-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '156', 'orderPrice': 3000100, 'receiptNo': '156'}, 'message': '成功'}
2020-12-28 20:20:24,886-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.104935s
2020-12-28 20:20:24,891-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:20:25,929-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:25,930-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:25,937-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:25,938-[INFO]-logger.py-Unit_test-日志信息:正在执行第87条用例:【腾讯健康】22-创建订单-用户ID字段缺失-失败
2020-12-28 20:20:25,939-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0}；sql：{}
2020-12-28 20:20:25,941-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:26,000-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:26,003-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:26,037-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{userId:用户ID不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:26,040-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.097944s
2020-12-28 20:20:26,043-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{userId:用户ID不能为空 }
2020-12-28 20:20:26,045-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:26,048-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.097944, 'data': '{userId:用户ID不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:27,041-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:27,042-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:27,044-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:27,045-[INFO]-logger.py-Unit_test-日志信息:正在执行第88条用例:【腾讯健康】23-创建订单-int年龄为str-失败
2020-12-28 20:20:27,046-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":"18","birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:27,048-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:27,071-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:27,072-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:27,151-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '157', 'orderPrice': 3000100, 'receiptNo': '157'}, 'message': '成功'}
2020-12-28 20:20:27,153-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.10498s
2020-12-28 20:20:27,155-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:20:28,228-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:28,230-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:28,234-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:28,235-[INFO]-logger.py-Unit_test-日志信息:正在执行第89条用例:【腾讯健康】24-创建订单-年龄字段缺失-失败
2020-12-28 20:20:28,236-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:28,238-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:28,288-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:28,289-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:28,321-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{age:年龄不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:28,322-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.08395s
2020-12-28 20:20:28,323-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{age:年龄不能为空 }
2020-12-28 20:20:28,325-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:28,326-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.08395, 'data': '{age:年龄不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:29,346-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:29,347-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:29,348-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:29,349-[INFO]-logger.py-Unit_test-日志信息:正在执行第90条用例:【腾讯健康】25-创建订单-错误年龄字段内容-失败
2020-12-28 20:20:29,350-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":999.99,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:29,352-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:29,386-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:29,388-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:29,447-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '10001', 'errorMsg': "org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1\n### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline\n### The error occurred while setting parameters\n### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )\n### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1\n; Data truncation: Out of range value for column 'age' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1\norg.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1\n### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline\n### The error occurred while setting parameters\n### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )\n### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1\n; Data truncation: Out of range value for column 'age' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1\n\tat org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n\tat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)\n\tat com.sun.proxy.$Proxy127.insert(Unknown Source)\n\tat org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\n\tat com.sun.proxy.$Proxy158.insertSelective(Unknown Source)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl.createOrder(TencentOrderBizServiceImpl.java:178)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$FastClassBySpringCGLIB$$7963c5a4.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$EnhancerBySpringCGLIB$$7855f545.createOrder(<generated>)\n\tat org.apache.dubbo.common.bytecode.Wrapper112.invokeMethod(Wrapper112.java)\n\tat org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)\n\tat org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)\n\tat org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)\n\tat org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)\n\tat org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:105)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:149)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)\n\tat org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)\n\tat org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)\n\tat org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:823)\nCaused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3876)\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)\n\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2478)\n\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2625)\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2551)\n\tat com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)\n\tat com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)\n\tat com.alibaba.druid.filter.FilterAdapter.preparedStatement_execute(FilterAdapter.java:1080)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)\n\tat com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)\n\tat org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)\n\tat org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)\n\tat sun.reflect.GeneratedMethodAccessor585.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)\n\tat com.sun.proxy.$Proxy229.update(Unknown Source)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)\n\tat sun.reflect.GeneratedMethodAccessor584.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)\n\t... 40 more\n", 'result': None, 'success': False}
2020-12-28 20:20:29,455-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.102959s
2020-12-28 20:20:29,456-[INFO]-logger.py-Unit_test-日志信息:接口返回message:org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1
### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline
### The error occurred while setting parameters
### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1
; Data truncation: Out of range value for column 'age' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1
### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline
### The error occurred while setting parameters
### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1
; Data truncation: Out of range value for column 'age' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy127.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy158.insertSelective(Unknown Source)
	at com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl.createOrder(TencentOrderBizServiceImpl.java:178)
	at com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$FastClassBySpringCGLIB$$7963c5a4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$EnhancerBySpringCGLIB$$7855f545.createOrder(<generated>)
	at org.apache.dubbo.common.bytecode.Wrapper112.invokeMethod(Wrapper112.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
	at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:105)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:149)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
	at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:823)
Caused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'age' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3876)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2478)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2625)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2551)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_execute(FilterAdapter.java:1080)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.GeneratedMethodAccessor585.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy229.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor584.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 40 more

2020-12-28 20:20:29,464-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：10001
2020-12-28 20:20:30,503-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:30,504-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:30,509-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:30,510-[INFO]-logger.py-Unit_test-日志信息:正在执行第91条用例:【腾讯健康】26-创建订单-str生日字段为int-失败
2020-12-28 20:20:30,512-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":19980101,"bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":518}；sql：{}
2020-12-28 20:20:30,514-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:30,549-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:30,551-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:30,631-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '158', 'orderPrice': 3000100, 'receiptNo': '158'}, 'message': '成功'}
2020-12-28 20:20:30,633-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.119917s
2020-12-28 20:20:30,634-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:20:31,681-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:31,682-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:31,687-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:31,688-[INFO]-logger.py-Unit_test-日志信息:正在执行第92条用例:【腾讯健康】27-创建订单-生日字段缺失-失败
2020-12-28 20:20:31,689-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:31,691-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:31,726-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:31,728-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:31,764-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{birthday:出生日期不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:31,765-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.073968s
2020-12-28 20:20:31,766-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{birthday:出生日期不能为空 }
2020-12-28 20:20:31,767-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:31,768-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.073968, 'data': '{birthday:出生日期不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:32,762-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:32,764-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:32,765-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:32,767-[INFO]-logger.py-Unit_test-日志信息:正在执行第93条用例:【腾讯健康】28-创建订单-无效生日字段-失败
2020-12-28 20:20:32,768-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"99999-99-99","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:32,769-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:32,803-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:32,804-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:32,899-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '159', 'orderPrice': 3000100, 'receiptNo': '159'}, 'message': '成功'}
2020-12-28 20:20:32,900-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.130924s
2020-12-28 20:20:32,901-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:20:33,970-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:33,972-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:33,976-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:33,977-[INFO]-logger.py-Unit_test-日志信息:正在执行第94条用例:【腾讯健康】29-创建订单-str预约人名称为int-失败
2020-12-28 20:20:33,978-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":999.99,"bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:33,980-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:34,016-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:34,018-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:34,093-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '160', 'orderPrice': 3000100, 'receiptNo': '160'}, 'message': '成功'}
2020-12-28 20:20:34,095-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.114934s
2020-12-28 20:20:34,096-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:20:35,144-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:35,145-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:35,151-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:35,152-[INFO]-logger.py-Unit_test-日志信息:正在执行第95条用例:【腾讯健康】30-创建订单-预约人名称字段缺少-失败
2020-12-28 20:20:35,153-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:35,155-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:35,188-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:35,190-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:35,218-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{bookingName:预约人名称不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:35,221-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.065252s
2020-12-28 20:20:35,223-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{bookingName:预约人名称不能为空 }
2020-12-28 20:20:35,226-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:35,228-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.065252, 'data': '{bookingName:预约人名称不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:36,268-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:36,269-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:36,271-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:36,272-[INFO]-logger.py-Unit_test-日志信息:正在执行第96条用例:【腾讯健康】31-创建订单-str预约人手机为int-失败
2020-12-28 20:20:36,273-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":15258814180,"cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:36,274-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:36,319-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:36,320-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:36,397-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '161', 'orderPrice': 3000100, 'receiptNo': '161'}, 'message': '成功'}
2020-12-28 20:20:36,399-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.124928s
2020-12-28 20:20:36,400-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:20:37,412-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:37,413-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:37,418-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:37,419-[INFO]-logger.py-Unit_test-日志信息:正在执行第97条用例:【腾讯健康】32-创建订单-预约人手机字段缺失-失败
2020-12-28 20:20:37,421-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:37,422-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:37,453-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:37,454-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:37,494-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{bookingPhone:预约人电话不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:37,495-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.073971s
2020-12-28 20:20:37,496-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{bookingPhone:预约人电话不能为空 }
2020-12-28 20:20:37,498-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:37,499-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.073971, 'data': '{bookingPhone:预约人电话不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:38,520-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:38,522-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:38,523-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:38,524-[INFO]-logger.py-Unit_test-日志信息:正在执行第98条用例:【腾讯健康】33-创建订单-无效预约人手机-失败
2020-12-28 20:20:38,526-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"11111111111","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:38,528-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:38,594-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:38,595-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:38,677-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '162', 'orderPrice': 3000100, 'receiptNo': '162'}, 'message': '成功'}
2020-12-28 20:20:38,678-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.150972s
2020-12-28 20:20:38,679-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:20:39,722-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:39,724-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:39,728-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:39,729-[INFO]-logger.py-Unit_test-日志信息:正在执行第99条用例:【腾讯健康】34-创建订单-str身份证号码为int-失败
2020-12-28 20:20:39,730-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":330184199805016406,"cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:39,733-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:39,770-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:39,772-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:39,853-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '163', 'orderPrice': 3000100, 'receiptNo': '163'}, 'message': '成功'}
2020-12-28 20:20:39,855-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.121613s
2020-12-28 20:20:39,856-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:20:40,858-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:40,859-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:40,863-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:40,864-[INFO]-logger.py-Unit_test-日志信息:正在执行第100条用例:【腾讯健康】35-创建订单-身份证号码字段缺失-失败
2020-12-28 20:20:40,865-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:40,868-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:40,891-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:40,893-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:40,927-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{cardId:证件号不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:40,929-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.060943s
2020-12-28 20:20:40,930-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{cardId:证件号不能为空 }
2020-12-28 20:20:40,931-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:40,932-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.060943, 'data': '{cardId:证件号不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:41,923-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:41,924-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:41,925-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:41,927-[INFO]-logger.py-Unit_test-日志信息:正在执行第101条用例:【腾讯健康】36-创建订单-无效身份证号码-失败
2020-12-28 20:20:41,928-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"999999999999999999","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:41,930-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:41,966-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:41,967-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:42,045-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '164', 'orderPrice': 3000100, 'receiptNo': '164'}, 'message': '成功'}
2020-12-28 20:20:42,047-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.116613s
2020-12-28 20:20:42,048-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:20:43,070-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:43,072-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:43,076-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:43,078-[INFO]-logger.py-Unit_test-日志信息:正在执行第102条用例:【腾讯健康】37-创建订单-int证件类型为str-失败
2020-12-28 20:20:43,079-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":"1","couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:43,081-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:43,127-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:43,128-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:43,204-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '165', 'orderPrice': 3000100, 'receiptNo': '165'}, 'message': '成功'}
2020-12-28 20:20:43,205-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.12493s
2020-12-28 20:20:43,207-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:20:44,249-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:44,251-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:44,255-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:44,257-[INFO]-logger.py-Unit_test-日志信息:正在执行第103条用例:【腾讯健康】38-创建订单-证件类型字段缺失-失败
2020-12-28 20:20:44,258-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:44,260-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:44,294-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:44,295-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:44,324-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{cardType:证件类型不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:44,325-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.065971s
2020-12-28 20:20:44,327-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{cardType:证件类型不能为空 }
2020-12-28 20:20:44,329-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:44,330-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.065971, 'data': '{cardType:证件类型不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:45,384-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:45,385-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:45,386-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:45,387-[INFO]-logger.py-Unit_test-日志信息:正在执行第104条用例:【腾讯健康】39-创建订单-无效证件类型-失败
2020-12-28 20:20:45,389-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":999.99,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:45,390-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:45,415-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:45,417-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:45,487-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '10001', 'errorMsg': "org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1\n### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline\n### The error occurred while setting parameters\n### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )\n### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1\n; Data truncation: Out of range value for column 'card_type' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1\norg.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1\n### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline\n### The error occurred while setting parameters\n### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )\n### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1\n; Data truncation: Out of range value for column 'card_type' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1\n\tat org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n\tat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)\n\tat com.sun.proxy.$Proxy127.insert(Unknown Source)\n\tat org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\n\tat com.sun.proxy.$Proxy158.insertSelective(Unknown Source)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl.createOrder(TencentOrderBizServiceImpl.java:178)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$FastClassBySpringCGLIB$$7963c5a4.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$EnhancerBySpringCGLIB$$7855f545.createOrder(<generated>)\n\tat org.apache.dubbo.common.bytecode.Wrapper112.invokeMethod(Wrapper112.java)\n\tat org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)\n\tat org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)\n\tat org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)\n\tat org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)\n\tat org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:105)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:149)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)\n\tat org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)\n\tat org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)\n\tat org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:823)\nCaused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3876)\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)\n\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2478)\n\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2625)\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2551)\n\tat com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)\n\tat com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)\n\tat com.alibaba.druid.filter.FilterAdapter.preparedStatement_execute(FilterAdapter.java:1080)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)\n\tat com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)\n\tat org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)\n\tat org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)\n\tat sun.reflect.GeneratedMethodAccessor585.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)\n\tat com.sun.proxy.$Proxy229.update(Unknown Source)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)\n\tat sun.reflect.GeneratedMethodAccessor584.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)\n\t... 40 more\n", 'result': None, 'success': False}
2020-12-28 20:20:45,493-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.102973s
2020-12-28 20:20:45,495-[INFO]-logger.py-Unit_test-日志信息:接口返回message:org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1
### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline
### The error occurred while setting parameters
### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1
; Data truncation: Out of range value for column 'card_type' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1
### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline
### The error occurred while setting parameters
### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       values ( ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                       ?,                              ?,                       ?,                       now() )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1
; Data truncation: Out of range value for column 'card_type' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy127.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy158.insertSelective(Unknown Source)
	at com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl.createOrder(TencentOrderBizServiceImpl.java:178)
	at com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$FastClassBySpringCGLIB$$7963c5a4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$EnhancerBySpringCGLIB$$7855f545.createOrder(<generated>)
	at org.apache.dubbo.common.bytecode.Wrapper112.invokeMethod(Wrapper112.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
	at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:105)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:149)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
	at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:823)
Caused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'card_type' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3876)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2478)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2625)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2551)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_execute(FilterAdapter.java:1080)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.GeneratedMethodAccessor585.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy229.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor584.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 40 more

2020-12-28 20:20:45,499-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：10001
2020-12-28 20:20:46,549-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:46,550-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:46,554-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:46,556-[INFO]-logger.py-Unit_test-日志信息:正在执行第105条用例:【腾讯健康】40-创建订单-int优惠券额度为str-失败
2020-12-28 20:20:46,558-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":"100","couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:46,559-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:46,598-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:46,599-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:46,672-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '166', 'orderPrice': 3000100, 'receiptNo': '166'}, 'message': '成功'}
2020-12-28 20:20:46,673-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.113935s
2020-12-28 20:20:46,674-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:20:47,676-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:47,677-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:47,682-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:47,684-[INFO]-logger.py-Unit_test-日志信息:正在执行第106条用例:【腾讯健康】41-创建订单-优惠券额度字段缺失-失败
2020-12-28 20:20:47,685-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:47,686-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:47,732-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:47,733-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:47,766-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{couponFee:优惠总金额不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:47,767-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.081531s
2020-12-28 20:20:47,768-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{couponFee:优惠总金额不能为空 }
2020-12-28 20:20:47,769-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:47,770-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.081531, 'data': '{couponFee:优惠总金额不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:48,808-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:48,809-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:48,810-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:48,811-[INFO]-logger.py-Unit_test-日志信息:正在执行第107条用例:【腾讯健康】42-创建订单-无效优惠券额度-失败
2020-12-28 20:20:48,813-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":999.99999,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:48,814-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:48,860-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:48,862-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:48,939-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '167', 'orderPrice': 3000100, 'receiptNo': '167'}, 'message': '成功'}
2020-12-28 20:20:48,940-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.125942s
2020-12-28 20:20:48,941-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:20:50,006-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:50,007-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:50,012-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:50,013-[INFO]-logger.py-Unit_test-日志信息:正在执行第108条用例:【腾讯健康】43-创建订单-int婚姻状态为str-失败
2020-12-28 20:20:50,014-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":"1","medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:50,016-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:50,057-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:50,058-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:50,132-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '168', 'orderPrice': 3000100, 'receiptNo': '168'}, 'message': '成功'}
2020-12-28 20:20:50,133-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.116935s
2020-12-28 20:20:50,134-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:20:51,178-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:51,179-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:51,186-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:51,187-[INFO]-logger.py-Unit_test-日志信息:正在执行第109条用例:【腾讯健康】44-创建订单-婚姻状态字段缺失-失败
2020-12-28 20:20:51,189-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:51,191-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:51,235-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:51,237-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:51,260-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{marriageStatus:婚姻状况不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:51,261-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.071131s
2020-12-28 20:20:51,262-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{marriageStatus:婚姻状况不能为空 }
2020-12-28 20:20:51,263-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:51,265-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.071131, 'data': '{marriageStatus:婚姻状况不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:52,257-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:52,258-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:52,259-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:52,260-[INFO]-logger.py-Unit_test-日志信息:正在执行第110条用例:【腾讯健康】45-创建订单-无效婚姻字段-失败
2020-12-28 20:20:52,262-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":999.99,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:52,263-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:52,298-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:52,300-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:52,367-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '10001', 'errorMsg': "org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1\n### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline\n### The error occurred while setting parameters\n### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )\n### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1\n; Data truncation: Out of range value for column 'marriage_status' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1\norg.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1\n### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline\n### The error occurred while setting parameters\n### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )\n### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1\n; Data truncation: Out of range value for column 'marriage_status' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1\n\tat org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n\tat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)\n\tat com.sun.proxy.$Proxy127.insert(Unknown Source)\n\tat org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\n\tat com.sun.proxy.$Proxy158.insertSelective(Unknown Source)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl.createOrder(TencentOrderBizServiceImpl.java:178)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$FastClassBySpringCGLIB$$7963c5a4.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$EnhancerBySpringCGLIB$$7855f545.createOrder(<generated>)\n\tat org.apache.dubbo.common.bytecode.Wrapper112.invokeMethod(Wrapper112.java)\n\tat org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)\n\tat org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)\n\tat org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)\n\tat org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)\n\tat org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:105)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:149)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)\n\tat org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)\n\tat org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)\n\tat org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:823)\nCaused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3876)\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)\n\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2478)\n\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2625)\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2551)\n\tat com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)\n\tat com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)\n\tat com.alibaba.druid.filter.FilterAdapter.preparedStatement_execute(FilterAdapter.java:1080)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)\n\tat com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)\n\tat org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)\n\tat org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)\n\tat sun.reflect.GeneratedMethodAccessor585.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)\n\tat com.sun.proxy.$Proxy229.update(Unknown Source)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)\n\tat sun.reflect.GeneratedMethodAccessor584.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)\n\t... 40 more\n", 'result': None, 'success': False}
2020-12-28 20:20:52,372-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.108926s
2020-12-28 20:20:52,373-[INFO]-logger.py-Unit_test-日志信息:接口返回message:org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1
### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline
### The error occurred while setting parameters
### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1
; Data truncation: Out of range value for column 'marriage_status' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1
### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline
### The error occurred while setting parameters
### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1
; Data truncation: Out of range value for column 'marriage_status' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy127.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy158.insertSelective(Unknown Source)
	at com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl.createOrder(TencentOrderBizServiceImpl.java:178)
	at com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$FastClassBySpringCGLIB$$7963c5a4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$EnhancerBySpringCGLIB$$7855f545.createOrder(<generated>)
	at org.apache.dubbo.common.bytecode.Wrapper112.invokeMethod(Wrapper112.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
	at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:105)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:149)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
	at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:823)
Caused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'marriage_status' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3876)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2478)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2625)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2551)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_execute(FilterAdapter.java:1080)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.GeneratedMethodAccessor585.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy229.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor584.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 40 more

2020-12-28 20:20:52,379-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：10001
2020-12-28 20:20:53,418-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:53,420-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:53,424-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:53,425-[INFO]-logger.py-Unit_test-日志信息:正在执行第111条用例:【腾讯健康】46-创建订单-str预约时间为int-失败
2020-12-28 20:20:53,426-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":20201230,"name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:53,428-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:53,451-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:53,453-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:53,535-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '169', 'orderPrice': 3000100, 'receiptNo': '169'}, 'message': '成功'}
2020-12-28 20:20:53,536-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.107938s
2020-12-28 20:20:53,537-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:20:54,558-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:54,559-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:54,563-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:54,564-[INFO]-logger.py-Unit_test-日志信息:正在执行第112条用例:【腾讯健康】47-创建订单-预约时间字段缺失-失败
2020-12-28 20:20:54,565-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:54,568-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:54,591-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:54,592-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:54,623-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{medicalTime:体检日期不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:54,625-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.056975s
2020-12-28 20:20:54,626-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{medicalTime:体检日期不能为空 }
2020-12-28 20:20:54,627-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:54,628-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.056975, 'data': '{medicalTime:体检日期不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:55,634-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:55,635-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:55,637-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:55,638-[INFO]-logger.py-Unit_test-日志信息:正在执行第113条用例:【腾讯健康】48-创建订单-无效预约时间-失败
2020-12-28 20:20:55,640-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"99999-99-99","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:55,641-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:55,676-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:55,678-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:55,750-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '170', 'orderPrice': 3000100, 'receiptNo': '170'}, 'message': '成功'}
2020-12-28 20:20:55,755-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.111626s
2020-12-28 20:20:55,760-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:20:56,773-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:56,775-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:56,779-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:56,780-[INFO]-logger.py-Unit_test-日志信息:正在执行第114条用例:【腾讯健康】49-创建订单-str预约人名字为int-失败
2020-12-28 20:20:56,781-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":9999,"orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:56,783-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:56,821-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:56,822-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:56,896-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '171', 'orderPrice': 3000100, 'receiptNo': '171'}, 'message': '成功'}
2020-12-28 20:20:56,898-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.114997s
2020-12-28 20:20:56,899-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:20:57,918-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:57,920-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:57,924-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:57,925-[INFO]-logger.py-Unit_test-日志信息:正在执行第115条用例:【腾讯健康】50-创建订单-预约人名字字段缺失-失败
2020-12-28 20:20:57,926-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:57,929-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:57,973-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:57,975-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:58,011-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{name:体检人姓名不能为空 }', 'result': None, 'success': False}
2020-12-28 20:20:58,012-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.082559s
2020-12-28 20:20:58,013-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{name:体检人姓名不能为空 }
2020-12-28 20:20:58,014-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:20:58,015-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.082559, 'data': '{name:体检人姓名不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:20:59,024-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:20:59,025-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:20:59,027-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:20:59,028-[INFO]-logger.py-Unit_test-日志信息:正在执行第116条用例:【腾讯健康】51-创建订单-str机构ID为int-失败
2020-12-28 20:20:59,030-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":518.99,"orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:20:59,031-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:20:59,066-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:20:59,067-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:20:59,103-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 20273, 'data': None, 'message': '机构已下架'}
2020-12-28 20:20:59,104-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.073946s
2020-12-28 20:20:59,105-[INFO]-logger.py-Unit_test-日志信息:接口返回message:机构已下架
2020-12-28 20:20:59,107-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：20273
2020-12-28 20:21:00,136-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:00,138-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:00,142-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:00,143-[INFO]-logger.py-Unit_test-日志信息:正在执行第117条用例:【腾讯健康】52-创建订单-机构ID字段为空-失败
2020-12-28 20:21:00,144-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:00,149-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:00,202-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:00,203-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:00,233-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{orgId:机构ID不能为空 }', 'result': None, 'success': False}
2020-12-28 20:21:00,234-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.086962s
2020-12-28 20:21:00,235-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{orgId:机构ID不能为空 }
2020-12-28 20:21:00,237-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:21:00,238-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.086962, 'data': '{orgId:机构ID不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:21:01,249-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:01,250-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:01,252-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:01,253-[INFO]-logger.py-Unit_test-日志信息:正在执行第118条用例:【腾讯健康】53-创建订单-无效机构ID字段-失败
2020-12-28 20:21:01,254-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"99987.988","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:01,256-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:01,300-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:01,302-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:01,352-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 20273, 'data': None, 'message': '机构已下架'}
2020-12-28 20:21:01,354-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.098931s
2020-12-28 20:21:01,355-[INFO]-logger.py-Unit_test-日志信息:接口返回message:机构已下架
2020-12-28 20:21:01,356-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：20273
2020-12-28 20:21:02,355-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:02,357-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:02,361-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:02,362-[INFO]-logger.py-Unit_test-日志信息:正在执行第119条用例:【腾讯健康】54-创建订单-str机构名称为int-失败
2020-12-28 20:21:02,363-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":9879797.99,"packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:02,368-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:02,405-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:02,406-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:02,488-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '172', 'orderPrice': 3000100, 'receiptNo': '172'}, 'message': '成功'}
2020-12-28 20:21:02,491-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.123911s
2020-12-28 20:21:02,494-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:21:03,565-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:03,566-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:03,571-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:03,572-[INFO]-logger.py-Unit_test-日志信息:正在执行第120条用例:【腾讯健康】55-创建订单-机构名称字段缺失-失败
2020-12-28 20:21:03,573-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:03,577-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:03,621-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:03,622-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:03,650-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{orgName:机构名称不能为空 }', 'result': None, 'success': False}
2020-12-28 20:21:03,651-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.074955s
2020-12-28 20:21:03,653-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{orgName:机构名称不能为空 }
2020-12-28 20:21:03,654-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:21:03,655-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.074955, 'data': '{orgName:机构名称不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:21:04,661-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:04,663-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:04,664-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:04,666-[INFO]-logger.py-Unit_test-日志信息:正在执行第121条用例:【腾讯健康】56-创建订单-str套餐ID为int-失败
2020-12-28 20:21:04,667-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:04,668-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:04,700-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:04,702-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:04,780-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '173', 'orderPrice': 3000100, 'receiptNo': '173'}, 'message': '成功'}
2020-12-28 20:21:04,781-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.113836s
2020-12-28 20:21:04,783-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:21:05,778-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:05,779-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:05,784-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:05,785-[INFO]-logger.py-Unit_test-日志信息:正在执行第122条用例:【腾讯健康】57-创建订单-套餐ID字段缺失-失败
2020-12-28 20:21:05,786-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:05,789-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:05,823-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:05,824-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:05,858-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{packageId:套餐ID不能为空 }', 'result': None, 'success': False}
2020-12-28 20:21:05,860-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.070972s
2020-12-28 20:21:05,861-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{packageId:套餐ID不能为空 }
2020-12-28 20:21:05,862-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:21:05,863-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.070972, 'data': '{packageId:套餐ID不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:21:06,839-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:06,840-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:06,841-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:06,842-[INFO]-logger.py-Unit_test-日志信息:正在执行第123条用例:【腾讯健康】58-创建订单-错误套餐ID-失败
2020-12-28 20:21:06,843-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":9999,"packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:06,845-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:06,890-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:06,892-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:06,943-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 20146, 'data': None, 'message': '套餐不存在'}
2020-12-28 20:21:06,944-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.099494s
2020-12-28 20:21:06,945-[INFO]-logger.py-Unit_test-日志信息:接口返回message:套餐不存在
2020-12-28 20:21:06,947-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20146
2020-12-28 20:21:06,948-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.099494, 'data': '套餐不存在', 'code': '20146', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:21:07,963-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:07,965-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:07,966-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:07,968-[INFO]-logger.py-Unit_test-日志信息:正在执行第124条用例:【腾讯健康】59-创建订单-str套餐名称为int-失败
2020-12-28 20:21:07,969-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"76","packageName":222,"phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:07,971-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:08,021-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:08,022-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:08,097-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 1, 'orderId': '174', 'orderPrice': 1, 'receiptNo': '174'}, 'message': '成功'}
2020-12-28 20:21:08,100-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.127934s
2020-12-28 20:21:08,104-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:21:09,124-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:09,125-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:09,129-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:09,130-[INFO]-logger.py-Unit_test-日志信息:正在执行第125条用例:【腾讯健康】60-创建订单-套餐名称字段缺失-失败
2020-12-28 20:21:09,131-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:09,134-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:09,182-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:09,183-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:09,218-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{packageName:套餐名称不能为空 }', 'result': None, 'success': False}
2020-12-28 20:21:09,219-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.084911s
2020-12-28 20:21:09,220-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{packageName:套餐名称不能为空 }
2020-12-28 20:21:09,221-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:21:09,222-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.084911, 'data': '{packageName:套餐名称不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:21:10,313-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:10,314-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:10,315-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:10,317-[INFO]-logger.py-Unit_test-日志信息:正在执行第126条用例:【腾讯健康】61-创建订单-错误套餐名称-失败
2020-12-28 20:21:10,318-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"99999","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:10,320-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:10,353-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:10,354-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:10,410-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 20302, 'data': None, 'message': '套餐名与预期不符'}
2020-12-28 20:21:10,411-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.091955s
2020-12-28 20:21:10,412-[INFO]-logger.py-Unit_test-日志信息:接口返回message:套餐名与预期不符
2020-12-28 20:21:10,413-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20302
2020-12-28 20:21:10,414-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.091955, 'data': '套餐名与预期不符', 'code': '20302', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:21:11,401-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:11,402-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:11,403-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:11,405-[INFO]-logger.py-Unit_test-日志信息:正在执行第127条用例:【腾讯健康】62-创建订单-str手机号为int-失败
2020-12-28 20:21:11,406-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":15258814180,"profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:11,408-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:11,453-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:11,455-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:11,539-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '175', 'orderPrice': 3000100, 'receiptNo': '175'}, 'message': '成功'}
2020-12-28 20:21:11,540-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.132916s
2020-12-28 20:21:11,542-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:21:12,589-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:12,590-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:12,594-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:12,595-[INFO]-logger.py-Unit_test-日志信息:正在执行第128条用例:【腾讯健康】63-创建订单-手机号字段缺失-失败
2020-12-28 20:21:12,597-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:12,599-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:12,647-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:12,648-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:12,699-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '20000', 'errorMsg': '{phone:电话不能为空 }', 'result': None, 'success': False}
2020-12-28 20:21:12,700-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.100925s
2020-12-28 20:21:12,701-[INFO]-logger.py-Unit_test-日志信息:接口返回message:{phone:电话不能为空 }
2020-12-28 20:21:12,702-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:20000
2020-12-28 20:21:12,703-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.100925, 'data': '{phone:电话不能为空 }', 'code': '20000', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:21:13,807-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:13,808-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:13,810-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:13,811-[INFO]-logger.py-Unit_test-日志信息:正在执行第129条用例:【腾讯健康】64-创建订单-无效手机号字段-失败
2020-12-28 20:21:13,812-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"11111111111","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:13,813-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:13,848-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:13,849-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:13,915-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '176', 'orderPrice': 3000100, 'receiptNo': '176'}, 'message': '成功'}
2020-12-28 20:21:13,916-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.102942s
2020-12-28 20:21:13,917-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:21:15,016-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:15,017-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:15,021-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:15,022-[INFO]-logger.py-Unit_test-日志信息:正在执行第130条用例:【腾讯健康】65-创建订单-int是否为分账单为str-失败
2020-12-28 20:21:15,023-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":"1","reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:15,025-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:15,058-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:15,059-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:15,132-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '177', 'orderPrice': 3000100, 'receiptNo': '177'}, 'message': '成功'}
2020-12-28 20:21:15,135-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.108947s
2020-12-28 20:21:15,139-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:21:16,295-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:16,296-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:16,300-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:16,301-[INFO]-logger.py-Unit_test-日志信息:正在执行第131条用例:【腾讯健康】66-创建订单-是否为分账单字段缺失-失败
2020-12-28 20:21:16,303-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:16,304-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:16,330-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:16,332-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:16,401-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '178', 'orderPrice': 3000100, 'receiptNo': '178'}, 'message': '成功'}
2020-12-28 20:21:16,402-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.097931s
2020-12-28 20:21:16,403-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:21:17,509-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:17,510-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:17,514-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:17,516-[INFO]-logger.py-Unit_test-日志信息:正在执行第132条用例:【腾讯健康】67-创建订单-无效分账字段-失败
2020-12-28 20:21:17,517-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":999.99,"reportAddress":"邮件纸质报告地址","reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:17,519-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:17,542-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:17,543-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:17,601-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': '10001', 'errorMsg': "org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1\n### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline\n### The error occurred while setting parameters\n### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )\n### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1\n; Data truncation: Out of range value for column 'profitsharing' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1\norg.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1\n### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline\n### The error occurred while setting parameters\n### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )\n### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1\n; Data truncation: Out of range value for column 'profitsharing' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1\n\tat org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n\tat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)\n\tat com.sun.proxy.$Proxy127.insert(Unknown Source)\n\tat org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\n\tat com.sun.proxy.$Proxy158.insertSelective(Unknown Source)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl.createOrder(TencentOrderBizServiceImpl.java:178)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$FastClassBySpringCGLIB$$7963c5a4.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)\n\tat com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$EnhancerBySpringCGLIB$$7855f545.createOrder(<generated>)\n\tat org.apache.dubbo.common.bytecode.Wrapper112.invokeMethod(Wrapper112.java)\n\tat org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)\n\tat org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)\n\tat org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)\n\tat org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)\n\tat org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:105)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:149)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)\n\tat org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)\n\tat org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)\n\tat org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:823)\nCaused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3876)\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)\n\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2478)\n\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2625)\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2551)\n\tat com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)\n\tat com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)\n\tat com.alibaba.druid.filter.FilterAdapter.preparedStatement_execute(FilterAdapter.java:1080)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)\n\tat com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)\n\tat com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)\n\tat org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)\n\tat org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)\n\tat sun.reflect.GeneratedMethodAccessor585.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)\n\tat com.sun.proxy.$Proxy229.update(Unknown Source)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)\n\tat sun.reflect.GeneratedMethodAccessor584.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)\n\t... 40 more\n", 'result': None, 'success': False}
2020-12-28 20:21:17,608-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.089964s
2020-12-28 20:21:17,609-[INFO]-logger.py-Unit_test-日志信息:接口返回message:org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1
### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline
### The error occurred while setting parameters
### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1
; Data truncation: Out of range value for column 'profitsharing' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1
### The error may involve com.helian.healthmanage.mallbiz.dao.mapper.TencentOrderHistoryDoMapper.insertSelective-Inline
### The error occurred while setting parameters
### SQL: insert into tencent_order_history      ( user_id,                       booking_name,                       booking_phone,                       org_id,                       org_name,                       package_id,                       package_name,                       medical_time,                       name,                       card_type,                       card_id,                       sex,                       birthday,                       age,                       marriage_status,                       report_type,                       phone,                       report_receiver,                       report_address,                       time,                       profitsharing,                       used_coupon,                       coupon_fee,                       coupon_info,                              fee,                       order_status,                       update_time )       valuesnow() )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1
; Data truncation: Out of range value for column 'profitsharing' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy127.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy158.insertSelective(Unknown Source)
	at com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl.createOrder(TencentOrderBizServiceImpl.java:178)
	at com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$FastClassBySpringCGLIB$$7963c5a4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.helian.healthmanage.mallbiz.service.impl.orderextend.TencentOrderBizServiceImpl$$EnhancerBySpringCGLIB$$7855f545.createOrder(<generated>)
	at org.apache.dubbo.common.bytecode.Wrapper112.invokeMethod(Wrapper112.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
	at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:105)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:149)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
	at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:823)
Caused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'profitsharing' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3876)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2478)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2625)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2551)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_execute(FilterAdapter.java:1080)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.GeneratedMethodAccessor585.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy229.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor584.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 40 more

2020-12-28 20:21:17,618-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：10001
2020-12-28 20:21:18,748-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:18,749-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:18,754-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:18,755-[INFO]-logger.py-Unit_test-日志信息:正在执行第133条用例:【腾讯健康】68-创建订单-str报告地址为int-失败
2020-12-28 20:21:18,756-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":9999999999.99,"reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:18,758-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:18,806-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:18,808-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:18,887-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '179', 'orderPrice': 3000100, 'receiptNo': '179'}, 'message': '成功'}
2020-12-28 20:21:18,891-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.131927s
2020-12-28 20:21:18,894-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:21:19,928-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:19,929-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:19,934-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:19,936-[INFO]-logger.py-Unit_test-日志信息:正在执行第134条用例:【腾讯健康】69-创建订单-报告地址字段缺失-成功
2020-12-28 20:21:19,937-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportReceiver":"邮件纸质报告收件人","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:19,938-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:19,962-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:19,964-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:20,039-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '180', 'orderPrice': 3000100, 'receiptNo': '180'}, 'message': '成功'}
2020-12-28 20:21:20,040-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.101931s
2020-12-28 20:21:20,041-[INFO]-logger.py-Unit_test-日志信息:用例code比对成功！实际返回:0
2020-12-28 20:21:20,043-[INFO]-logger.py-Unit_test-日志信息:返回数据写入excel{'time': 0.101931, 'data': {'orderCountPrice': 3000100, 'orderId': '180', 'orderPrice': 3000100, 'receiptNo': '180'}, 'code': '0', 'result': 'pass', 'sql_result': 'pass'}
2020-12-28 20:21:21,045-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:21,046-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:21,047-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:21,049-[INFO]-logger.py-Unit_test-日志信息:正在执行第135条用例:【腾讯健康】70-创建订单-str报告收件人int-失败
2020-12-28 20:21:21,050-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportReceiver":9999999.99,"reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:21,052-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:21,088-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:21,089-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:21,166-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '181', 'orderPrice': 3000100, 'receiptNo': '181'}, 'message': '成功'}
2020-12-28 20:21:21,168-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.116918s
2020-12-28 20:21:21,169-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:21:22,180-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:22,182-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
2020-12-28 20:21:22,187-[INFO]-logger.py-Unit_test-日志信息:============我要开始测试了===============
2020-12-28 20:21:22,188-[INFO]-logger.py-Unit_test-日志信息:正在执行第136条用例:【腾讯健康】71-创建订单-报告收件人字段缺失-成功
2020-12-28 20:21:22,189-[INFO]-logger.py-Unit_test-日志信息:当前请求内容_URL：http://b2htest.helianhealth.com/healthmanage-web/tencent/order/apply；method：POST；data：{"age":18,"birthday":"1998-01-01","bookingName":"接口测试","bookingPhone":"15258814180","cardId":"330184199805016406","cardType":1,"couponFee":100,"couponInfo":[],"marriageStatus":1,"medicalTime":"2020-12-30","name":"aaa","orgId":"HL00001","orgName":"铜陵市中医医院","packageId":"5","packageName":"测试商品套餐001","phone":"15258814180","profitsharing":1,"reportAddress":"邮件纸质报告地址","reportType":0,"sex":2,"time":"","usedCoupon":0,"userId":"zgh001"}；sql：{}
2020-12-28 20:21:22,191-[INFO]-logger.py-all_method-日志信息:今天时间戳：2020-12-28,1609160400000
2020-12-28 20:21:22,243-[INFO]-logger.py-all_method-日志信息:header获取返回:{'uid': '17200000090', 'token': '70fde9a9a2a19cf0718a690ba099c12c121', 'god-portal-signature': 'c517aefa3e2ddcba789a60d47609369b540fd0d9502d1e212f6c6ea498b874b7', 'god-portal-timestamp': '1608261499685', 'god-portal-request-id': '6f02e800-3ebb-11eb-b067-e9a8515afd05'}
2020-12-28 20:21:22,244-[INFO]-logger.py-httpRequest-日志信息:现在开始进行post,body格式请求
2020-12-28 20:21:22,323-[INFO]-logger.py-httpRequest-日志信息:请求返回：{'code': 0, 'data': {'orderCountPrice': 3000100, 'orderId': '182', 'orderPrice': 3000100, 'receiptNo': '182'}, 'message': '成功'}
2020-12-28 20:21:22,324-[INFO]-logger.py-Unit_test-日志信息:Testing complete in 0.132937s
2020-12-28 20:21:22,325-[INFO]-logger.py-Unit_test-日志信息:用例code比对失败！实际返回：0
2020-12-28 20:21:23,352-[INFO]-logger.py-writeExcel-日志信息:执行写入excel成功！
2020-12-28 20:21:23,353-[INFO]-logger.py-Unit_test-日志信息:===============我要结束测试了！==================
